{"_type":"post","_createdAt":"2023-09-13T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/a-lede-virksomheter-gjennom-endringer/hero.webp"},"title":"Å lede virksomheter gjennom endringer","author":"Anita Jenbergsen","description":"Å lede virksomheter gjennom endringer","publishedAt":"2023-09-13T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"For litt siden snakket jeg med en tidligere kollega av meg som sa noe som gjorde meg utrolig glad:"}]},{"_type":"block","style":"blockquote","markDefs":[],"children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"“Hos oss jobber tjenestedesign hånd i hånd med endringsledelse, hvor de utfyller hverandre. UX mer på innsikt og MVP og endringsleder mer på en strukturert tilnærming med å lede ansatte og organisasjon gjennom en endringsprosess. Er det noe dere er opptatt av, lede virksomheter gjennom endringer?”"},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Jeg ble så lettet av å høre at de ser verdien av å bruke tjenestedesign og brukersentrert tilnærming i kombinasjon med endringsledelse. Hvorfor det?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Jo fordi, involvering av ansatte som blir berørt av endringen er nøkkelen til en suksessfull endring."},{"_type":"span","marks":[],"text":" Men involveringen må skje underveis, og ikke først når det er bestemt hva løsningen skal være."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Designere løser problemer, men vi gjør det ikke isolert. Vi gjør det i samskaping med de som kjenner på problemene og som er berørt av dem. Ansatte skal også være med på å skape løsningene. Når de har vært med på å enes om hva som er vanskelig og hva som er et problem, og de sammen har vært med på å forme hva som skal være en løsning, så kommer ikke endringen på ansatte som en overraskelse."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Ledere og ansatte opplever problemene på forskjellig måte, og derfor er vi ikke enige om hva som er den rette løsningen"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I en virksomhet vil nok en leder og de ansatte kjenne igjen problemet, men de opplever det på forskjellig måte. Ansatte kan kjenne på at ledelsen ikke har engasjementet, at de ikke har rett fokus. Ledere kan kjenne på at de ansatte ikke forstår hva som er kritisk for virksomheten akkurat nå. De har ikke fugleperspektivet og ser ikke helheten."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Et problem kommer sjelden alene og med det mener jeg at når ting ikke fungerer på jobben så får det følgeproblemer eller konsekvenser. Da er det viktig å ha fokus på hva som er det egentlige problemet til at ting ikke fungerer som det skal, sånn at vi ikke løser symptomene."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Et resultat fra en endring er ofte nye digitale løsninger, men hvor man opplever at det ikke gir ansatte den effektiviteten og forenklingen den var ment å gi. Organisasjonsendringer, akkurat det samme. De ansatte gjør så godt de kan ved å finne seg til rette i en ny organisering, men de får det ikke helt til. De vet ikke hva de skal gjøre eller hva som er forventet av dem. De ansatte opplever at de ikke klarer å formidle til ledelsen hva som er nye utfordringer i organisasjonen, de opplever at de kun blir møtt med mistillit med tanke på at de ikke er endringsvillige."}]},{"_type":"block","style":"blockquote","markDefs":[],"children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"“Ja nå sitter vi her i denne avdelingen da med nytt navn da, jeg er ikke helt sikker på hva som er forventet at jeg skal gjøre annerledes, så jeg gjør det jeg alltid har gjort.”"},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"“Jeg er i en avdeling med oppgaver som jeg ikke har gjort før. Hvem er det som tar seg av det vi leverte på før nå? Hva er det forventet at jeg skal gjøre?”"},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Design er ikke kun det du ser med det blotte øye. Det må integreres som en del av selskapets DNA, språk, kultur, arbeidsprosesser og hverdag."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Så ja, Fryde er opptatt av å lede virksomheter gjennom endringer."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Design som endringsverktøy hos Statped"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I 2022 omorganiserte Statped seg fra å være regionalt til å bli heldekkende for hele Norge. Dette førte til nye kolleger i alle avdelinger som ble plassert over flere kontor i hele Norge, nye ledere, nye roller og nye beslutningsorganer."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hvordan skulle de ansatte nå samarbeide om saksbehandling og gjøre vedtak når gamle arenaer, beslutningspunkter og flyt var borte? Hvem skulle ta beslutninger nå, og hvordan skulle de samarbeide om en sak, var noe av spørsmålene som måtte løses?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"For å møte disse utfordringene, utviklet vi nye systemer og rutiner for håndtering av søknader og andre henvendelser."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Suksesskriteriene var:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Bred involvering og forankring av hele organisasjonen."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Sammen definerte mange ulike avdelinger og områder hva som opplevdes som deres problemområder"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Sammen kom vi frem til løsningsforslag via fysiske og digitale workshops, og ved å jobbe iterativt."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Aktiv forventningsstyring overfor styringsgruppa og tydeliggjøring av prosjektets scope var også en viktig bidragsyter for suksess."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Hva vi fikk til:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Raskere saksbehandling i antall dager"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Tidligere oppstart av tjenesten etter vedtak."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Det ble enklere og mer effektivt for PP-tjenesten å skrive en søknad. Vedlegg og obligatorisk dokumentasjon ble nedskalert til et minimum. Obligatoriske vedlegg forhindret PP-tjenesten å sende inn søknader, og mangel på vedlegg forsinket saksbehandlingsprosessen."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[{"_key":"370f85bc263d","_type":"link","href":"https://www.fryde.no/statped"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Se hele historien på Fryde "},{"_type":"span","marks":["370f85bc263d"],"text":"https://www.fryde.no/statped"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/a-lede-virksomheter-gjennom-endringer/plant.webp","alt":"Blader"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n  "},{"_type":"span","marks":[],"text":"Foto: Min An"},{"_type":"span","marks":[],"text":"\n"}]}],"tags":["Debatt","Fryde"]}
{"_type":"post","_createdAt":"2021-11-05T00:00:00.000+01:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/bokanmeldelse-effective-typescript.webp"},"title":"Bokanmeldelse: Effective TypeScript","author":"Jan Ove Kjærland","subtitle":"En lettlest og anvendelig bok for utvikleren som ønsker en bredere og praktisk forståelse av TypeScript. Hvorfor skal du foretrekke ukomplette typer fremfor unøyaktige typer? Hvordan kan man simulere nominelle typer i et strukturelt typesystem? Hva er et strukturelt typesystem? Effective TypeScript gir deg svarene.","description":"Anmeldelse av boksen Effective Typescript","publishedAt":"2021-11-05T00:00:00.000+01:00","body":[{"_type":"block","markDefs":[{"_key":"a6c1db77cdab","_type":"link","href":"https://twitter.com/danvdk"}],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"Effective TypeScript: 62 Specific Ways to Improve Your TypeScript"},{"_type":"span","marks":[],"text":", av "},{"_type":"span","marks":["a6c1db77cdab"],"text":"Dan Vanderkam"},{"_type":"span","marks":[],"text":", er akkurat det tittelen sier: en samling av råd for hvordan du kan jobbe effektivt med TypeScript. Boken er kort og kompakt, med konkrete og relevante eksempler. Det er nettopp dette bøker i "},{"_type":"span","marks":["em"],"text":"Effective-sjangeren"},{"_type":"span","marks":[],"text":" ønsker å være: De skal ikke være oppslagsverk til hvordan all funksjonaliteten i et språk funker. De skal forklare "},{"_type":"span","marks":["em"],"text":"hvilken"},{"_type":"span","marks":[],"text":" funksjonalitet du skal benytte deg av, og "},{"_type":"span","marks":["em"],"text":"hvorfor"},{"_type":"span","marks":[],"text":". "},{"_type":"span","marks":["em"],"text":"Effective TypeScript"},{"_type":"span","marks":[],"text":" leverer på dette løftet."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Mer enn definisjoner"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"De 62 rådene er gruppert i kapitler, og tar for seg ulike temaer: Grunnleggende om typesystemet og hvordan det relaterer til JavaScript, hvordan designe og strukturere korrekte, fleksible og vedlikeholdbare typer, hvordan migrere prosjekter til TypeScript, og mye mer. Hvert råd serveres som en påstand, og følges opp med gjennomtenkte begrunnelser og eksempler."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det varierer hvor høyt rådene scorer på eureka-skalaen, men her er det noe for enhver TypeScript-utvikler. Råd nummer fem, "},{"_type":"span","marks":["em"],"text":"Limit Use of the any Type"},{"_type":"span","marks":[],"text":", medfører kanskje ikke noe lyspære-over-hodet-øyeblikk, mens råd 32, "},{"_type":"span","marks":["em"],"text":"Prefer Unions of Interfaces to Interfaces of Unions"},{"_type":"span","marks":[],"text":", må kanskje leses mer enn én gang før det synker helt inn – selv for en erfaren utvikler. Uavhengig av nivået på rådet, er det uansett tilfredsstillende å få bekreftet – eller avkreftet – ens egen oppfatning om hva som er rett og galt. Det er nyttig å ha noe mer enn bare ens egen erfaring og magefølelse å lene seg på."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Tidløs tilnærming"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Som nevnt er boken ikke ment å være et oppslagsverk for TypeScript som språk, og går således ikke i dybden på typesystemet. Den lærer deg heller ikke hvordan skrive mer avanserte og komplekse typer, eller hvordan TypeScript fungerer under panseret. Det vil kanskje være et savn for enkelte, men det bringer også med seg en stor fordel: Siden boken, som kom ut i 2019, i liten grad lener seg på versjonsspesifikke detaljer ved TypeScript, vil den i mye større grad tåle tidens tann, og ikke risikere å bli like fort utdatert – som ofte er tendensen med teknologibøker."}]},{"_type":"block","markDefs":[{"_key":"5610fac90bf1","_type":"link","href":"https://effectivetypescript.com/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Boken får en varm anbefaling for alle utviklere som allerede har noen knagger å henge rådene på. Er du interessert i en smakebit, ligger noen av rådene tilgjengelige i sin helhet på "},{"_type":"span","marks":["5610fac90bf1"],"text":"nettstedet til boken"},{"_type":"span","marks":[],"text":". Her publiserer også forfatteren blogginnlegg med jevne mellomrom, som ofte beveger seg inn på mer avanserte temaer."}]}],"tags":["JavaScript","TypeScript","Frontend","Bokanmeldelse"]}
{"_type":"post","_createdAt":"2021-12-10T00:00:00.000+01:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/bokanmeldelse-tre-boker-innen-team-prosjekt-og-utviklingsledelse/hero.webp"},"title":"Bokanmeldelse: Tre bøker innen team-, prosjekt- og utviklingsledelse","author":"Gustav Dyngeseth","subtitle":"Korte oppsummeringer av tre favoritter boksirkelen i Capra har vært gjennom siste året. Dette er tre bøker vi setter enormt pris på både i vår daglige drift og ute hos våre kunder; vi påstår at dette er bøker med høy relevans for alle som jobber med IT.","description":"Gustav Dyngeseth fra Capra Consulting omtaler tre bøker innen TPU. Les dem her >>","publishedAt":"2021-12-10T00:00:00.000+01:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I Capra elsker vi faglitteratur. Vi verdsetter å dele kunnskap med hverandre, kunnskap basert på vitenskap kombinert med relevante erfaringer, og et hofteskudd i ny og ne. Derfor har vi en boksirkel som muliggjør kombinasjonen av alle disse faktorene i en uformell setting. Boksirkelen foregår månedlig, og involverer fagpersoner med ulike bakgrunner. Det er en super arena for å dele erfaringer og drøfte nye tanker fra moderne faglitteratur innen team-, prosjekt- og utviklingsledelse. Nedenfor er en kort oppsummering av tre favoritter vi har vært gjennom siste året."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Accelerate"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Denne boken gir deg sterke argumenter for hvorfor DevOps og smidig utviklingsmetodikk er forutsetninger for høypresterende utviklingsteam. Accelerate er basert på forskning, og gir deg en faglig tyngde i din søken etter å bygge selskaper og team som leverer på høyt nivå."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Accelerate påpeker at å måle Software Delivery Performance (SDP) med antall linjer kode, fart eller utnyttelse av ressurser er en dårlig idé. Helt konkret beviser boken en heller direkte sammenheng mellom SDP for et utviklingsteam og tre målbare metrikker: (1) delivery lead time, (2) deployment frequency og (3) time to restore."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Å måle ledetiden for endringer gir oss informasjon om teamets evne til å hurtig samle tilbakemeldinger på det de bygger og å tilpasse løsningen deretter raskere. Denne metrikken blir ofte målt som tiden det tar å gå fra kode committed til den kjører i produksjon."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Generelt er å redusere batch size et sentralt element i Lean: (i) det reduserer syklustiden og variansen i flyten, (ii) akselerer tilbakemeldinger, (iii) reduserer risiko og overhead, (iv) forbedrer effektivitet, (v) øker motivasjonen og følelsen av at noe haster, og (vi) reduserer kostnader og tilrettelegger vekst. Batch size er utfordrende å måle og kommunisere ettersom kode ikke har en umiddelbar synlig størrelse. Derfor kan det være lurt å måle deployment frequency som en stedfortreder for batch size, siden det er enklere å måle og har lav variasjon. Med deployment frequency mener boken hvor ofte organisasjonen deployer kode til produksjon."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Ved å måle mean time to restore får vi oversikt over hvor raskt tjenestene våre gjenopprettes ved eventuelle feil. I moderne programvareprodukter- og tjenester, som er komplekse systemer under endring, er feil uungåelig, så en nøkkelmetrikk blir dermed: hvor fort kan tjenesten vår gjenopprettes?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det nevnes en fjerde metrikk (i tillegg til de tre nevnte) i Accelerate som det ikke er bevist at har direkte sammenheng med SDP, men som det kan være fornuftig å vurdere allikevel. Det er change fail rate (i prosent). For å måle change fail rate kan man spørre teamet følgende: For tjenesten dere jobber på, hvor stor prosentandel av endringene i produksjon resulterer i nedetid og dermed krever utbedring i etterkant? Essensen i denne målingen er å få teamet til å være klar over at å agere på feil så tidlig som mulig, og å hente informasjon fra feil for å forbedre fremtidig arbeidsflyt, kan være en suksessfaktor."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Videre beviser Accelerate at SDP også har direkte sammenheng med (A) Continuous Delivery og (B) Culture:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"A. Continuous Delivery (CD) er definert som et sett med kapabiliteter som åpner for å få alle slags endringer - features, konfigurasjonsendringer, eksperimenter, bug fixes - i produksjon eller i hånden til sluttbrukeren trygt, raskt, og bærekraftig. I boken måles CD ved å vurdere teamets evne på følgende områder:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"Teamet kan deploye til produksjon (eller til sluttbrukeren) on-demand, gjennom hele syklusen av programvareleveransen."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"Kjapp tilbakemelding på kvaliteten og distribuerbarheten til systemet er tilgjengelig for alle i teamet, og medlemmene vurderer det som høyeste prioritet å agere på disse tilbakemeldingene."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"B. Kulturen til et selskap forutser SDP og suksessen til selskapet som en helhet. I boken påpeker forfatterne tre typer kulturer, den såkalte “Westrum”-topologien:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"Patologisk (makt-orientert)"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"Byråkratisk (regel-orientert)"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"Generativ (ytelses-orientert)"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Boken påpeker at et selskap burde etterstrebe en generativ kultur; et generativt team har høy samarbeidsvilje og fordeler ikke skyld når feil oppstår. Boken refererer til Google’s forskning “The five keys to successful Google team” som lyder lignende: “Hvem som er med på teamet betyr mindre enn hvordan teamet interagerer, strukturerer arbeidet sitt, og anser sine bidrag”. Videre bemerkes viktigheten av psykologisk trygghet for å kunne skape en generativ kultur."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hovedpremisset bak Accelerate er at elite software delivery performance gjør det dobbelt så sannsynlig at organisasjonen som en helhet presterer på et høyt nivå. Helt konkret vil selskaper som leverer programvare på et høyt (raskt) nivå ha to ganger så stor sannsynlighet for å nå målene sine innenfor (i) lønnsomhet, (ii) produktivitet, (iii) markedsandeler og (iv) antall kunder. Oppsummert gir Accelerate oss en rekke forskningsbaserte argumenter for hva som må på plass for å kunne øke software delivery performance for et team. En “must-read”, rett og slett!"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"The Five Dysfunctions of a Team"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Denne boken er skrevet av Patrick Lencioni og ansees som en ledende veileder verden rundt for hvordan man kan bygge sunne team med høy ytelse. Den tar for seg fem komponenter (dysfunksjoner) som må håndteres. De presenteres i en slags sammenhengende behovspyramide hvor nederste nivå må på håndteres for å kunne unngå dysfunksjonene i nivåene oppover i pyramiden. Dysfunksjonene (fra nederst til øverst i pyramiden) er: (1 - nederst) fravær av tillit, (2) frykt for konflikt, (3) mangel på engasjement, (4) unngåelse av ansvarlighet, og (5 - øverst) uoppmerksomhet på resultater."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Fraværet av tillit er det mest fellende kjennetegnet ved dysfunksjonelle team. Er ikke tilliten på plass finner vi ofte også de fire andre dysfunksjonene i et team. Frykten for å være sårbar hemmer team-medlemmene i å bygge tillit seg i mellom. Denne metrikken omhandler bl.a. i hvor stor grad team-medlemmer tør å (i)innrømme feil, (ii) erkjenner sine svakheter til hverandre, (iii) spør om hjelp uten å nøle, (iv) spør hverandre om input angående deres egne ansvarsområder, (v) unnskylder seg overfor hverandre, (vi) er ubevoktet og genuine med hverandre, og (vii) hvor komfortabel medlemmer er med å diskutere privatlivet sitt med seg i mellom."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Frykt for konflikt er noe de aller fleste kan kjenne seg igjen i. Lysten etter å bevare harmoni kveler produktive konflikter innad i teamet. Denne frykten kan bl.a. avdekkes ved å tenke over (i) i hvor stor grad medlemmer i teamet gir uttrykk for sine meninger til tross for risikoen for å skape uenighet, (ii) om medlemmene er engasjerte og ubevoktet i deres diskusjoner, (iii) om de viktigste og vanskeligste problemene diskuteres, (iv) om medlemmer kommuniserer upopulære meninger til teamet, (v) når en konflikt oppstår håndterer teamet den med det samme før de beveger seg videre til neste tema og (vi) medlemmene ber om hverandres meninger i møter."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Mangel på engasjement er ofte et resultat av mangel på klarhet og/eller buy-in som hindrer teamets medlemmer fra å ta avgjørelser de holder seg fast til. Graden av engasjement kan tolkes som i hvor stor grad medlemmer (i) forlater møter trygge på at alle blir med på løsningen teamet ble enige om å forplikte seg til, (ii) ender diskusjoner med klare og spesifikke resolusjoner og aksjonspunkter, (iii) er klare angående sin retning og prioriteringer, (iv) teamet er alignet rundt sine felles mål, (vi) forholder seg til og støtter avgjørelser også når de initielt var uenige og (vii) tar valg selv om perfekt informasjon ikke alltid er tilgjengelig."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Om teamet unngår å ansvarliggjøre hverandre er dette ofte et resultat av et behov for å unngå mellommenneskelig ubehag. Et slikt ubehag hindrer medlemmer fra å holde hverandre ansvarlig for deres handlinger og prestasjoner. I hvor stor grad et team ansvarliggjør hverandre internt kan bla. utledes ved å måle hvor ofte medlemmer (i) påpeker hverandres uproduktive adferd, (ii) er raske med å konfrontere medarbeidere om problemer innenfor deres respektive ansvarsområder, (iii) stiller spørsmål ved nåværende fremgangsmåter og metoder, (iv) konsistent følger opp lovnader og forpliktelser og (v) tilbyr uprovoserte, konstruktive tilbakemeldinger til hverandre."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Å være oppmerksom på resultater er mer krevende enn de fleste tror. Jakten på individuelle mål og personlig status kan fort tære på teamets fokus på kollektiv suksess. I hvor stor grad et team klarer å være oppmerksom nok på resultater kan bla. måles ved å undersøke hvor ofte medlemmer (i) kjapt påpeker andre sine bidrag og prestasjoner, (ii) om teamet har et rykte på seg for å prestere godt, (iii) hvor ofte hvert enkelt team medlem tar ansvar for å bedre prestasjonene til teamet når de mislykkes med å nå kollektive mål, (iv) hvor ofte medlemmer er villig til å gjøre ofre innenfor deres eget område for teamets beste, (v)hvor ofte teamet verdsetter kollektiv suksess fremfor individuelle prestasjoner og (vi) hvor ofte medlemmer plasserer lite viktighet i titler og status."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/bokanmeldelse-tre-boker-innen-team-prosjekt-og-utviklingsledelse/team.webp","alt":"Pyramide for team faktorer som gir sukksess"},{"_type":"block","style":"blockquote","markDefs":[{"_key":"d78ff10b9763","_type":"link","href":"https://www.tablegroup.com/product/dysfunctions/"}],"children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"Bilde hentet fra boken "},{"_type":"span","marks":["d78ff10b9763"],"text":"The Five Dysfunctions of a Team"},{"_type":"span","marks":[],"text":" av Patrick Lencioni."},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Radical Candor"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Radical Candor (radikal åpenhet) er en rettferdig, dypt menneskelig måte å administrere menneskene som jobber for deg og støtte dem gjennom personlige og profesjonelle problemer eller utfordringer. Det er to viktige komponenter i Radical Candor: (1) care personally eller på norsk \"å bry seg personlig\" og (2) Challenge Directly, på norsk \"utfordre direkte\"."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/bokanmeldelse-tre-boker-innen-team-prosjekt-og-utviklingsledelse/radical.webp","alt":"Radical candor akse"},{"_type":"block","style":"blockquote","markDefs":[{"_key":"ebe757cd1003","_type":"link","href":"https://www.radicalcandor.com/"}],"children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"Bilde hentet fra boken "},{"_type":"span","marks":["ebe757cd1003"],"text":"Radical Candor"},{"_type":"span","marks":[],"text":" av Kim Scott"},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Å bry seg personlig betyr å bry seg om hvem de ansatte er på et menneskelig plan, utover deres arbeidsutbytte. Dette krever å bli kjent med hvert teammedlems motivasjoner og ambisjoner, samt å lære \"hele mennesket\" - altså deres liv og interesser utenfor arbeidet som kan påvirke deres behov på jobben. Å vise at du bryr deg personlig om dine ansatte eller kolleger bygger naturlig nok tillitsfulle relasjoner. Når en ansatt føler at du fokuserer på det som er best for vedkommende, er det mer sannsynlig at han eller hun vil engasjere seg i tilbakemeldingene dine, stole på beslutningene dine og være ærlig mot deg - og i sin tur vil du føle at du kan stole på og være ærlig mot vedkommende."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Å utfordre direkte gjør deg nødt til å ta tøffe samtaler med dine ansatte, for eksempel i å gi konstruktiv kritikk eller diskutere ytelse og prestasjonsnivå. Disse viktige samtalene gir den ansatte muligheten til å forbedre seg, hjelper deg med å unngå flere problemer og tøffe samtaler på lang sikt, og det bidrar til å bygge tillit - å være direkte og presse de ansatte til sitt fulle potensiale, viser at du bryr deg om dem."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Oppsummert hevder forfatteren at for å være en god sjef, må du bry deg personlig samtidig som du utfordrer direkte. Når du utfordrer uten “å bry deg” kalles det obnoxious aggression og når du bryr deg uten “å utfordre direkte” kalles det ruinous empathy. Når du gjør hverken eller er det manipulative insincerity. Vi burde altså etterstrebe relasjoner hvor vi klarer å holde oss i den 1. kvadranten så langt det lar seg gjøre; når vi både utfordrer direkte og bryr oss personlig om våre kolleger og ansatte."}]}],"tags":["TPU","Bokanmeldelse","Prosjektledelse"]}
{"_type":"post","_createdAt":"2022-10-31T00:00:00.000+01:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/capra-satser-paa-design-med-nytt-selskap.webp"},"title":"👋 Teknologiselskapet Capra satser på design med helt nytt selskap!","author":"","subtitle":"Capra Group består av konsulentselskapet, Capra Consulting, og produktutviklingsselskapet, Liflig by Capra. De er i dag meget tunge på teknologi. Nå ønsker de å styrke kundene og seg selv ved å benytte design og nyskaping inn i sine prosesser. Med seg har de fått Anita Jenbergsen for å starte et helt nytt selskap.","description":"Capra Group består av konsulentselskapet, Capra Consulting, og produktutviklingsselskapet, Liflig by Capra. De er i dag meget tunge på teknologi. Nå ønsker de å styrke kundene og seg selv ved å benytte design og nyskaping inn i sine prosesser.  Les mer &gt;&gt;","publishedAt":"2022-10-31T00:00:00.000+01:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"– Det vi kan er digital tjenesteutvikling. Vi har noen av landets sterkeste fagmiljøer innen utvikling, arkitektur, sky, teamledelse og organisasjonsdesign. Men teknologi handler til syvende og sist om mennesker, og det er der Anita og designselskapet vil komplementere oss og øke verdien vi kan skape for kundene, sier Aslak, konsernsjef i Capra Group."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Anita Jenbergsen er daglig leder og skal bære nysatsningen. Hun kommer fra KPMG sin avdeling for organisasjonsutvikling og endringsledelse, og har 25 års erfaring fra blant annet selskaper som Cap Gemini, New Deal Interactive, Evry, Bouvet, KLP og Deloitte. For Anita er design er noe som treffer langt bredere enn kun i digitalisering:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"– Jeg opplever å komme inn til kunder som har implementert nye digitale løsninger, som ikke gir de ansatte den effektiviteten og forenklingen den var ment å gi. Eller implementering av endringer i organisasjonen hvor de ansatte gjør så godt de kan å finne seg til rette i en ny organisering, men de får det ikke helt til. Design er ikke kun det du ser med det blotte øye, men må integreres som en del av selskapets DNA, språk, kultur, arbeidsprosesser og hverdag."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Anita mener at det viktigste du kan gjøre er å sette de ansatte først. Gi ansatte rammer som gir dem mulighet til å levere gode tjenester og yte god service, så er det veien for god kundeopplevelse."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"– Nye digitale tjenester lykkes ikke av seg selv. Hele organisasjonen må involveres for å sikre at de har de riktige strategiske målene, at de måler de riktige tingene, og at de samarbeider om felles mål."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Capra Group består nå av 3 selskaper, Capra Consulting AS, Liflig by Capra AS og Capra Design AS. Hva Capra Design skal hete, er en prosess som allerede har startet og som etter planen skal lanseres i utgangen av 2022. Hvordan selskapet skal bygges har Anita klare tanker om:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"– Jeg skal ta inspirasjon og læring fra hva Capra Consulting og Liflig by Capra har bygget, samtidig som at dette selskapet har mye som må settes på plass på egenhånd. I løpet av 2023 er målet å få med 10-15 personer som vil være med å bygge et nytt designselskap som har fokus på å lage gode kundeopplevelser og ansattopplevelser. Vi ønsker å utvikle kundene våre både forretningsmessig og organisatorisk på veien inn i deres digitale transformasjon. Jeg håper at vi kan få hjelpe kundene våre med å løse de rette problemene, og jeg ønsker at de skal få en opplevelse av litt magi, mye skaperglede og ikke minst trygge, kloke og bærekraftige valg når vi jobber sammen."}]}],"tags":["Fryde"]}
{"_type":"post","_createdAt":"2023-08-17T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/capra-vinner-ny-rammeavtale-hos-vy/hero.webp"},"title":"Capra vinner ny rammeavtale hos Vy","author":"","subtitle":"I partnerskap med Knowit har Capra vunnet ny rammeavtale hos Vy på områdene IT-utvikling og teknologi, og Data og analyse. Fra før av har Knowit/Capra samarbeidet hos kunden i fire år innen IT-utvikling. Avtalen markerer et videre strategisk partnerskap både mellom de to leverandørene og mot Vy-gruppen, med en estimert øvre verdi på 600MNOK.","description":"Nordens største landbaserte transportkonsern fornyer partnerskapet med spesialist på tech!","publishedAt":"2023-08-17T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Utviklingssjef Mads Boye uttaler at "},{"_type":"span","marks":["em"],"text":"“jeg har samarbeidet med Capra i lang tid, og de leverer høy kvalitet innen fag- og teknologiområdene som er viktige for oss. I tillegg til dyktige folk som bidrar med å nå våre ambisiøse mål er de flinke på å åpne opp fagmiljøet sitt for oss, både innen teknologi, metodikk eller teknologiledelse. Vi ser på Capra som en viktig strategisk partner og gleder oss til videre samarbeid de neste årene”"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Som et selskap som transporterer millioner av mennesker hvert år, bruker Vy teknologi som et konkurransefortrinn, og ønsker i større grad å øke informasjonsflyten til de reisende. Avtalen gjelder hele Vy-gruppen i både Norge og Sverige, inkludert Vy Buss, Cargonet og Persontransport."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Salgsansvarlig, Oliver Hove-Breen, bemerket at "},{"_type":"span","marks":["em"],"text":"“det er åpenbart en big deal å få fortsette å samarbeide med Vy de neste fire årene. Vy er veldig moderne i hvordan de tenker IT-utvikling, og løftet vi har vært med på de siste årene har vært formidabelt. At Vy velger å forlenge med oss viser at vi gjør mye riktig, samtidig viser det at Vy selv ser verdien av langsiktige partnerskap med leverandørene sine innenfor disse tjenestene”"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Foruten Knowit/Capra, har Vy også valgt Twoday og Iterate som leverandører på IT-utvikling, samt Twoday og Ey innen Data og Analyse."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hove-Breen legger til at "},{"_type":"span","marks":["em"],"text":"“våre konsulentene stortrives hos Vy, og de er en av våre mest attraktive kunder. I tillegg til å bruke ny, relevant teknologi og organisering i utviklingsavdelingen er Vy opptatt av å være datadrevne, innovative og utfordrende. Dette synes vi er ekstra gøy å samarbeide om.”"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/capra-vinner-ny-rammeavtale-hos-vy/oliver.webp","alt":"Bilde av Oliver"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n  "},{"_type":"span","marks":[],"text":"Oliver Hove-Breen"},{"_type":"span","marks":[],"text":"\n"}]}]}
{"_type":"post","_createdAt":"2023-05-12T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/chatgpt-react-middag/hero.webp"},"title":"ChatGPT + React = middag","author":"Kristina Hovland Berg","description":"Bruk chatGPT for å finne ut hva du skal ha til middag!","publishedAt":"2023-05-12T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[{"_key":"dbff0a4c5aa7","_type":"link","href":"https://openai.com/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Med mindre du har levd under en stein de siste månedene, så har du fått med deg hvordan "},{"_type":"span","marks":["dbff0a4c5aa7"],"text":"OpenAI"},{"_type":"span","marks":[],"text":" sin ChatGPT har skapt global oppmerksomhet. Dette er et mektig verktøy som dytter oss et stort steg inn i framtiden, og kan løse det største I-landsproblemet av dem alle: “Hva skal vi spise til middag i dag?” Her er en guide om hvordan man kan bruke OpenAI med React."}]},{"_type":"block","markDefs":[{"_key":"33e8c2e77ceb","_type":"link","href":"https://github.com/krissaberg/dinnergpt"}],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Tl;Dr:"},{"_type":"span","marks":["33e8c2e77ceb"],"text":"Github-repo"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"The basics"}]},{"_type":"block","markDefs":[{"_key":"2bcd57eee06b","_type":"link","href":"https://vitejs.dev/guide/"},{"_key":"414d936faeab","_type":"link","href":"/vite-frontend-tooling"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"La oss begynne fra start. Opprett et prosjekt med et fengende navn, gå i terminalen og “"},{"_type":"span","marks":["strong"],"text":"cd"},{"_type":"span","marks":[],"text":"“ deg inn i riktig mappe. Jeg regner med du skal bruke "},{"_type":"span","marks":["2bcd57eee06b"],"text":"Vite"},{"_type":"span","marks":[],"text":", for det er fillern så raskt, så kjør derfor "},{"_type":"span","marks":["code"],"text":"npm create vite@latest"},{"_type":"span","marks":[],"text":" (mer om Vite i "},{"_type":"span","marks":["414d936faeab"],"text":"Gautes bloggartikkel"},{"_type":"span","marks":[],"text":"). Pass på at du har Node.js-versjon 14.18+ eller 16+. Velg deretter React og Typescript."}]},{"_type":"block","markDefs":[{"_key":"94c38f40ecd2","_type":"link","href":"https://www.npmjs.com/package/openai"},{"_key":"463a78484115","_type":"link","href":"https://platform.openai.com/docs/libraries"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Kjør deretter "},{"_type":"span","marks":["code"],"text":"npm install openai"},{"_type":"span","marks":[],"text":", ("},{"_type":"span","marks":["94c38f40ecd2"],"text":"npm-pakke"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["463a78484115"],"text":"OpenAIs bibliotek"},{"_type":"span","marks":[],"text":"), og da er vi ready to go!"}]},{"_type":"code","code":"npm create vite@latest\n> Project name: DinnerGPT\n> Package name: dinnergpt\n> Select a framework: React\n> Select a variant: TypeScript\ncd DinnerGPT\nnpm install\nnpm install openai\n","language":"text"},{"_type":"block","markDefs":[{"_key":"df716b9603c9","_type":"link","href":"https://code.visualstudio.com/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vite, Node, React, Typescript "},{"_type":"span","marks":["em"],"text":"og"},{"_type":"span","marks":[],"text":" OpenAI – nå som dette er på plass er det bare å åpne prosjektet i din favoritt-IDE: "},{"_type":"span","marks":["df716b9603c9"],"text":"VSCode"},{"_type":"span","marks":[],"text":". Åpne filen "},{"_type":"span","marks":["code"],"text":"src/App.tsx"},{"_type":"span","marks":[],"text":" og fjern eksempel-greiene fra koden, da vil "},{"_type":"span","marks":["code"],"text":"App.tsx"},{"_type":"span","marks":[],"text":" se omtrent slik ut:"}]},{"_type":"code","code":"//App.tsx\nimport './App.css';\n\nconst App = () => {\n  return <></>;\n};\n","language":"tsx"},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"OpenAI-API og konfigurering"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Nå skal vi konfigurere OpenAI-API-et. Før det må vi skaffe en API-nøkkel. Først kan du opprette en fil kalt “.env” i prosjektet ditt. Dersom koden din skal på github må du huske å legge denne til i "},{"_type":"span","marks":["code"],"text":".gitignore"},{"_type":"span","marks":[],"text":", for der skal ikke sola slippe til. NB: OpenAI-biblioteket er ment for server-side, ikke client-side, ettersom det er mulig å grave frem API-nøkkelen fra kildekoden i nettleseren. Dersom koden din skal ligge på en åpen side, burde nøkkelen ligge på en egen server, enten ved å benytte server-side-rendering eller et backend API."}]},{"_type":"block","markDefs":[{"_key":"65bcb1d5df9e","_type":"link","href":"https://platform.openai.com/account/api-keys"},{"_key":"2eb7f0102084","_type":"link","href":"https://vitejs.dev/guide/env-and-mode.html#env-files"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"For å skaffe en API-nøkkel til OpenAI kan du opprette en bruker eller logge inn på OpenAI sin plattform og navigere til "},{"_type":"span","marks":["65bcb1d5df9e"],"text":"oversikten over API-nøklene dine"},{"_type":"span","marks":[],"text":". Trykk på “Create new secret key”, finn på et kult navn og kopier nøkkelen. Lim deretter nøkkelen inn i "},{"_type":"span","marks":["code"],"text":".env"},{"_type":"span","marks":[],"text":"-fila di. NB: I Vite må nøkkelen prefikses med "},{"_type":"span","marks":["code"],"text":"VITE_"},{"_type":"span","marks":[],"text":". Les mer på "},{"_type":"span","marks":["2eb7f0102084"],"text":"Vite sine sider"},{"_type":"span","marks":[],"text":"."}]},{"_type":"code","code":"//.env\nVITE_OPEN_AI_API_KEY=sk-blabla\n","language":"text"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Opprett deretter en fil kalt "},{"_type":"span","marks":["code"],"text":"openaiUtils.ts"},{"_type":"span","marks":[],"text":". Der sender vi API-nøkkelen inn i en konfigurasjon av OpenAI. Når man bruker Vite henter man nøklene fra "},{"_type":"span","marks":["code"],"text":".env"},{"_type":"span","marks":[],"text":"-fila ved å bruke "},{"_type":"span","marks":["code"],"text":"import.meta.env.KEY_NAME"},{"_type":"span","marks":[],"text":". Dersom du bruker Create React App bruker du "},{"_type":"span","marks":["code"],"text":"process.env.KEY_NAME"},{"_type":"span","marks":[],"text":"."}]},{"_type":"code","code":"//openaiUtils.ts\nimport { Configuration, OpenAIApi } from 'openai';\n\nconst configuration = new Configuration({\n  apiKey: import.meta.env.VITE_OPEN_AI_API_KEY,\n});\nconst openai = new OpenAIApi(configuration);\n","language":"ts"},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"API-kallene"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Nå har vi det vi trenger til å sende et par API-kall. I min app har jeg lyst til å få middagsforslag, så jeg vil spørre chatGPT om å få navnet på en oppskrift etterfulgt av en ingrediensliste. I tillegg vil jeg ha et bilde av denne matretten. Dermed skal to funksjoner brukes: "},{"_type":"span","marks":["code"],"text":"createCompletion"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["code"],"text":"createImage"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"For å kun få tekst-svaret fra "},{"_type":"span","marks":["code"],"text":"createCompletion"},{"_type":"span","marks":[],"text":" og bilde-lenken fra "},{"_type":"span","marks":["code"],"text":"createImage"},{"_type":"span","marks":[],"text":", putter jeg dem i hver sine funksjoner: "},{"_type":"span","marks":["code"],"text":"generateChatCompletion"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["code"],"text":"generateImage"},{"_type":"span","marks":[],"text":". Begge funksjonene tar inn "},{"_type":"span","marks":["code"],"text":"prompt: string"},{"_type":"span","marks":[],"text":", som er selve søketeksten, og det er her vi kan sende inn mye gøy."}]},{"_type":"code","code":"//openaiUtils.ts\nexport const generateChatCompletion = async (prompt: string) => {\n  const response = await openai.createCompletion({\n    model: 'text-davinci-003',\n    prompt: prompt,\n    temperature: 1.2,\n    max_tokens: 1000,\n  });\n\n  return response.data.choices[0].text;\n};\n\nexport const generateImage = async (prompt: string) => {\n  const response = await openai.createImage({\n    prompt: prompt,\n    n: 1,\n    size: '256x256',\n  });\n  return response.data.data[0].url;\n};\n","language":"ts"},{"_type":"block","markDefs":[{"_key":"2ef7e8fc41e1","_type":"link","href":"https://platform.openai.com/docs/models/model-endpoint-compatibility"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"I "},{"_type":"span","marks":["code"],"text":"createCompletion"},{"_type":"span","marks":[],"text":" kan man sende inn forskjellige modeller. Jeg følger bare eksempelet til OpenAI og bruker default “text-davinci-003”. "},{"_type":"span","marks":["2ef7e8fc41e1"],"text":"Her er listen over de forskjellige modellene"},{"_type":"span","marks":[],"text":". "},{"_type":"span","marks":["code"],"text":"temperature"},{"_type":"span","marks":[],"text":" er en verdi mellom 0 og 2, og sier noe om hvor random et resultat er (der 2 er mest random). "},{"_type":"span","marks":["code"],"text":"max_tokens"},{"_type":"span","marks":[],"text":" er antall tegn på resultatet."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["code"],"text":"CreateImage"},{"_type":"span","marks":[],"text":"-funksjonen tar inn "},{"_type":"span","marks":["code"],"text":"n: number"},{"_type":"span","marks":[],"text":" (1-10),  som bestemmer hvor mange bilder den skal generere."},{"_type":"span","marks":["code"],"text":"size"},{"_type":"span","marks":[],"text":" er bildestørrelsen, og kan være 256x256, 512x512, eller 1024x1024. Det tar en stund å generere et bilde, så "},{"_type":"span","marks":["code"],"text":"n=1"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["code"],"text":"size=256x256"},{"_type":"span","marks":[],"text":" passer fint for den utålmodige sjel."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Lag middag"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Tilbake i "},{"_type":"span","marks":["code"],"text":"App.tsx"},{"_type":"span","marks":[],"text":" – nå kan vi begynne å leke oss! La oss først lage en knapp som spør om en oppskrift fra OpenAI og viser resultatet som ren tekst. Vi lagrer den genererte oppskriften i en state hook kalt "},{"_type":"span","marks":["code"],"text":"generatedDinner: string"},{"_type":"span","marks":[],"text":". Når man klikker på “Finn middag”-knappen kalles funksjonen "},{"_type":"span","marks":["code"],"text":"generateDinner"},{"_type":"span","marks":[],"text":" som sender teksten "},{"_type":"span","marks":["code"],"text":"PROMPT_RECIPE"},{"_type":"span","marks":[],"text":" inn i "},{"_type":"span","marks":["code"],"text":"generateChatCompletion"},{"_type":"span","marks":[],"text":" og oppdaterer "},{"_type":"span","marks":["code"],"text":"generatedDinner"},{"_type":"span","marks":[],"text":" med resultatet. Errorhåndteringen blir utført med en elegant logging til konsollen."}]},{"_type":"code","code":"//App.tsx\nimport './App.css';\nimport { generateChatCompletion } from './openaiUtils';\nimport { useState } from 'react';\n\nconst PROMPT_RECIPE = 'Give me a recipe title and list of ingredients.';\n\nconst App = () => {\n  const [generatedDinner, setGeneratedDinner] = useState('');\n\n  const generateDinner = async (chatPrompt: string) => {\n    await generateChatCompletion(chatPrompt)\n      .then((data) => data && setGeneratedDinner(data))\n      .catch((e) => console.log(e));\n  };\n\n  return (\n    <>\n      <h1>Finn middag her</h1>\n      <button onClick={async () => generateDinner(PROMPT_RECIPE)}>\n        Finn middag\n      </button>\n      <p>{generatedDinner}</p>\n    </>\n  );\n};\n\nexport default App;\n","language":"tsx"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hvis du kjører "},{"_type":"span","marks":["code"],"text":"npm run dev"},{"_type":"span","marks":[],"text":" vil det se omtrent slik ut i nettleseren din etter du har klikket “Finn middag”:"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/chatgpt-react-middag/nettside.webp","alt":"Nettsiden med devtools"},{"_type":"block","markDefs":[{"_key":"4a320f27f84d","_type":"link","href":"https://platform.openai.com/docs/guides/error-codes"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Får du noen API-problemer har "},{"_type":"span","marks":["4a320f27f84d"],"text":"OpenAI en fin oversikt"},{"_type":"span","marks":[],"text":" over hva du kan gjøre."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Nå gjenstår det bare å generere et vakkert bilde av matretten. Vi endrer litt på "},{"_type":"span","marks":["code"],"text":"generateDinner"},{"_type":"span","marks":[],"text":"-funksjonen, oppretter en ny state hook kalt "},{"_type":"span","marks":["code"],"text":"generatedDinnerImageSrc"},{"_type":"span","marks":[],"text":" og legger til bildet i HTML-en, gitt at bildet eksisterer."}]},{"_type":"code","code":"//App.tsx\nimport './App.css';\nimport { generateChatCompletion, generateImage } from './openaiUtils';\nimport { useState } from 'react';\n\nconst PROMPT_RECIPE = 'Give me a recipe title and list of ingredients.';\n\nconst App = () => {\n  const [generatedDinner, setGeneratedDinner] = useState('');\n  const [generatedDinnerImageSrc, setGeneratedDinnerImageSrc] = useState('');\n\n  const generateDinner = async (chatPrompt: string) => {\n    await generateChatCompletion(chatPrompt)\n      .then((data) => {\n        data && setGeneratedDinner(data);\n        data &&\n          generateImage(`Cartoon image of ${data}`).then(\n            (url) => url && setGeneratedDinnerImageSrc(url)\n          );\n      })\n      .catch((e) => console.log(e));\n  };\n\n  return (\n    <>\n      <h1>Finn middag her</h1>\n      <button onClick={async () => generateDinner(PROMPT_RECIPE)}>\n        Finn middag\n      </button>\n      <p>{generatedDinner}</p>\n      {generatedDinnerImageSrc && <img src={generatedDinnerImageSrc} />}\n    </>\n  );\n};\n\nexport default App;\n","language":"tsx"},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/chatgpt-react-middag/nettsiden2.webp","alt":"Nettsiden"},{"_type":"block","markDefs":[{"_key":"794dceaecf9e","_type":"link","href":"https://platform.openai.com/account/usage"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Og "},{"_type":"span","marks":["em"],"text":"voilà"},{"_type":"span","marks":[],"text":"! OpenAI er dermed i appen din. Nå er det bare å leke seg med forskjellige tekststrenger og se hvor mye gøy man får ut av det. OBS: For hver gang du sender en request til OpenAI så bruker du av gratis-kvoten din som er på 5 dollar. Se hvor mye du har brukt under []\"Usage\" på OpenAI sine sider]("},{"_type":"span","marks":["794dceaecf9e"],"text":"https://platform.openai.com/account/usage"},{"_type":"span","marks":[],"text":")."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her har jeg endret "},{"_type":"span","marks":["code"],"text":"PROMPT_RECIPE"},{"_type":"span","marks":[],"text":" til “Give me a recipe title and list of ingredients that don't fit together”; og sender inn "},{"_type":"span","marks":["code"],"text":"`Cartoon image of ${data}`"},{"_type":"span","marks":[],"text":" som prompt til "},{"_type":"span","marks":["code"],"text":"generateImage"},{"_type":"span","marks":[],"text":":"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/chatgpt-react-middag/nettsiden3.webp","alt":"Nettsiden"},{"_type":"block","markDefs":[{"_key":"385174ed9dd9","_type":"link","href":"https://github.com/krissaberg/dinnergpt"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Github-repoet kan du finne "},{"_type":"span","marks":["385174ed9dd9"],"text":"her"},{"_type":"span","marks":[],"text":"."}]}],"tags":["Frontend"]}
{"_type":"post","_createdAt":"2023-01-31T00:00:00.000+01:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/del-localhost-med-internett-pa-under-ett-minutt/hero.webp"},"title":"Del localhost med internett på under ett minutt","author":"Anders Olav Candasamy","subtitle":"Overraskende enkelt med P2P teknologi.","description":"Overraskende enkelt med P2P teknologi.","publishedAt":"2023-01-31T00:00:00.000+01:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det kan neppe sies at det er veldig spennende å dele localhost med internett – det er vel 'ish' det alle webservere har gjort hittil. Det som derimot er spennende, er hvor enkelt det kan gjøres."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"La meg vise deg en enkel metode og deretter forsøke forklare hvordan det fungerer."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Hvordan dele localhost med p2p-socket"}]},{"_type":"block","markDefs":[{"_key":"d80c60e23cb7","_type":"link","href":"https://www.npmjs.com/package/p2p-socket"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"La oss si at vi har utviklerne Alice og Bob. Alice har en webserver kjørende på "},{"_type":"span","marks":["code"],"text":"http://localhost:8080"},{"_type":"span","marks":[],"text":" som hun vil dele med Bob. Alice kan ikke bare dele denne lenka med Bob, den vil jo ikke fungere på hans maskin. Alice velger da å benytte seg av npm pakken "},{"_type":"span","marks":["d80c60e23cb7"],"text":"p2p-socket"},{"_type":"span","marks":[],"text":"."}]},{"_type":"code","code":"# Alice\nnpx p2p-socket share --port 8080\n","language":"text"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Ved å kjøre kommandoen over, begynner Alice å dele "},{"_type":"span","marks":["code"],"text":"localhost:8080"},{"_type":"span","marks":[],"text":". Outputten til kommandoen over vil gi Alice en nøkkel som hun må dele med Bob (typisk via Slack). Når Bob har fått denne nøkkelen kan han koble seg til Alice sin maskin."}]},{"_type":"code","code":"# Bob\nnpx p2p-socket connect --port 8080 --key <alice-nøkkel>\n","language":"text"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Nå kan Bob se det samme som Alice når han besøker "},{"_type":"span","marks":["code"],"text":"http://localhost:8080"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det var det. Alice har nå delt localhost med Bob på under minuttet."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Var det virkelig alt?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Jepp, det var faktisk alt. Før du leser videre kan du teste dette selv og bekrefte om det stemmer eller ikke. Alt du trenger er to maskiner med "},{"_type":"span","marks":["code"],"text":"node"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["code"],"text":"npm"},{"_type":"span","marks":[],"text":" installert."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Er dette det samme som ngrok?"}]},{"_type":"block","markDefs":[{"_key":"9f004d8d8032","_type":"link","href":"https://ngrok.com/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"For de av dere som kjenner til "},{"_type":"span","marks":["9f004d8d8032"],"text":"ngrok"},{"_type":"span","marks":[],"text":" så må nok dette ligne veldig mye. Det er derimot en stor forskjell: ngrok er ikke peer to peer (P2P). ngrok bruker nemlig en sentral server. Responsen Alice sender til Bob går alltid via denne serveren."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/del-localhost-med-internett-pa-under-ett-minutt/ngrok.webp","alt":"ngrok mellom Alice og Bob"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n  "},{"_type":"span","marks":[],"text":"Data går via ngrok"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Denne serveren "},{"_type":"span","marks":["em"],"text":"kan"},{"_type":"span","marks":[],"text":" være veldig praktisk. Ved bruk av ngrok får Alice en vanlig URL som kan deles med Bob. Bob behøver da ikke gjøre noe ekstra i terminalen. Bare å åpne lenka i nettleseren. Dessverre gjør dette at selve overføringshastigheten blir begrenset av ngrok. Kjipt om Alice og Bob sitter nærme hverandre og all trafikk må gå en omvei."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/del-localhost-med-internett-pa-under-ett-minutt/alice-bob.webp","alt":"Alice direkte til Bob"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n  "},{"_type":"span","marks":[],"text":"Data går direkte mellom Alice og Bob"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["code"],"text":"p2p-socket"},{"_type":"span","marks":[],"text":" er som navnet tilsier, peer to peer (P2P). Med P2P går ikke data via en sentral server, men direkte fra Alice til Bob. Sitter Alice og Bob på samme nettverk vil de kunne oppnå ganske gode hastigheter mellom seg. I tillegg er dataen som sendes kryptert (E2E). Ulempen er dog at alle som vil koble seg til må kjøre "},{"_type":"span","marks":["code"],"text":"p2p-socket"},{"_type":"span","marks":[],"text":" på sin egen maskin."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Hva er egentlig Peer 2 Peer?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Mange tenker nok at P2P er synonymt med piratkopiering og The Pirate Bay, men det er feil. Peer to peer betyr bare at datamaskiner (peers) kommuniserer direkte med hverandre. Dette gjør at behovet for sentrale servere minskes kraftig og man unngår høye infrastruktur kostnader."}]},{"_type":"block","markDefs":[{"_key":"a0300503be33","_type":"link","href":"https://keet.io/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Med en P2P applikasjon kan man altså øke antall brukere uten å måtte skalere opp egen infrastruktur. For data intensive applikasjoner kan dette utgjøre en stor forskjell. Et godt eksempel på en slik applikasjon er "},{"_type":"span","marks":["a0300503be33"],"text":"Keet.io"},{"_type":"span","marks":[],"text":". Dette er en Slack klone som også er en P2P applikasjon. Med ingen sentrale servere koster det ingenting for de å tilby full HD kvalitet på videmøter. Den er fortsatt i Alpha, men anbefales å teste."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Hvordan funker p2p-socket?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Dette er et komplisert tema med mange ulike deler. Jeg forstår ikke alle delene, men jeg gjør likevell et hederlig forsøk på å forklare alt."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Først og fremst vil jeg påpeke at "},{"_type":"span","marks":["code"],"text":"p2p-socket"},{"_type":"span","marks":[],"text":" ikke inneholder noe spesiell P2P logikk. Den benytter bare moduler som er skrevet av andre dyktig P2P utviklere (mer om de senere). "},{"_type":"span","marks":["code"],"text":"p2p-socket"},{"_type":"span","marks":[],"text":" tilbyr bare et enkelt API for å raskt kunne komme i gang."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Nøkler og ikke IP adresser"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Fra eksempelet over med Alice og Bob så vi at Alice ikke delte en IP adresse med Bob, men heller en nøkkel. Dette er Alice sin public key. Denne kalles "},{"_type":"span","marks":["em"],"text":"public"},{"_type":"span","marks":[],"text":" fordi den må deles med de du ønsker skal kunne koble seg til din maskin. Faktisk så vil ingen kunne klare å koble seg til Alice sin maskin uten å vite hva denne nøkkelen er. Alice har også en "},{"_type":"span","marks":["em"],"text":"private"},{"_type":"span","marks":[],"text":" key som hun bruker for å identifisere seg selv."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Distributed Hash Table (DHT)"}]},{"_type":"block","markDefs":[{"_key":"22c26abedf12","_type":"link","href":"https://en.wikipedia.org/wiki/Kademlia"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Når Alice har generert sine nøkler, må hun registrere seg i en "},{"_type":"span","marks":["code"],"text":"distributed hash table"},{"_type":"span","marks":[],"text":" (DHT). DHT’en som brukes heter "},{"_type":"span","marks":["22c26abedf12"],"text":"Kademlia"},{"_type":"span","marks":[],"text":" og den er laget for P2P.  Alle klienter (peers) registrerer seg her. Forenklet kan du tenke på dette som en adressebok. Når hun har registrert seg her, behøver hun nå kun dele hennes public key med Bob."}]},{"_type":"block","markDefs":[{"_key":"862cf72c2bd7","_type":"link","href":"https://en.wikipedia.org/wiki/Hole_punching_(networking)"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Bob kobler seg til DHT’en og gjør oppslag av nøkkelen han har fått fra Alice. Etter litt søking vil han finne frem til Alice sin maskin. Nå starter prosessen som kalles "},{"_type":"span","marks":["862cf72c2bd7"],"text":"hole punching"},{"_type":"span","marks":[],"text":". Enkelt forklart er dette teknikken som "},{"_type":"span","marks":["em"],"text":"\"finner og åpner\""},{"_type":"span","marks":[],"text":" veien mellom to maskiner, slik at de kan snakke med hverandre. Slik internett er bygget er dette faktisk en vanskelig oppgave (brannmur, NAT). Når denne prosessen er ferdig er nå Alice og Bob koblet sammen."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"En ekstra detalj er at Alice registrere seg med en hash av sin public key ("},{"_type":"span","marks":["code"],"text":"hash(publicKey)"},{"_type":"span","marks":[],"text":"). Dette gjør at nettverket ikke kjenner til hennes public key og den holdes hemmelig. Bob må da gjøre samme hashing når han gjør oppslag i nettverket. Dette gjør at det er kun de som vet hva Alice sin public key er som kan koble til."}]},{"_type":"block","markDefs":[{"_key":"d281eca74777","_type":"link","href":"https://en.wikipedia.org/wiki/Kademlia"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Om du vil vite flere detaljer ~anbefaler jeg~ kan du lese mer om "},{"_type":"span","marks":["d281eca74777"],"text":"Kademlia"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Bootstrap noder"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"For å kunne registrere seg i nettverket må man kunne finne nettverket. For det behøves det faktisk en sentral server som kan nås via en IP adresse/URL."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Disse serverene brukes som inngang til nettverket og kalles for "},{"_type":"span","marks":["code"],"text":"bootstrap"},{"_type":"span","marks":[],"text":" noder. En bootstrap node er bare en server som kan nås på en gitt URL/IP. URLen deles da med alle som skal koble seg til nettverket slik at de får registrert seg."}]},{"_type":"block","markDefs":[{"_key":"6745e722541d","_type":"link","href":"https://docs.holepunch.to/building-blocks/hyperswarm#api-1"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Disse serverene finnes allerede, så du behøver ikke tenke mer på de. Om du derimot ønsker kan du enkelt "},{"_type":"span","marks":["6745e722541d"],"text":"lage din egen"},{"_type":"span","marks":[],"text":". Da får du en privat P2P nettverk."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Bare for å være helt tydelig: Du behøver ikke dine egne bootstrap noder."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Holepunch.to"}]},{"_type":"block","markDefs":[{"_key":"56c2a159a450","_type":"link","href":"https://holepunch.to/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Som nevnt tidligere er det modulene som "},{"_type":"span","marks":["code"],"text":"p2p-socket"},{"_type":"span","marks":[],"text":" bruker som inneholder P2P logikken. Selskapet som har laget disse modulene er "},{"_type":"span","marks":["56c2a159a450"],"text":"🕳️🥊Holepunch"},{"_type":"span","marks":[],"text":". De har oppkalt seg selv etter hole punching teknikken nevnt tidligere."}]},{"_type":"block","markDefs":[{"_key":"7b6c96048311","_type":"link","href":"https://docs.holepunch.to/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Holepunch jobber med å gjøre P2P teknologi mer tilgjengelig og enklere å ta i bruk med Node og JavaScript. De har allerede laget "},{"_type":"span","marks":["7b6c96048311"],"text":"mange moduler"},{"_type":"span","marks":[],"text":" som gjør dette. Dette er også de samme som har laget Keet som jeg nevnte tidligere."}]},{"_type":"block","markDefs":[{"_key":"26e40d505dc3","_type":"link","href":"https://twitter.com/holepunch_to"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Holepunch har også fått systemet sitt opp og kjøre på Android og iOS enheter. Noe som ikke er en enkel oppgave. De skal i løpet av 2023 open-source hvordan de har fått dette til. Dette kommer snart, så det er ingen dum idé å følge de på "},{"_type":"span","marks":["26e40d505dc3"],"text":"Twitter"},{"_type":"span","marks":[],"text":" om du vil få det med deg."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Jeg har personlig stor tro på det Holepunch vil levere i 2023 og gleder meg til å se hva de og andre vil bygge med en P2P stack."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Feedback"}]},{"_type":"block","markDefs":[{"_key":"6ca41b655784","_type":"link","href":"mailto:aca@capraconsulting.no"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Send meg gjerne en "},{"_type":"span","marks":["6ca41b655784"],"text":"e-post"},{"_type":"span","marks":[],"text":" om du har spørsmål eller kommentarer."}]}]}
{"_type":"post","_createdAt":"2022-10-17T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/den-forste-av-mange-oppsummering-av-capras-team-topologies-konferanse.webp"},"title":"Den første av mange? Oppsummering av Capras Team Topologies-konferanse","author":"Sondre Brekke","subtitle":"Tidligere i september samlet Capra over 80 ulike selskap på Rebel i Oslo for verdens aller første Team Topologies-konferanse. Her følger en oppsumering.","description":"Tidligere i september samlet Capra over 80 ulike selskap på Rebel i Oslo for verdens aller første Team Topologies-konferanse. Her følger en oppsumering.","publishedAt":"2022-10-17T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Team Topologies, boken som ble sluppet i 2019, presenterer en måte å drive moderne softwareutvikling på. Boken har fokus på hvordan optimalisere organisasjoner for flyt gjennom tverrfaglige team, og er skrevet av Manuel Pais og Matthew Skelton. I løpet av dagen hørte vi fra nevnte Pais, i tillegg til representanter fra noen av Norges største selskaper. Konferansen rundet av med en paneldebatt med tema “Er Team Topologies egentlig for alle? Erfaringer og utfordringer”. Denne bloggartikkelen har som hensikt å oppsummere de viktigste læringspunktene."}]},{"_type":"block","markDefs":[{"_key":"62fc058c4681","_type":"link","href":"https://capraconsulting.us7.list-manage.com/subscribe?u=40ddc61e41192391f335bce25&id=f8b49ae27c"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Dersom du er interessert i å motta informasjon om slike arrangementer i fremtiden kan du melde deg på vårt nyhetsbrev "},{"_type":"span","marks":["62fc058c4681"],"text":"her"},{"_type":"span","marks":[],"text":" (merk at vi maks sender ut nyhetsbrev 4 ganger i året):"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"From Roles in a Hierarchy to Team Topology"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"Therese Engen, Organisasjonsutvikler i Capra."}]},{"_type":"block","markDefs":[{"_key":"46735b203971","_type":"link","href":"/slik-reorganiserer-vi-capra"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Capra er et konsulentselskap basert i Oslo som fokuserer på å levere verdi til kunder gjennom nymotens teknologi og innovative løsninger. Vi er veldig opptatte av å rigge vårt eget selskap for fart og flyt, ettersom vi tror dette fører til bedre løsninger for våre kunder og en større følelse av eierskap for våre ansatte. I 2019 startet vi nettopp en slik reorganisering. Dersom du ønsker å lese mer om vår reise fra en ledergruppe til autonome team, ta en titt på følgende bloggartikkel: "},{"_type":"span","marks":["46735b203971"],"text":"Slik reorganiserer vi Capra"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Capra tjente penger, kundene våre var happy og folkene våre var happy - så hvorfor initierte vi denne endringen? Ledergruppen følte at farten sank. Mange utfordringer ble løst utenfor ledergruppen, og de fikk dessuten mange spørsmål fra kolleger som man like gjerne kunne, og burde, løst selv. Med autonomi, samkjøring og flat struktur i bakhodet oppdaget ledergruppen Team Topologies - en bok som ga dem vokabularet til å starte reisen."}]},{"_type":"block","markDefs":[{"_key":"4686e15f0d6e","_type":"link","href":"https://en.wikipedia.org/wiki/Tuckman%27s_stages_of_group_development"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det første teamet, Team Nyorg, fokuserte i starten på å lage et starter-kit for nye team. Dette for å hjelpe dem med å finne sitt formål, sette gode mål, lage en teamkontrakt og veilede teamet gjennom "},{"_type":"span","marks":["4686e15f0d6e"],"text":"Tuckman’s stages of group development"},{"_type":"span","marks":[],"text":". Inspirert av boken "},{"_type":"span","marks":["em"],"text":"The Five Dysfunctions of a Team"},{"_type":"span","marks":[],"text":", fasiliterte de også retrospektiver for teamene for å påse at teamene ikke mistet fokus. Therese tror at vi kunne ha unngått noen av utfordringene vi møtte, dersom man i starten hadde fokusert mer på tillit, konflikthåndtering, forpliktelse til resultater, ansvar og resultater."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Så, hva har vi fått til? Vi ser en klar tendens til at flere tar ansvar og føler et større eierskap til oppgaver. I tillegg har vi merket at endringsfarten har økt på grunn av at beslutninger tas nærmere de som er påvirket av dem. Ønsker å lese mer om hva vi har lært etter to år med Team Topologies? Ta en titt på følgende bloggartikkler:"}]},{"_type":"block","markDefs":[{"_key":"471f33d71169","_type":"link","href":"/to-ar-senere-dette-har-vi-laert-siden-vi-anvendte-team-topologies"}],"style":"normal","children":[{"_type":"span","marks":["471f33d71169"],"text":"To år senere: Dette har vi lært siden vi anvendte Team Topologies"}]},{"_type":"block","markDefs":[{"_key":"2c4a57360e79","_type":"link","href":"/team-og-troll-erfaringer-fra-en-helt-vanlig-geit"}],"style":"normal","children":[{"_type":"span","marks":["2c4a57360e79"],"text":"Team og troll – erfaringer fra en helt vanlig geit"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Remote-first Team Interactions with Team Topologies"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"Manuel Pais, forfatter av Team Topologies og selvstendig konsulent."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Remote arbeid handler ikke bare om digitale verktøy. For å lykkes er det helt nødvendig å innføre noen grunnregler, fokusere på psykologisk trygghet samt lage noen praksiser for å la teamene samhandle på en enkel måte."}]},{"_type":"block","markDefs":[{"_key":"747df234a850","_type":"link","href":"https://github.com/TeamTopologies/Team-API-template"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"I en remote først-kontekst er det essensielt å forstå hvem som jobber med hva. Roadmaps som kun er synlig gjennom faste statusmøter er ikke nok - man bør ha som mål å gjøre dette lett tilgjengelig gjennom "},{"_type":"span","marks":["747df234a850"],"text":"Team API"},{"_type":"span","marks":[],"text":". Team API er en artefakt som eies av hvert team, og inneholder roadmap med prioriteringer, kommunikasjonspreferanser, arbeidspraksis og -prinsipper og mer."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Når arbeidet er synlig, kan man begynne å identifisere, klassifisere og spore avhengigheter til andre team. Eliminer de blokkerende avhengighetene, reduser de langsomme avhengighetene og behold de sunne avhengighetene."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Videre snakket Manuel om hvordan virkningen av tillitsgrenser (eng: "},{"_type":"span","marks":["em"],"text":"trust boundaries"},{"_type":"span","marks":[],"text":") er enda mer tilstede i en remote først-kontekst. Kanalnavn i chatteverktøy som ikke er intuitive og andre eksempler på dårlig design i digitale løsninger, øker teamenes kognitive last (eng: "},{"_type":"span","marks":["em"],"text":"cognitive load"},{"_type":"span","marks":[],"text":"). En quick win kan dermed være å innføre en enkel navnekonvensjon."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Ikke forvent "},{"_type":"span","marks":["em"],"text":"billigere"},{"_type":"span","marks":[],"text":" samhandling fordi det meste er nettbasert i dag. Å kommunisere på nett har også en kostnad - og denne kostnaden er spesielt høy når det er vanskelig å finne ut hvor og hvordan man skal kommunisere. Vi kan, og bør ikke, forvente å kontinuerlig snakke med alle andre (personer eller team). Prioriter formålsdreven interaksjon fremfor prosessdreven interaksjon."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Etter eventet la Manuel til følgende:"}]},{"_type":"block","style":"blockquote","markDefs":[],"children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"I was honoured that Capra organised an event with Team Topologies as the topic, highlighting the importance of strategizing for fast flow in today's competitive landscape. People were engaged and shared their real world stories, how the adoption of ideas from Team Topologies helped address their organisation's challenges but also raised new challenges. In fact, org transformations are journeys that we should only embark on with specific objectives in mind, and the understanding that we will have to adapt continuously if we want to get through the inevitable storms and unexpected events. Events like this help us learn and see what might be ahead in our own journey."},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"DNB: Teams & Topologies"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"Thomas Kjelsrud, Agile Coach i DNB."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"DNB er Norges største finanskonsern. For noen år siden var prosjekter den primære måten å få ting gjort på. De ansatte var gjerne spredt rundt på flere samtidige prosjekter, hvor de også måtte føre timer for å holde øye med kost. IT-arkitekturen i DNB består av alt fra hyllevare, legacysystemer, egenutviklede systemer og mer, og spenner derfor et bredt spekter av teknologier. I 2020 laget DNB en IT-driftsmodell hvor de introduserte "},{"_type":"span","marks":["em"],"text":"tech families"},{"_type":"span","marks":[],"text":". Dette er stabile, tverrfaglige grupper av team som er autonome og krever mindre administrasjon enn tidligere."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Driftsmodellen tar for seg to forskjellige typer "},{"_type":"span","marks":["em"],"text":"tech families; Application Services Families"},{"_type":"span","marks":[],"text":" (for eksempel kjernesystemer, brukersupport etc.) og "},{"_type":"span","marks":["em"],"text":"Common Services Families"},{"_type":"span","marks":[],"text":" (for eksempel Cloud, CI/CD, sikkerhet etc.). "},{"_type":"span","marks":["em"],"text":"Common Services Families"},{"_type":"span","marks":[],"text":" tilbyr felles praksis, plattformer og tjenester som gjør det mulig for "},{"_type":"span","marks":["em"],"text":"Application Services Families"},{"_type":"span","marks":[],"text":" å ta fullt ansvar over hele livssyklusen. Etter introduksjonen av IT-driftsmodellen, har man sett en flatere organisasjon med mindre nødvendig administrasjon."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Interaksjonsmetodene mellom team (som presentert i Team Topologies-boken) har vært utfordrende i DNB, ettersom mange team i stor grad er avhengige av tett samarbeid. Dette kan dermed bli krevende over tid, spesielt når det er mange involverte parter. Dette er noe DNB ønsker å fokusere på å forenkle fremover."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"How can Team Topologies be applied in the data, analytics & machine learning domain?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"Christian Moe, SVP Data & Analytics i Gjensidige."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Gjensidige er et av Nordens største forsikringsselskap. Data og dataanalyse er kritisk for kundereisen til forsikringsproduktene ettersom dette brukes i prissetting, vurdering av forsikringssvindel, predikering av fremtidige forsikringskrav og mye mer. Med mer enn 2000 prodsatte modeller, er Gjensidige avhengig av de rundt 25 tverrfaglige "},{"_type":"span","marks":["em"],"text":"ML subsystem"},{"_type":"span","marks":[],"text":"-teamene. Disse teamene finnes i mange former, men består typisk av én domeneekspert, data scientists, data engineers og softwareutviklere. I det siste har det vært mye fokus i organisasjonen på å legge et godt grunnlag for at teamene kan jobbe smidig og autonomt."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"For å lykkes tror Christian det er viktig med støtte fra ledelsen, en fleksibel organisasjonsstruktur, fokus på å bygge et fellesskap for å dele suksesser og fails samt å ha en langtidsperspektiv."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Paneldebatt: Er Team Topologies egentlig for alle? Erfaringer og utfordringer"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"Stein-Otto Svorstøl (Capra), Torill Iversen (Avdelingsdirektør i NAV IT), Therese Engen (Capra), Thomas Kjelsrud (DNB), Christian Moe (Gjensidige) og Manuel Pais (Team Topologies)"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"NAV består av rundt 150 team innenfor teknologi. Torill mener at en viktig verdi Team Topologies tilfører, er et felles språk på tvers av organisasjonen. For Nav sin del har dette kommet særlig til syne i deres tjenesteplattform-team. Teamene reduserer den kognitive lasten til utviklerne og tilbyr tjenester til produktutviklingsteam gjennom blant annet X-as-a-service. Team Topologies kan virke enkelt, men selv det å klassifisere teamene innenfor de fire typene team kan være utfordrende i komplekse organisasjoner. Thomas la til kommunikasjonsmønstrene som en utfordring – hvordan få teamene til å bruke og oppdatere disse ("},{"_type":"span","marks":["em"],"text":"team APIene"},{"_type":"span","marks":[],"text":"), samt bli enige om hvilken interaksjonsmodus som skal brukes i ulike sammenhenger. Ofte har man et scenario der et team ønsker å tilby en tjeneste, men teamet som konsumerer tjenesten heller ønsker samarbeid. Videre mener han at det å identifisere team (eller områder) som gjør mer enn det som er naturlig, kan være vanskelig. Panelet var enige om at det er viktig å hente inspirasjon fra flere bøker og modeller, og tilpasse disse til organisasjonens kultur og kontekst."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Christian fulgte opp med å snakke om viktigheten av å alltid begynne med "},{"_type":"span","marks":["em"],"text":"hvorfor"},{"_type":"span","marks":[],"text":". Få en tidlig suksesshistorie for å hjelpe interessenter og beslutningstakere å forstå "},{"_type":"span","marks":["em"],"text":"hvorfor"},{"_type":"span","marks":[],"text":" man gjør denne endringen. Manuel forklarte også hvordan det kan være lurt å ha noen (for eksempel en smidig coach) som kontinuerlig er observant på på potensielle problemer (Team APIer, interaksjonsmodeller osv.) hvis en organisasjon prøver å ta i bruk prinsipper fra Team Topologies."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Manuel avslørte at første utkastet av Team Topologies-boken faktisk hadde et kapittel om grensesnittet mellom Team Topologies og andre områder. Spesielt det å identifisere verdistrømmene dine (her kan "},{"_type":"span","marks":["em"],"text":"domain-driven design"},{"_type":"span","marks":[],"text":" være nyttig), lage en strategi (forstå landskapet, kundene og behovet det skal løse - her kan "},{"_type":"span","marks":["em"],"text":"Wardley Mapping"},{"_type":"span","marks":[],"text":" være nyttig) og "},{"_type":"span","marks":["em"],"text":"dynamic reteaming"},{"_type":"span","marks":[],"text":" (se boken av Heidi Helfand) tror han er viktig. “If your value streams would apply to almost every company, then probably you haven’t thought about them long enough”, la Manuel til senere. Han har stor tro på at det er mye verdi i å kombinere Team Topologies med andre modeller og litteratur. Basert på tilbakemeldinger fra sine lesere, mener han den største utfordringen er misoppfatningen at en endring av arbeidsmåte vil medføre høyere kostnader. Videre er en bekymring at teamene vil ha flere artefakter å vedlikeholde - noe som fører til en totalt sett høyere kognitiv belastning. Therese påpekte at det er avgjørende å forstå at team, akkurat som mennesker, kan være innadvendte, utadvendte og overbelastede."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Så - er Team Topologies for alle? Det korte svaret er; "},{"_type":"span","marks":["em"],"text":"det kommer an på"},{"_type":"span","marks":[],"text":"."}]}]}
{"_type":"post","_createdAt":"2020-04-21T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/derfor-er-det-viktig-a-velge-en-aws-partner.webp"},"title":"Derfor er det viktig å velge en AWS-partner","author":"Hein Kristiansen","subtitle":"Ser du etter noen som kan hjelpe deg med digitalisering, skyløsninger og implementering av AWS? Da kan det være lurt å velge en partner som er en del av AWS Partner Network (APN).","description":"Hos Capra har vi over 25 medarbeidere med ulike AWS sertifiseringer og lang erfaring som APN-partner. Les hvorfor du bør velge en AWS-partner her >>","publishedAt":"2020-04-21T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Hva er en AWS partner?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Å være i partnerskap med AWS  har utvilsomt sine fordeler, også i Norge. APN er det globale partnerprogrammet for teknologi og konsulentvirksomheter. En sertifisert partner har bedre forutsetning for å bygge tilpassede løsninger og tjenester for deg som kunde, og som partnere får vi god innsikt i hvordan AWS kan løfte ulike bransjer på en effektiv måte. Det finnes tusenvis av AWS partnere over hele verden, og over 90 prosent av Fortune 100-selskaper bruker faktisk deres tilpassede løsninger og tjenester. Det er et kvalitetsstempel i seg selv."}]},{"_type":"block","markDefs":[{"_key":"12ab4e4ee4b0","_type":"link","href":"https://aws.amazon.com/partners/find/partnerdetails/?n=Capra%20Consulting%20AS&id=0010L00001oc2DGQAY"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det finnes to ulike typer partnere innenfor APN, nemlig teknologipartnere og konsulentpartnere. "},{"_type":"span","marks":["12ab4e4ee4b0"],"text":"Capra er konsulentpartner"},{"_type":"span","marks":[],"text":", og det nyter vi og våre kunder svært godt av."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Hva er spesielt med en konsulentpartner?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"En konsulentpartner har mulighet til å hjelpe alle typer kunder med å designe, arkivere, bygge, administrere og migrere arbeidsmengde til tjenester på AWS. Dette fører til en raskere reise inn i en digital hverdag, samt mer effektiv verdiskapning og måloppnåelse. Konsulentpartnere implementerer ofte løsninger fra kvalifisert teknologipartnere i tillegg til å levere egne tjenester. Enkelt sagt gir konsulentpartnere deg en ny nærhet til ny teknologi og AWS sin markedsledende plattform."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Konsulentpartnere trenger en rekke sertifiseringer for å garanterer dyp innsikt på AWS. Vi i Capra har over 25 sertifiserte medarbeidere med lang erfaring fra noen av Norges mest innovative implementeringer. Vi har et sterkt lag med kloke utviklere og erfarne arkitekter, som alltid sørger for at våre kunder får levert det de har behov for."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Husk å se etter bevis på offisielt samarbeid med AWS"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Mange ønsker å jobbe med AWS partnere, men når de begynner jakten på riktige folk kan det raskt bli vanskelig å velge i mengden av de som tilbyr  den ekspertisen du som kunde har behov for. Her er det viktig at de som ønsker å jobbe med eksperter ser etter offisielle merker som bekrefter at de er en del av APN og har de nødvendige sertifiseringene på AWS."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det finnes ulike betegnelser for hvilket nivå en partner er på (Standard, Advanced, Premier), i tillegg til hvilken type – teknologipartner eller konsulentpartner. Ved hjelp av APN får du altså enkelt oversikt over fagkompetansen til de ulike selskapene. På den måten kan du ta et veloverveid valg – og forhåpentligvis ende opp med en perfekt samarbeidspartner for deg. Vi i Capra er stolte over å være et av få norske selskaper som har et Advanced partnerskap med AWS."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Hvorfor bør du jobbe med en sertifisert AWS partner?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Digitalisering forventes alltid å skape økt forretningsverdi, men alt for ofte ender reisen opp med å bli en kostbar flytteprosess. Derfor passer Capra på å tilføre våre kunder den kunnskapen og de ferdighetene som er nødvendig når det kommer til sikkerhet, DevOps/NoOps og automatisert «infrastruktur som kode» i skyen. På den måten hjelper vi våre kunder med å finne reell verdiskapning."}]},{"_type":"block","markDefs":[{"_key":"3b05b63e67bc","_type":"link","href":"https://www.capraconsulting.no/dette-kan-vi/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Som konsulentpartner med sertifiserte eksperter på AWS kan vi i Capra tilby skreddersydd programvareutvikling, automatisert infrastruktur og konsulenttjenester som lar deg nå dine mål raskere, billigere og bedre. "},{"_type":"span","marks":["3b05b63e67bc"],"text":"Se alle våre tjenester her!"},{"_type":"span","marks":[],"text":" Det gjør at du får tid til å arbeide med forretningsfunksjonaliteten til selskapet og skape verdier for dine brukere. Capra tar ansvar for utvikling, vedlikehold og drift på skyplattformen. Enklere blir det ikke!"}]}],"tags":["Sky"]}
{"_type":"post","_createdAt":"2020-03-25T00:00:00.000+01:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/derfor-tilpasser-vi-var-rekrutteringsprosess-til-kandidaten.webp"},"title":"Derfor tilpasser vi vår rekrutteringsprosess til kandidaten","author":"Morten Gran Kristoffersen","subtitle":"I Capra vokser vi med omtrent 20 personer i året. Er du nysgjerrig på hvordan vi gjennomfører vår rekrutteringsprosess? Her skal vi prøve å gi deg noen svar.","description":"I Capra vokser vi med omtrent 20 personer i året. Er du nysgjerrig på hvordan vi gjennomfører vår rekrutteringsprosess? Det kan du lese mer om her!","publishedAt":"2020-03-25T00:00:00.000+01:00","body":[{"_type":"block","markDefs":[{"_key":"4da96db23b9b","_type":"link","href":"https://www.capraconsulting.no/tjenester/hva-vi-kan"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"I Capra ansetter vi talenter og seniorer innen utvikling, infrastruktur, arkitektur og prosess- og prosjektledere. Hvis du er nysgjerrig på "},{"_type":"span","marks":["4da96db23b9b"],"text":"våre teknologivalg, så finner du det her"},{"_type":"span","marks":[],"text":". Dette innlegget fokuserer på vår rekrutteringsprosess for deg som er i jobb."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Smidig rekrutteringsprosess"}]},{"_type":"block","markDefs":[{"_key":"122d253879cf","_type":"link","href":"https://www.capraconsulting.no/om-oss/gode-betingelser"},{"_key":"83b34092ad9d","_type":"link","href":"https://www.capraconsulting.no/selvskryt"},{"_key":"c9b5635bb2c6","_type":"link","href":"https://www.capraconsulting.no/thecapraway.pdf"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi er opptatt av å ha en smidig rekrutteringsprosess, tilrettelagt for deg som kandidat. Dette er viktig for oss da vi anerkjenner at det er et stort valg å bytte arbeidsgiver. Måten vi løser en tilrettelagt prosess på, er ved å ha en tett dialog med deg. Stikkordene her er åpenhet og forventninger. Noen prosesser tar fem dager, noen tar to måneder og andre tar ett år. Vi har ikke bråhast med å ansette noen innen en spesifikk måned, så vi kan vente på at den rette kandidaten er klar. Det er flere jobber enn kandidater innen IT, så det er viktig at vi kan gjøre deg trygg på valget du skal ta og synliggjøre hva vi er gode på, om det er "},{"_type":"span","marks":["122d253879cf"],"text":"betingelser"},{"_type":"span","marks":[],"text":", "},{"_type":"span","marks":["83b34092ad9d"],"text":"prosjekter og kunder"},{"_type":"span","marks":[],"text":" eller om vi faktisk har den "},{"_type":"span","marks":["c9b5635bb2c6"],"text":"kulturen og strukturen"},{"_type":"span","marks":[],"text":" som du er på utkikk etter. Vi skal også være ærlige på utviklingsmulighetene vi som bedrift har. Det hender vi inviterer kandidater på sosiale eller faglige eventer som vi har i løpet av prosessen også, slik at de selv får førstehåndserfaring med oss og hvordan den nye hverdagen kan bli."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Faser i rekrutteringen"}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Første praten"}]},{"_type":"block","markDefs":[{"_key":"5d0a20a663bd","_type":"link","href":"https://www.capraconsulting.no/karriere"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"En typisk prosess i Capra består av telefonsamtale med en fra rekruttering. Her avdekker vi ulike spørsmål du har og hva du ønsker for din "},{"_type":"span","marks":["5d0a20a663bd"],"text":"egen karriere"},{"_type":"span","marks":[],"text":", om det er å bli entreprenør på sikt, best på Micro Frontend eller evangelist innen AWS. Dette er viktig for oss, da vi er et konsulenthus med fokus på noen utvalgte teknologier som Java, AWS og JavaScript. Er vi enige om at dette kan være en match, så inviterer vi enten på en uforpliktende kaffekopp med rekruttering eller en faglig prat med f.eks to utviklere. Dette bestemmes ut i fra hvor du selv står i prosessen med å bytte jobb, og hvilke spørsmål vi og du har til hverandre."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Teknisk prat og dialogbasert case"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I den første praten du har med våre utviklere, så er fokuset og målet å bli bedre kjent. Du skal få muligheten til å stille spørsmål rundt hvordan Capra er som bedrift, hvordan oppdrag fungerer m.m., samtidig som vi ønsker å lære om valg du har tatt, hvorfor du tok dem og hva du har lært av dem. Etter en slik prat så tar vi en fot i bakken for å vurdere om vi skal f.eks. ta en teknisk case. I de fleste tilfeller gjør vi dette. Den tekniske casen er ikke kun for å “teste” deg, men også for å vise frem det faglige nivået vi har i Capra. En teknisk case kan være en programmeringsoppgave eller en faglig diskusjon rundt et tema som er aktuelt for din kompetanse. Det er informasjonen vi sitter med etter samtalene vi har hatt som avgjør hvordan dette steget ser ut, som også er det siste steget i prosessen."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Uansett oppgave, så er den i høyeste grad dialogbasert og den utføres hos oss med din PC, slik at du bruker verktøy som du selv kjenner og er komfortabel med. Prosessen skal være tidseffektiv, så du skal heller ikke bruke noe tid på egenhånd før en slik prat."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Er vi en match?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Etter intervjuene er ferdige så gjør vi en intern øvelse. Vi stiller oss enkelt og greit noen kontrollspørsmål:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"Vil vi kunne gi kandidaten store nok utfordringer, faglig og sosialt?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"Vil vi kunne ta kandidaten et steg videre i karrieren?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"Vil personen trives i fagmiljøet som vi har og den teknologien som vi jobber med?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"Er personen like flink eller flinkere enn de vi allerede har i Capra?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi stiller disse spørsmålene da du kan være flink nok, men interessefeltet ditt er kanskje litt utenfor våre satsninger. Det er viktig for oss at vi ikke bare ansetter en person fordi vi kan, vi skal være trygge på at det vil være rett for deg som kandidat også. Dette gjør vi ved å styre forventningene dine gjennom hele prosessen og være kritisk til oss selv som en kommende arbeidsgiver."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Tilbud er mer enn lønn"}]},{"_type":"block","markDefs":[{"_key":"feb146516144","_type":"link","href":"/hva-er-viktigere-enn-lonn-for-it-konsulenter"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi avslutter alltid med et tilbudsmøte, ansikt til ansikt, der du får høre hvilke prosjekter som kan være aktuelle for deg fra salg, samt tatt en prat med Aslak, vår daglige leder, rundt de tingene du evt lurer på eller trenger en endelig avklaring på. Lønn er absolutt viktig, men det er "},{"_type":"span","marks":["feb146516144"],"text":"flere aspekter ved et jobbytte man bør tenke på"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Ønsker du deg til et middels stort selskap, der du kan skape deg din egen rolle og bygge kompetanse?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Ta gjerne kontakt med Hannah eller Morten for en uformell kaffe eller telefonprat."}]}],"tags":["Rekruttering","Capra folk"]}
{"_type":"post","_createdAt":"2020-04-19T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/det-er-en-god-grunn-til-at-aws-er-markedets-ledende-skyplattform.webp"},"title":"Derfor er AWS markedets ledende skyplattform","author":"Hein Kristiansen","subtitle":"Det er ikke mange som liker å innrømme det, men størrelse skaper fordeler for deg som kunde. Nettopp det har Amazon Web Services bevist.","description":"Den sterke veksten til Amazon Web Services har ført til at de er markedets ledende skyplattform. Lær mer om hvorfor, og ta bevisste valg for bedriften din!","publishedAt":"2020-04-19T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Skyplattformer er i vinden som aldri før, og i dag finnes det flere konkurrenter å titte på. Du trenger derimot ikke lete lenge før du oppdager at Amazon Web Services har en betydelig ledelse. Vi kunne snakket i timevis om hvorfor vi digger AWS, men det er nok kun vi som synes slikt snakk er spennende. Det du kanskje er mer interessert i er "},{"_type":"span","marks":["em"],"text":"hva"},{"_type":"span","marks":[],"text":" som gjør AWS så mye bedre. Vel, plattformen har et svært viktig aspekt som taler for seg. Størrelse."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"AWS sky vokser fortere enn konkurrentene"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det er kanskje litt vagt å si at AWS er størst når det kommer til skyplattformer. Så la oss gjøre det hele litt mindre uklart. AWS er langt større enn sine konkurrenter når det kommer til reell vekst. Det gjør at de rett og slett har mer penger tilgjengelig."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Nå skal vi ikke kimse av hvor langt du kan komme med stå-på-vilje, kunnskap og ferdigheter – noe penger ikke kan kjøpe direkte. Likevel er det viktig å være realistisk."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Solid økonomi bidrar ofte til større investeringer i infrastruktur og underliggende teknologi, når man vet å forvalte midlene sine riktig. Det gjør Amazon Web Services. Den sterke veksten til AWS har ført til at de i dag er den skyplattformen med mest funksjonalitet og høyest sikkerhet."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Siden Amazon har ansvaret for sikkerheten til kundenes underliggende infrastruktur sørger de for å sjekke plattformen kontinuerlig for å oppdage mistenksom aktivitet. AWS tilbyr også markedets beste verktøy og tjenester for at du skal kunne sikre dine data i henhold til gjeldende forskrifter. Det er noe vi i Capra kan hjelpe deg å dra full nytte av."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Langsiktige investeringer har gitt påviste verdier"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Når det kommer til de investeringene AWS har gjort innen teknologi, funksjonalitet og infrastruktur, kan vi se resultatet over hele linja. Kvaliteten er uten tvil bedre enn hos de andre skyleverandørene, og den leveres på en mer konsistent måte. Mange av godsakene i AWS er ikke synlig for de fleste, men påvirker utvilsomt leveringskapasiteten hos deg som kunde. AWS har i tillegg investert mye i kompetanse og ferdigheter i godt over et tiår, noe som er krevende å opparbeide seg."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Capra jobber tett med AWS som skyplattform"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Tro det eller ei, men Amazon Web Services har vært en greie helt siden 2006. I dag er dette den største, mest velprøvde og brukte skytjenesten på markedet. Det synes vi i Capra er temmelig kult. Derfor er vi også stolte av å få være et av de få virkelig store kompetansemiljøene på AWS i Norge."}]},{"_type":"block","markDefs":[{"_key":"6717ca731a03","_type":"link","href":"https://aws.amazon.com/partners/find/partnerdetails/?n=Capra%20Consulting%20AS&id=0010L00001oc2DGQAY"},{"_key":"6ca9feb80d24","_type":"link","href":"https://www.liflig.no/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Som "},{"_type":"span","marks":["6717ca731a03"],"text":"APN Advanced Tier Consulting Partner"},{"_type":"span","marks":[],"text":" med over 25 sertifiserte utviklere kan vi være med på å gjøre overgangen til skyen til en smertefri reise. Vi samarbeider tett med AWS for å gjøre ny teknologi, og ikke minst skyen selv, mer tilgjengelig for våre kunder. I vår tjeneste for skreddersøm, "},{"_type":"span","marks":["6ca9feb80d24"],"text":"Liflig"},{"_type":"span","marks":[],"text":", benytter vi selvsagt AWS for å sikre at vi kan møte selv de mest kompliserte behov. Lyst til å vite mer om hvordan vi jobber med AWS?"}]},{"_type":"block","markDefs":[{"_key":"43ece83247a4","_type":"link","href":"https://www.capraconsulting.no/kontakt-oss"}],"style":"normal","children":[{"_type":"span","marks":["43ece83247a4"],"text":"Ta kontakt med oss"},{"_type":"span","marks":[],"text":" da vel, så lover vi å svare på alle dine spørsmål!"}]}],"tags":["Sky","Meninger"]}
{"_type":"post","_createdAt":"2020-03-27T00:00:00.000+01:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/det-er-ikke-bare-statens-ansvar-aa-holde-aktivitet-i-okonomien.webp"},"title":"Det er ikke bare statens ansvar å holde aktivitet i økonomien","author":"Aslak Ege","subtitle":"Vi innrømmer at vi har gjort en feilvurdering! Men det er ingen skam i å snu. Her kommer vår oppfordring til å ikke la andre gjøre det samme.","description":"Det er ikke bare staten sitt ansvar å vedlikeholde aktiviteten i økonomi under koronakrisen, private bedrifter må fortsette å kjøpe av hverandre >>","publishedAt":"2020-03-27T00:00:00.000+01:00","body":[{"_type":"block","markDefs":[{"_key":"669de715c240","_type":"link","href":"https://www.nrk.no/tromsogfinnmark/oppfordrer-folk-til-a-ikke-be-om-pengene-tilbake-fra-arrangementer-1.14940439"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det er ekstremt gledelig å se at dugnadsånden for alvor er levende i den norske befolkningen. Vi hører daglig om de som vil bli rammet, spesielt økonomisk, i en tid der mange sitter hjemme og jobber og det er restriksjoner på arrangementer og aktivitet i samfunnet. For oss som privatpersoner kommer det oppfordringer om å "},{"_type":"span","marks":["669de715c240"],"text":"ikke be om refusjon"},{"_type":"span","marks":[],"text":" på arrangementer vi har kjøpt billett til, da dette er penger du som privatperson allerede har avskrevet i husholdningsbudsjettet. Konsekvensen ved å be om refusjon f.eks. vil bety en mindre konsert i nærområdet eller et dårligere fritidstilbud på sikt. Vi tenker langsiktig og på tiden da Norge kommer tilbake til normalen."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Staten kan ikke redde alle"}]},{"_type":"block","markDefs":[{"_key":"9fde028ff91d","_type":"link","href":"https://www.nrk.no/nordland/strommer-til-nav-for-dagpenger-etter-korona-permitteringer_-opplever-sprengt-kapasitet-1.14947937"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi hører og leser i nyhetene om enorm "},{"_type":"span","marks":["9fde028ff91d"],"text":"pågang på søknad for dagpenger hos Nav"},{"_type":"span","marks":[],"text":", og permitteringsvarsler som blir sendt ut. Store og små bedrifter opplever at ordreinngangen kuttes drastisk, da fokuset blir å sikre seg selv og sin bedrift. Alle vet at dette får negative konsekvenser, så hvorfor stopper handelen opp? På LinkedIn dukker det opp poster fra mindre, nye selskaper som skriver at de har penger å investere i andre sine tjenester, som minner om at en investering på 10 000 kr eller 100 000 kr kan være det som holder dem flytende gjennom denne annerledes tiden. Dette er fantastiske initiativer som minner oss å at det er ikke bare store redningspakker fra staten som er løsningen, vi kan alle være med å bidra."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Man kan forstå at bedrifter først ser til seg og sine ansatte, før man ser til andre og vi i Capra er ikke noe bedre selv. Vi er heldige og har god økonomi, men har, som sikkert alle andre, tatt en ekstra runde på hvor vi står, hvor vi er sterke og hvor vi er sårbare. Når vi nå lander på at vi er godt rustet for fremtiden, så har vi stilt oss spørsmålet; hva kan vi gjør for å bidra til aktivitet i økonomien?"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Hva kan bedrifter bidra med"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi skal være så ærlige at da anbefalingen om å sende alle til hjemmekontor kom, så stengte vi kontorlokalet, og frøys noen av de tjenestene vi har på fruktkurv, vask av kontor m.m."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Nå, en uke inn i den nye “koronahverdagen”, har det slått oss at dette er feil medisin. Ja, det vil spare oss for noen kostnader, men vi er fullt operative som selskap og har per i dag, heldigvis, lite negative konsekvenser av pandemien. Samtidig kan vi absolutt ha positive ringvirkninger ut i samfunnet. Det er ikke bare staten som skal bidra til å vedlikeholde aktiviteten i økonomi, det er viktig at private bedrifter fortsetter å kjøpe av hverandre og ikke sparer seg selv og samfunnet til fant."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Så er det slik at selv om vi opprettholder de fleste tjenestene, så er vi fortsatt ikke på kontoret. Vi har derfor dialog med leverandørene, slik at vi kan donere tjenestene, f.eks fruktkurven vår til noen som trenger den, så den kommer til nytte og ikke kastes."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"For oss som jobber i Tech, kom nå forespørselen fra utviklernes nettavis, kode24. Dette er et medium som er med å spre kompetanse og som flere av våre ansatte leser og det er derfor helt naturlig at vi går inn og sponser dem i en vanskelig tid, samt ser på muligheten for å fremskynde egne markedsplaner slik at vi kan bestille annonser via dem, deres normalt sett største inntektskilde."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Alle monner drar"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"For det kommer en dag der vi skal tilbake på kontoret og det vil være hyggelig om vi kan fortsette å bruke den samme leverandøren, vel vitende om at vi kanskje har gjort litt for å holde dem i gang."}]},{"_type":"block","markDefs":[{"_key":"0541ca8da8aa","_type":"link","href":"http://www.nrk.no/video/34d1bb36-143c-4564-89d7-f68eff788540"}],"style":"normal","children":[{"_type":"span","marks":["0541ca8da8aa"],"text":"Statsministeren sa i sin tale til folket i denne uken"},{"_type":"span","marks":[],"text":" at dette ikke er tiden for “jeg”, men for “vi”. Vår oppfordring er at dette også gjelder på bedriftsnivå. Vår oppfordring til alle er å vise solidaritet hvis dere har mulighet og opprettholdt en tjeneste som for deg koster lite, men for leverandøren er verdt uendelig mye mer."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Sammen holder vi hjulene i gang."}]}],"tags":["Debatt"]}
{"_type":"post","_createdAt":"2021-05-25T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/docs-as-code/hero.webp"},"title":"Docs-as-code","author":"Nicolas Harlem Eide","subtitle":"Som utviklere jobber vi mye med kode, og ofte trenger denne koden dokumentasjon. Men alt for ofte ender man med kode og ingen dokumentasjon.","description":"Docs-as-code gjør dokumentasjon av koding enklere! Bruk eksisterende verktøy for å skrive teknisk dokumentasjon. Vi går gjennom  docs-as-code her!","publishedAt":"2021-05-25T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Å skrive dokumentasjon til koden, ser jeg på som en vane, og som med mange vaner må man legge til rette for det. Om du vil begynne å jogge, så viser forskning at man har en høyere sannsynlighet for å fortsette å gjøre det ved blant annet å "},{"_type":"span","marks":["em"],"text":"legge miljøet opp til det"},{"_type":"span","marks":[],"text":". Så hvordan kan vi bruke lærdommen om at vaner kommer gjennom miljø til å skrive mer dokumentasjon? Her kommer "},{"_type":"span","marks":["em"],"text":"dokumentasjon som kode"},{"_type":"span","marks":[],"text":" inn på banen."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Docs as code - enklere dokumentasjon i eksisterende verktøy"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Med “"},{"_type":"span","marks":["em"],"text":"Docs-as-code"},{"_type":"span","marks":[],"text":"” tankegangen bruker de verktøyene man allerede har til å gjøre det lettere å skrive medfølgende teknisk dokumentasjon. I stedet for å måtte huske og gå inn på confluence for å skrive dokumentasjon for API-endepunktet ditt, så er det mye lettere å huske det hvis du gjør det i en docstring, eller blir påminnet om det i en sjekkkliste på pull requesten din. I tillegg kan man sørge for å få inn en felles språkprofil i firmaets dokumentasjon, med mer."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Gjennom docs-as-code får du altså brukt eksisterende verktøy til å gjøre det lettere å skrive dokumentasjon."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Pipelinen"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Så la oss sette opp en docs-as-code pipeline. Som med mange andre pipelines, vil vi at den skal ha "},{"_type":"span","marks":["em"],"text":"innhold (dokumentasjonen)"},{"_type":"span","marks":[],"text":", "},{"_type":"span","marks":["em"],"text":"versjonskontroll"},{"_type":"span","marks":[],"text":", "},{"_type":"span","marks":["em"],"text":"pull requests"},{"_type":"span","marks":[],"text":", "},{"_type":"span","marks":["em"],"text":"tester"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["em"],"text":"publisering"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I dette tilfellet bruker jeg Python som et eksempel, men det finnes også verktøy til andre språk. Man kan også bestemme seg for å ikke skrive dokumentasjonen på et like granulært nivå som blir vist frem her."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Innholdet"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"La oss starte med innholdet – "},{"_type":"span","marks":["em"],"text":"dokumentasjonen"},{"_type":"span","marks":[],"text":". Selve dokumentasjonen burde være lett tilgjengelig for redigering og være versjonskontrollert. Det vi da ender opp med er plaintext, som markdown eller restructured text, i repositoriet som dokumentasjonen tilhører. Gjerne til og med i selve koden, om språket eller verktøyene støtter dette (eksempelvis gir IntelliJ-platformen god popup dokumentasjon når du har dokumentasjonen i selve funksjonen/klassen/modulen!)."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/docs-as-code/editor.webp","alt":"popup dokumentasjon i editor"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hvor granulært plasseringen skal være, kommer helt ann på kravene til dokumentasjonen. Er det teknisk eller brukerdokumentasjon? Er det for et API eller for en SDK?"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Review"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Nå som vi har teksten i plaintext, og i repositoriet vårt, er det trivielt å begynne å bruke prosesser vi allerede har: Pull requests, CI/CD, mm."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Start med å endre dokumentasjonen samtidig som kode blir endret. Dette kan man lett minne alle på teamet på ved å ha en sjekkliste i hver PR."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Å ha endringer i dokumentasjonen "},{"_type":"span","marks":["em"],"text":"sammen med kodeendringer"},{"_type":"span","marks":[],"text":", har også en ekstra fordel. Det gjør det lettere for andre å forstå endringen, spesielt i komplekse systemer. Som en reviewer kan du eksempelvis lese den endrede dokumentasjonen først for å lettere forstå hva sluttresultatet skal være."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Testing"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det høres kanskje rart ut, men ja, nå skal vi teste teksten som har blitt skrevet. Ved å kjøre tester på teksten som blir skrevet, så kan man få mer konsis tekst, sjekke grammatikk, sørge for at man ikke har døde linker, med mer."}]},{"_type":"block","markDefs":[{"_key":"7cdd3cc587f1","_type":"link","href":"https://github.com/amperser/proselint/"},{"_key":"a4cf7235933d","_type":"link","href":"https://github.com/rowanmanning/joblint"},{"_key":"86be8b54e86e","_type":"link","href":"https://github.com/btford/write-good"},{"_key":"4cb28935338b","_type":"link","href":"https://github.com/errata-ai/vale"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her finnes det flere og flere verktøy som kan brukes, men dessverre støtter mange hovedsakelig kun engelsk. Verktøy som "},{"_type":"span","marks":["7cdd3cc587f1"],"text":"proselint"},{"_type":"span","marks":[],"text":", "},{"_type":"span","marks":["a4cf7235933d"],"text":"joblint"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["86be8b54e86e"],"text":"write good"},{"_type":"span","marks":[],"text":" er alle verktøy som ser på engelsk rettskriving og språkprofil. Disse verktøyene dekker alle hvert sitt område (dog med noe overlapp). For å unngå å kjøre alt for mange verktøy, anbefales "},{"_type":"span","marks":["4cb28935338b"],"text":"vale"},{"_type":"span","marks":[],"text":". Vale er et verktøy som støtter flere språkprofiler og verktøy, og har også god støtte for de fleste filformater. I tillegg kan man lage sine egne språkprofiler i vale, som gir mulighet til å støtte norsk."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Regelsettet i vale er definert som YAML med Regex, og er dermed lett å lese og lage. Det er flere features som ordlister fra txt-filer; ordbytter for ord man ønsker å bytte ut. Eksempelvis for markedsføringsprofil eller inkluderende språk eller lett logikk - som ord som ikke passer sammen, som “mindre umulig”."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["code"],"text":"extends: existence"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["code"],"text":"message: \"Try to avoid using clichés like '%s'.\""}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["code"],"text":"ignorecase: true"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["code"],"text":"level: warning"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["code"],"text":"tokens:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["code"],"text":"- like clockwork"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I tillegg har mange publiseringsverktøy innebygde tester for døde linker, som kan være svært nyttig. Det er kjipt å lese dokumentasjon og finne ut at noen av de interne linkene ikke fungerer!"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Publisering"}]},{"_type":"block","markDefs":[{"_key":"1cbbd67e8bfc","_type":"link","href":"https://sphinxcontrib-confluencebuilder.readthedocs.io/en/stable/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Nå har vi skrevet dokumentasjonen, reviewet den og testet teksten. Da er det på tide å publisere den. I likhet med mye annet er dette også automatisert. Ikke noe klipp og lim inn i Confluence (men "},{"_type":"span","marks":["1cbbd67e8bfc"],"text":"det finnes verktøy for å publisere til Confluence"},{"_type":"span","marks":[],"text":"!)."}]},{"_type":"block","markDefs":[{"_key":"da0d91d4ed2e","_type":"link","href":"https://pandoc.org/"},{"_key":"31ed23874e02","_type":"link","href":"https://www.sphinx-doc.org/en/master/"},{"_key":"2d152543bc28","_type":"link","href":"https://readthedocs.com/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Noen verktøy som er ekstremt kraftfulle er "},{"_type":"span","marks":["da0d91d4ed2e"],"text":"pandoc"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["31ed23874e02"],"text":"sphinx"},{"_type":"span","marks":[],"text":". Disse verktøyene har dog en ganske bratt læringskurve og tilbyr verktøy for alle deler av prosessen: Fra skriving til testing til publisering. I tillegg finnes det offentlige tjenester som er hakket enklere: som "},{"_type":"span","marks":["2d152543bc28"],"text":"read the docs"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det finnes mange verktøy der ute, og det krever litt øvelse å få god og sammenhengende dokumentasjon. Men med docs-as-code, kan man gjøre det litt lettere å få god dokumentasjon som alle kan bidra til."}]}],"tags":["Backend","Frontend"]}
{"_type":"post","_createdAt":"2022-08-24T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/effektiv-json-validering-med-typebox/hero.webp"},"title":"Effektiv JSON validering med TypeBox","author":"Anders Olav Candasamy","subtitle":"Selvom jeg skriver all koden min med TypeScript, ender jeg fortsatt opp med typefeil.","description":"Effektiv JSON validering med TypeBox","publishedAt":"2022-08-24T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det er lett å tro at dersom du skriver koden din i TypeScript, så ender du ikke opp med typefeil: "},{"_type":"span","marks":["code"],"text":"Uncaught TypeError: Cannot read property 'foo' of undefined"},{"_type":"span","marks":[],"text":". Men hvorfor ikke?"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Forklaringen"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Forklaringen er veldig enkel og ikke overraskende – typen "},{"_type":"span","marks":["code"],"text":"any"},{"_type":"span","marks":[],"text":". "},{"_type":"span","marks":["code"],"text":"any"},{"_type":"span","marks":[],"text":" gjør at TypeScript ikke bryr seg om hva du skriver og godtar at en verdi kan være hva som helst. Jeg bruker ytterst sjeldent "},{"_type":"span","marks":["code"],"text":"any"},{"_type":"span","marks":[],"text":", men oppdaget at det var i "},{"_type":"span","marks":["code"],"text":"fetch"},{"_type":"span","marks":[],"text":" kallene mine hvor jeg, ganske så skjult, introduserte dem."}]},{"_type":"code","code":"async function getPerson(id: string) {\n  const person = await fetch(`/person/${id}`).then((response) =>\n    response.json()\n  );\n  // 😬\n  return person as Person;\n}\n","language":"ts"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Problemet her er at typen til "},{"_type":"span","marks":["code"],"text":"response.json()"},{"_type":"span","marks":[],"text":" er "},{"_type":"span","marks":["code"],"text":"any"},{"_type":"span","marks":[],"text":" og jeg "},{"_type":"span","marks":["em"],"text":"\"caster den bare\""},{"_type":"span","marks":[],"text":" til typen "},{"_type":"span","marks":["code"],"text":"Person"},{"_type":"span","marks":[],"text":". Det kan godt være at antagelsen min om hva "},{"_type":"span","marks":["code"],"text":"/person/"},{"_type":"span","marks":[],"text":" endepunktet leverer alltid er riktig, men det er vanskelig å garantere. Så hvordan kan jeg, på en praktisk måte, fjerne "},{"_type":"span","marks":["code"],"text":"as Person"},{"_type":"span","marks":[],"text":"-biten?"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Løsningen - JSON Schema med TypeBox"}]},{"_type":"block","markDefs":[{"_key":"dc42245c5b36","_type":"link","href":"https://json-schema.org/"},{"_key":"63c0e16ea718","_type":"link","href":"https://github.com/sinclairzx81/typebox"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Den mest rett frem måten å løse dette på er ved å manuelt inspisere objektet som blir returnert og forsikre at den er slik vi forventer. Dette kan gjøres \"manuelt\" ("},{"_type":"span","marks":["code"],"text":"typeof person.name === \"string\""},{"_type":"span","marks":[],"text":" osv), men det er her "},{"_type":"span","marks":["dc42245c5b36"],"text":"JSON Schema"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["63c0e16ea718"],"text":"TypeBox"},{"_type":"span","marks":[],"text":" kommer inn i bildet."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/effektiv-json-validering-med-typebox/cartoon.webp","alt":"Cartoon"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n  "},{"_type":"span","marks":[],"text":"JSON Schema form er kanskje ikke for alle"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"JSON Schema er et vokabular for å definere strukturen til et JSON-objekt. Denne strukturen kan brukes for å validere at et vilkårlig objekt passer med skjemaet. Dessverre blir det fort vanskelig å skrive og vedlikeholde slike skjemaer for større JSON strukturer. Heldigvis finnes det biblioteker som TypeBox som gjør ting betraktelig bedre."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"TypeBox"}]},{"_type":"block","markDefs":[{"_key":"e57392fc9d4c","_type":"link","href":"https://github.com/sinclairzx81/typebox"}],"style":"normal","children":[{"_type":"span","marks":["e57392fc9d4c"],"text":"TypeBox"},{"_type":"span","marks":[],"text":" gjør i grunn bare én ting: den hjelper deg å definere strukturen til et JSON-objekt ("},{"_type":"span","marks":["code"],"text":"JSON Schema"},{"_type":"span","marks":[],"text":"). Det er alt. Den inneholder altså ingen funksjon for å gjøre validering, men dette kommer jeg tilbake til."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"La oss se hvordan vi kan definere strukturen til objektet- "},{"_type":"span","marks":["code"],"text":"PersonSchema"}]},{"_type":"code","code":"import { Type } from '@sinclair/typebox';\n\nconst PersonSchema = Type.Object({\n  navn: Type.String(),\n  alder: Type.Number(),\n});\n","language":"ts"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I koden over har vi definert et JSON-objekt som inneholder "},{"_type":"span","marks":["code"],"text":"navn"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["code"],"text":"alder"},{"_type":"span","marks":[],"text":". "},{"_type":"span","marks":["code"],"text":"Type"},{"_type":"span","marks":[],"text":"-objektet som vi har importert inneholder mye funksjonalitet som hjelper oss å definere mer komplekse skjemaer."}]},{"_type":"code","code":"const PersonOrDogSchema = Type.Union([\n  Type.Object({\n    type: Type.Literal('Person'),\n    navn: Type.String(),\n    alder: Type.Number(),\n  }),\n\n  Type.Object({\n    type: Type.Literal('Dog'),\n    navn: Type.String(),\n    voffDecibel: Type.Optional(Type.Number()),\n  })\n]);\n","language":"ts"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her har vi definert et mer avansert objekt som er enten en "},{"_type":"span","marks":["code"],"text":"Person"},{"_type":"span","marks":[],"text":" eller "},{"_type":"span","marks":["code"],"text":"Dog"},{"_type":"span","marks":[],"text":" (jeg vet ikke hvorfor et API vil levere noe slikt, men dette er bare et eksempel)."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"For meg virker disse skjemaene som en mer verbos versjon av TypeScript. Nøkkelordene brukt her kjenner i hvert fall jeg igjen fra TypeScript."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det er nok her mange lurer: \"Må jeg definere et JSON Schema OG et TypeScript interface?\". Svaret er heldigvis nei, fordi TypeBox har en feature som jeg mener er en "},{"_type":"span","marks":["em"],"text":"game changer"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Fra skjema til TypeScript"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det virker "},{"_type":"span","marks":["em"],"text":"nesten"},{"_type":"span","marks":[],"text":" som magi, men med bare én linje kode kan vi gjøre et skjema om til en TypeScript-type."}]},{"_type":"code","code":"import { Static } from \"@sinclair/typebox\";\n\ntype IPersonSchema = Static<typeof PersonSchema>;\n","language":"ts"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Denne typen er nå helt identisk med følgene:"}]},{"_type":"code","code":"type IPersonSchema = {\n  navn: string;\n  alder: string;\n};\n","language":"ts"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Selv den mer komplekse "},{"_type":"span","marks":["code"],"text":"PersonOrDogSchema"},{"_type":"span","marks":[],"text":" kan konvertes:"}]},{"_type":"code","code":"type IPersonOrDog = Static<typeof PersonOrDogSchema>;\n\n// er det samme som\ntype IPersonOrDogSchema =\n  | {\n      type: 'Person';\n      navn: string;\n      alder: number;\n    }\n  | {\n      type: 'Dog';\n      voffDecibel?: number | undefined;\n      navn: string;\n    };\n","language":"ts"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Dette er en av grunnene til at jeg anbefaler TypeBox. For en "},{"_type":"span","marks":["em"],"text":"ganske liten"},{"_type":"span","marks":[],"text":" kostnad får du et TypeScript interface og en JSON Schema form. En kan brukes ved "},{"_type":"span","marks":["em"],"text":"build time"},{"_type":"span","marks":[],"text":" og den andre ved "},{"_type":"span","marks":["em"],"text":"run time"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hvordan du skal gjøre validering har jeg ikke snakket om enda. Som nevnt før gjør TypeBox ingenting av validering – den hjelper oss bare definere et skjema. For validering må vi benytte andre biblioteker."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Validering med Ajv"}]},{"_type":"block","markDefs":[{"_key":"a5a20f703dff","_type":"link","href":"https://json-schema.org/"},{"_key":"68f3c6f97860","_type":"link","href":"https://json-schema.org/implementations.html#validators"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Som nevnt tidligere er skjemaet TypeBox lager er et "},{"_type":"span","marks":["a5a20f703dff"],"text":"JSON Schema"},{"_type":"span","marks":[],"text":". Det finnes "},{"_type":"span","marks":["68f3c6f97860"],"text":"mange biblioteker"},{"_type":"span","marks":[],"text":", i forskjellige programmeringsspråk, som kan gjøre validering av JSON Schema. Den mest populære for JavaScript er "},{"_type":"span","marks":["code"],"text":"Ajv"},{"_type":"span","marks":[],"text":" og den jeg vil benytte i eksemplene under."}]},{"_type":"code","code":"import Ajv from 'ajv';\n\nconst ajv = new Ajv();\n\nconst isPerson = ajv.compile<IPersonSchema>(PersonSchema);\n\nif (isPerson(something)) {\n  // something er nå `IPersonSchema`\n} else {\n  // 🤷\n}\n","language":"ts"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Ajv gir oss en funksjon som returnerer enten "},{"_type":"span","marks":["code"],"text":"true"},{"_type":"span","marks":[],"text":" eller "},{"_type":"span","marks":["code"],"text":"false"},{"_type":"span","marks":[],"text":" avhengig av om det du sender som argument passer med skjemaet. Vi sender også "},{"_type":"span","marks":["code"],"text":"IPersonSchema"},{"_type":"span","marks":[],"text":" så den vet hvilken type et "},{"_type":"span","marks":["code"],"text":"true"},{"_type":"span","marks":[],"text":" resultat vil være – en type guard."}]},{"_type":"block","markDefs":[{"_key":"992af475b914","_type":"link","href":"https://ajv.js.org/standalone.html"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det finnes mange andre validering biblioteker der ute. Du kan fritt benytte en annen enn Ajv om du ønsker, men anbefaler at du starter med den. En grunn til å ikke velge Ajv er at den kan være for stor i antall kilobytes. De har en "},{"_type":"span","marks":["992af475b914"],"text":"“løsning”"},{"_type":"span","marks":[],"text":", men den tror jeg er litt overkill for de fleste."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Fullstendig løsning"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Med alt dette kan vi endelig kvitte oss med "},{"_type":"span","marks":["code"],"text":"as Person"},{"_type":"span","marks":[],"text":" fra vårt første eksempel og heller validere at det faktisk "},{"_type":"span","marks":["strong"],"text":"er"},{"_type":"span","marks":[],"text":" en person."}]},{"_type":"code","code":"async function getPerson(id: string) {\n  const person = await fetch(`/person/${id}`).then((response) =>\n    response.json()\n  );\n\n  if (isPerson(person)) {\n    return person;\n  }\n\n  throw new Error(\n    `uventet response fra /person/${id} - (${JSON.stringify(person)})`\n  );\n}\n","language":"ts"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hva du faktisk skal gjøre ved feil må du bestemme selv. Så lenge skjemaet ditt ikke krever mer enn det du faktisk bruker gir det mest mening å kaste en exception. Det tenker i hvert fall jeg. Da får du en stack trace som viser nøyaktig hvor, og hvorfor, ting gikk galt. Det er mye bedre enn "},{"_type":"span","marks":["code"],"text":"Uncaught TypeError: Cannot read property 'foo' of undefined"},{"_type":"span","marks":[],"text":" et tilfeldig sted i koden."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Oppdag feil - ikke skap dem"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Helt til slutt vil jeg anbefale å skrive skjemaer som ikke "},{"_type":"span","marks":["em"],"text":"skaper"},{"_type":"span","marks":[],"text":" feil, men heller "},{"_type":"span","marks":["em"],"text":"oppdager"},{"_type":"span","marks":[],"text":" feil tidlig. Derfor burde du ikke kreve felter som du ikke bruker – da skaper du feil. Dette er dog helt avhengig av hva du ønsker og hvor "},{"_type":"span","marks":["em"],"text":"\"paranoid\""},{"_type":"span","marks":[],"text":" du ønsker å være."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Feedback"}]},{"_type":"block","markDefs":[{"_key":"08660590b6a2","_type":"link","href":"mailto:aca@capraconsulting.no"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Takk for at du leste. Send gjerne en "},{"_type":"span","marks":["08660590b6a2"],"text":"e-post"},{"_type":"span","marks":[],"text":" om du har spørsmål eller kommentarer."}]}],"tags":["TypeScript","Frontend"]}
{"_type":"post","_createdAt":"2022-06-08T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/forvirret-av-state-management-i-react/hero.webp"},"title":"Forvirret av State management i React?","author":"Camilla Marie Dalan","subtitle":"State management i React er ikke alltid like lett. Denne er artikkelen for deg som kan en del, men som kanskje ikke har full kontroll på de forskjellige typene state, eller hvordan du best skal håndtere og plassere staten du har. Du får også noen praktiske eksempler som en liten guide til hvordan du burde håndtere state.","description":"State management i React er ikke alltid like lett. Denne er artikkelen for deg som kan en del, men som kanskje ikke har full kontroll på de forskjellige typene state, eller hvordan du best skal håndtere og plassere staten du har. Du får også noen praktiske eksempler som en liten guide til hvordan du burde håndtere state.","publishedAt":"2022-06-08T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I denne artikkelen skal jeg prøve å gjøre state litt mer forståelig. Jeg skal i hvert fall gjøre et godt forsøk. 😬"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"Disclaimer: Siden programmering vanligvis foregår på engelsk og det er mange ord og uttrykk som ikke har noen gode oversettelser til norsk, kommer denne artikkelen til å ha en blanding av norsk og engelsk. Norskifiseringsforkjempere, hold your horses!"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi skal se på:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"Hva er React state og hvordan funker det?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"Client vs server state"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"Forskjellige typer state"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"Noen statehåndteringsteknikker"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"Hva burde jeg bruke når?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Hva er state og hvordan funker det?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"State er data eller informasjon som forandrer seg over tid. I React er state spesifikt brukt til å optimalisere oppdatering av siden ved å finne ut "},{"_type":"span","marks":["em"],"text":"akkurat hva"},{"_type":"span","marks":[],"text":" som skal tegnes opp på nytt i DOM-en. Dette gjør den ved å holde styr på en virtuell DOM, eller VDOM. Når staten i en komponent endrer seg, vil den regne ut forskjellen mellom den VDOM-en og den faktiske DOM-en og finne ut hva som burde tegnes opp for brukeren på nytt. Denne optimaliseringen gjøres fordi oppdatering av den faktiske DOM-en er dyrt."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"React gjør denne optimaliseringen ved hjelp at to faser: render og commit. Render-fasen er når React gjør kalkulasjoner for å oppdaterer din "},{"_type":"span","marks":["strong"],"text":"virtuelle DOM"},{"_type":"span","marks":[],"text":", mens commit-fasen skjer når React oppdaterer den faktiske DOM-en. React kan derfor rekalkulere VDOM-en mange ganger, men uten at resultatet faktisk resulterer i "},{"_type":"span","marks":["em"],"text":"synlige"},{"_type":"span","marks":[],"text":" forandringer, vil den ikke "},{"_type":"span","marks":["em"],"text":"committe"},{"_type":"span","marks":[],"text":" det til den virkelige DOM-en."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Ganske smart! Men selv om den virkelige DOM-en ikke blir oppdatert, kan mange re-renders fortsatt være dyrt. Spesielt hvis du for eksempel gjør mange computationally heavy operations eller henting av data (her finnes det andre optimeringer du kan gjøre som feks React.memo). Dette kan igjen gå ut over performance og brukeropplevelsen. Så du må selv sørge for at du bruker og oppdaterer state riktig. Det er noe av dette vi skal se på i denne artikkelen."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Client vs server state 💻"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Når det kommer til forskjellige typer state trenger vi først å ta for oss forskjellen på client og server state."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Server-side state"},{"_type":"span","marks":[],"text":": data som hentes fra en annen server gjennom nettverkskall."},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":["strong"],"text":"Client-side state"},{"_type":"span","marks":[],"text":": lokal state bare for den ene brukeren. Dette kan feks være dark/light mode, toggles, filtre, osv."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Med server-side state, siden du må hente data fra en annen server, krever det fort en del teknikker for å håndtere oppdateringer av dataen og optimalisere brukeropplevelsen. Med andre ord så må du fort måtte ta hensyn til feilhåndtering, caching, loading state, paginering og revalidering av cachen. Og, som Phil Karlton angivelig sa: “There are only two hard things in Computer Science: cache invalidation and naming things.” eller populert: “There are only two hard things in Computer Science: cache invalidation and naming things, and off-by-1 errors.”"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Client state er, som du kanskje skjønner, litt enklere å håndtere enn server state siden du slipper denne cachingen og å tenke på dyre nettverkskall."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Når det kommer til hvordan håndtere server-side state, kommer tredjepartsbiblioteker fort godt med. De har ofte innebygd støtte (men ikke alltid, og ofte ikke for alt) for for eksempel håndtering av caching, loading state, error handling, etc. Flere av dem kan også hjelpe til med å håndtere global client-side state."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Før du velger et tredjepartsbibliotek er det viktig å spørre seg selv “trenger jeg det i det hele tatt?”. Slike biblioteker kan løse mange utfordringer, men i mange (gjerne enklere) applikasjoner er de strengt tatt ikke nødvendige og kan bringe med seg større kognitiv last, i tillegg til mer kode i prosjektet (større filer, mer KB)."}]},{"_type":"block","markDefs":[{"_key":"98190fd0ce93","_type":"link","href":"https://react-query.tanstack.com/comparison"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Utdypende forklaring på forskjellige tredjepartsbiblioteker kan bli ganske langt og litt komplisert, så det tror jeg heller får være med i en senere post. Om du har funnet ut at du trenger et tredjepartsbibliotek kan jeg anbefale å se på "},{"_type":"span","marks":["98190fd0ce93"],"text":"denne"},{"_type":"span","marks":[],"text":" siden for en oppsummering av de største bibliotekene og hva de tilbyr."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Hva slags typer state har vi?"}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Local State"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Local state er state som tilhører og bare brukes av én komponent, og den enkleste formen for state. Man ønsker generelt å bruke dette så mye som mulig fordi det er det enkleste (både for deg og for utviklerne som kommer etter deg) og man har bedre kontroll på hva som fører til re-rendring og ikke. Det er selvfølgelig ikke mulig å bruke local state hele tiden, men noe man kan ha i bakhodet når man skal sette opp eller endre på komponentstrukturen i applikasjonen.Et eksempel på slik state er en enkel counter-komponent som holder styr på sin egen count state:"}]},{"_type":"code","code":"import React, { useState } from \"react\";\n \nconst Counter = () => {\n const [count, setCount] = useState(0);\n \n const handleDecrement = () => setCount((oldCount) => oldCount - 1);\n const handleIncrement = () => setCount((oldCount) => oldCount + 1);\n \n return (\n   <div>\n     <button onClick={handleDecrement}>-</button>\n     {count}\n     <button onClick={handleIncrement}>+</button>\n   </div>\n );\n};\n \nexport default Counter;\n","language":"js"},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Lifted State"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Når to eller flere søskenkomponenter (siblings) deler samme state. Da kan man “løfte” staten opp til nærmeste parent-komponent. Så kan man sende ned staten som props til barna. Her må man passe på at når staten i parenten endrer seg, vil parent-komponenten re-rendres, i tillegg til alle komponenter under seg, selv om de får nye props eller ikke (dette vil ikke nødvendigvis føre til at komponenten blir tegnet opp/re-painted i DOMen på nytt). Dette er default oppførsel for komponenter, og for å ikke re-rendre children som ikke får nye props kan vi wrappe exporten av child-komponenten i React.memo."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"code","code":"export default React.memo(Child);\n","language":"js"},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/forvirret-av-state-management-i-react/liftedstate1.webp","alt":"Component tree"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n  "},{"_type":"span","marks":[],"text":"Figur 1: Shallow lifted state"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/forvirret-av-state-management-i-react/liftedstate2.webp","alt":"Component tree"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n  "},{"_type":"span","marks":[],"text":"Figur 2: Deeper lifted state"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Derived State/Computed Properties"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Derived state, eller computed properties, er state som er utledet fra annen state. Her tenker du sikkert:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"“Wow, Camilla, her var du god til å forklare.”"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det jeg mener med det er at om du har en state, og du hele tiden trenger én spesifikk verdi langt nede i state-objektet, eller noe som er kalkulert ut i fra staten, kan du bare lage en variabel som settes til denne verdien fra staten din. For eksempel, hvis du har en liste med personer og du trenger en liste med bare navnene fra personene, kan du, i stedet for akkurat der du bruker lista med navnene i JSXen, lage en variabel hvis verdi er kalkulert ut i fra staten (lista med personer)."}]},{"_type":"code","code":"import React, { useState } from \"react\";\n \nconst initialPeopleList = [\n { name: \"Jenny\", age: 40 },\n { name: \"Ada\", age: 207 },\n { name: \"Truls\", age: 29 },\n];\n","language":"js"},{"_type":"code","code":"const DerivedState = () => {\n const [people, setPeople] = useState(initialPeopleList);\n const names = people.map((person) => person.name);\n \n return (\n   <div>\n     <h3>Derived State</h3>\n \n     {names.map((name) => (\n       <p>{name}</p>\n     ))}\n   </div>\n );\n};\n \nexport default DerivedState;\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her er det også viktig å tenke at denne utregningen blir kjørt for hver re-render, så om man har litt tunge operasjoner, kan det være lurt å optimere ved å bruke useMemo. For eksempel:"}]},{"_type":"code","code":"const names = useMemo(() => people.map((person) => person.name), [people]);\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Da er det viktig å huske på å legge inn people-staten i dependency arrayen i argument nummer to til useMemo, så den blir rekalkulert når people endrer seg."}]},{"_type":"block","markDefs":[{"_key":"e16d8c57a716","_type":"link","href":"https://isamatov.com/react-derived-state/"}],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"Disclaimer: når du søker på “derived state react” får du for det meste opp at derived state er å sette ny state i en child-komponent basert på props som blir sendt ned fra parent-komponenten. Det er en helt annen ting, og kan bringe med flere andre utfordringer som jeg ikke skal ta tak i her. Se ​​"},{"_type":"span","marks":["em","e16d8c57a716"],"text":"https://isamatov.com/react-derived-state/"},{"_type":"span","marks":["em"],"text":" for forklaring på det jeg tenker på som derived state."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Global state 🌐"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hvis du har komponenter som trenger samme state (som sett i figuren under), men som er langt fra hverandre i DOM-treet, blir det å bruke lifted state fort veldig komplisert og tungvint fordi du må gjøre mye prop drilling. Da kan det være mer ergonomisk med global state. Global state er state som kan nås fra hvor som helst i komponenttreet og kan håndteres med enten tredjepartsbiblioteker eller det innebygde Context-API-et til React."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Statehåndteringsteknikker"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her tar jeg for meg litt teknikker man kan ta i bruk for å unngå å dra inn et tredjepartsbibliotek eller generelt gjøre client state litt enklere å håndtere."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Component Composition"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Component Composition en teknikk der man “komponerer” komponenter sammen fra en forelder som ellers hadde vært ganske langt opp i hierarkiet. Dette gjør man for å håndtere state for flere komponenter som ligger litt langt nede trenger samme state, uten å bruke tredjepartsbiblioteker."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/forvirret-av-state-management-i-react/components.webp","alt":"Component tree"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n  "},{"_type":"span","marks":[],"text":"Figur 3: Component composition deeper component tree"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I dette eksempelet kan vi se at CardComponent har en Header og Content, der Content igjen har Tasks. Vi vet også at disse komponentene hører sammen. I Capra liker vi jo å unngå hierarki, så i stedet for den hierarkiske strukturen over, kan vi endre på den til en flatere struktur som vist i figuren under."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/forvirret-av-state-management-i-react/components2.webp","alt":"Component tree"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n    Figur 4: Component composition shallow component tree\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"På denne måten kan vi unngå “prop drilling” der vi må sende ned staten som props i flere ledd for å nå komponenten som trenger det."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Men hvordan får vi dette til? La oss se på koden til det første eksempelet (se Figur 3) med mye hierarki:"}]},{"_type":"code","code":"import React from \"react\";\nimport styles from \"./Card.module.css\";\n \nconst workTasks = [\n { id: 1, text: \"Write blog post\" },\n { id: 2, text: \"Watch course on Udemy\" },\n { id: 3, text: \"Prepare konsulentskolen for the students\" },\n];\n \nconst domesticTasks = [\n { id: 1, text: \"Clean bathroom\" },\n { id: 2, task: \"Take out the trash\" },\n];\n \nconst NoComponentComposition = () => {\n return (\n   <div className={styles.cardWrapper}>\n     <Card\n       title=\"Work tasks\"\n       content={{\n         text: \"Here are your tasks to do at work\",\n         tasks: workTasks,\n       }}\n     />\n     <Card\n       title=\"Domestic tasks\"\n       content={{ text: \"Here are your tasks at home\", tasks: domesticTasks }}\n     />\n   </div>\n );\n};\n \nconst Card = ({ title, content }) => {\n return (\n   <div className={styles.card}>\n     <CardHeader title={title} />\n          <CardContent {...content} />\n   </div>\n );\n};\n \nconst CardHeader = ({ title }) => {\n return <h2>{title}</h2>;\n};\n \nconst CardContent = ({ text, tasks }) => {\n return (\n   <section>\n     <p>{text}</p>\n     <TasksList tasks={tasks}></TasksList>\n   </section>\n );\n};\n \nconst TasksList = ({ tasks }) => {\n return (\n   <div>\n     {tasks.map((task) => (\n       <p key={task.id}>{task.text}</p>\n     ))}\n   </div>\n );\n};\n \nexport default NoComponentComposition;\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her har vi parent-komponenten “NoComponentComposition” som sender inn title og content til “Card” som igjen sender title til “CardHeader” og content til “CardContent” som igjen sender tasks til “TasksList”. Puh. Vi kan kjenne at dette kan bli tungvint, og dette er bare et lite eksempel. Men hva kan vi gjøre med det?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Jo, vi kan endre på alle wrapper-komponentene (som “Card” og “CardContent”) til å returnere children i stedet for de spesifikke komponentene. Da kan vi, i den øverste komponenten, sende inn disse spesifikke komponentene mellom åpne- og lukke-JSXen til wrapper-komponentene. La oss se på det samme eksempelet som over, men med Component Composition (se figur 4)."}]},{"_type":"code","code":"import React from \"react\";\nimport styles from \"./Card.module.css\";\n \nconst workTasks = [\n { id: 1, text: \"Write blog post\" },\n { id: 2, text: \"Watch course on Udemy\" },\n { id: 3, text: \"Prepare konsulentskolen for the students\" },\n];\n \nconst domesticTasks = [\n { id: 1, text: \"Clean bathroom\" },\n { id: 2, task: \"Take out the trash\" },\n];\n \nconst ComponentComposition = () => {\n return (\n   <div className={styles.cardWrapper}>\n     <Card>\n       <CardHeader title=\"Work tasks\" />\n       <CardContent text=\"Here are your tasks to do at work\">\n         <TasksList tasks={workTasks} />\n       </CardContent>\n     </Card>\n     <Card>\n       <CardHeader title=\"Domestic tasks\" />\n       <CardContent text=\"Here are your tasks at home\">\n         <TasksList tasks={domesticTasks} />\n       </CardContent>\n     </Card>\n   </div>\n );\n};\n \nconst Card = ({ children }) => {\n return <div className={styles.card}>{children}</div>;\n};\n \nconst CardHeader = ({ title }) => {\n return <h2>{title}</h2>;\n};\n \nconst CardContent = ({ text, children }) => {\n return (\n   <section>\n     <p>{text}</p>\n     {children}\n   </section>\n );\n};\n \nconst TasksList = ({ tasks }) => {\n return (\n   <div>\n     {tasks.map((task) => (\n       <p key={task.id}>{task.text}</p>\n     ))}\n   </div>\n );\n};\n \nexport default ComponentComposition;\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her ser vi at både “Card” og “CardContent” rendrer ut children i stedet for “CardHeader”, “CardContent” og “TaskList” respektivt fra eksempelet uten Component Composition. Det gjør at vi heller kan definere det i den øverste parent-komponenten og dermed passe ned props direkte til de nederste komponentene uten prop drilling!"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Dersom du trenger å bestemme akkurat hvor child-komponentene skal ligge i JSX-en til parent-komponenten, har du to muligheter:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"Du kan sende inn et objekt med key/values mellom åpne- og lukke-JSX-en til parent-komponenten, der verdiene (values) er komponentene."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"Du kan sende inn child-komponentene som navngitte props."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Flere vil nok argumentere for at alternativ 2 er det mest idiomatiske når det kommer til React. La oss se på hvordan det kan gjøres."}]},{"_type":"code","code":"const ComponentCompositionWithSpecificPlacement = () => {\n return (\n   <div className={styles.cardWrapper}>\n     <Card\n       header={<CardHeader title=\"Work tasks\" />}\n       content={\n         <CardContent text=\"Here are your tasks to do at work\">\n           <TasksList tasks={workTasks} />\n         </CardContent>\n       }\n     />\n     <Card\n       header={<CardHeader title=\"Domestic tasks\" />}\n       content={\n         <CardContent text=\"Here are your tasks at home\">\n           <TasksList tasks={domesticTasks} />\n         </CardContent>\n       }\n     />\n   </div>\n );\n};\n \nconst Card = ({ header, content }) => {\n return (\n   <div className={styles.card}>\n     <div>{header}</div>\n     <div>{content}</div>\n   </div>\n );\n};\n","language":"js"},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Web Storage"}]},{"_type":"block","markDefs":[{"_key":"43907324e558","_type":"link","href":"https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"I utgangspunktet vil all local state (altså, state som er lagret hos brukeren, ikke typen state som forklart over) i applikasjonen din bli slettet om brukeren for eksempel laster siden på nytt eller lukker nettleseren. Dersom du ønsker å lagre slik lokal state hos brukeren på tvers av nettlesersesjoner, kan du bruker web storage. Dette er data som lagres i nettleseren i key/value-par på tvers av reloads eller sesjoner. Det finnes to typer web storage: sessionStorage og localStorage. sessionStorage er data som persisteres over reload av nettsiden, mens localStorage er data som persisteres selv om brukeren lukker hele nettleseren. Du kan lese mer om Web Storage "},{"_type":"span","marks":["43907324e558"],"text":"her"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"React Context"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"La oss ta et eksempel der vi har en nettside der brukeren kan endre fra light mode til dark mode. Slik state vil vi trenge overalt i applikasjonen og egner seg dermed dårlig til noen av de andre ovennevnte teknikkene. Så vi bruker Context. Men hvordan bruker vi det?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"theme-context.js"}]},{"_type":"code","code":"import { createContext } from \"react\";\n \nconst ThemeContext = createContext({\n isLightTheme: true,\n toggleTheme: () => {},\n});\n \nexport default ThemeContext;\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Først lager vi et Context-objekt ved hjelp av den innebygde “createContext”-funksjonen til React og sender inn default state-verdier som argument. Når du bruker “createContext” vil den lage et objekt med en Provider, Consumer og displayName. Provider er en HOC (Higher-Order Component) som du wrapper rundt alle komponentene som trenger contexten. Consumer er også en HOC, men som brukes til å wrappe konsumentene. Men i dag, med hooks, vil jeg argumentere for at det er mye enklere å bruke “useContext”-hooken når du skal bruke en context i en konsument."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Siden hele appen vår trenger ThemeContext, la oss wrappe alt under App med ThemeContext.Provider."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"App.jsx"}]},{"_type":"code","code":"import { useState } from \"react\";\nimport \"./App.css\";\nimport ThemeContext from \"./context/theme-context\";\n \nconst App = () => {\n const [isLightTheme, setIsLightTheme] = useState(true);\n const toggleTheme = () => setIsLightTheme((prevVal) => !prevVal);\n \n return (\n   <ThemeContext.Provider value={{ isLightTheme, toggleTheme }}>\n     ...\n   </ThemeContext.Provider>\n );\n};\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her ser vi at vi legger inn startverdiene til contexten, som kommer fra staten i App.jsx. La oss ta i bruk denne contexten i en “Card”-komponent med “useContext”-hooken."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"Card.jsx"}]},{"_type":"code","code":"import React from \"react\";\nimport { useContext } from \"react\";\nimport { ThemeContext } from \"../context/theme-context\";\nimport styles from \"./Card.module.css\";\n \nconst Card = ({ children }) => {\n const { isLightTheme } = useContext(ThemeContext);\n \n return (\n   <div\n     className={`${styles.card} ${\n       isLightTheme ? styles.lightTheme : styles.darkTheme\n     }`}\n   >\n     {children}\n   </div>\n );\n};\n \nexport default Card;\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her henter vi bare ut verdien “isLightTheme” fra Context-en og bruker den til å sette hvilken css-klasse Card-komponenten skal ha. Ganske greit!"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Siden vi også har lagt til funksjonen “toggleTheme” i Context-en, kan vi også bruke denne til å endre på “isLightTheme”. La oss lage en navbar med en toggle-knapp for å toggle mellom light og dark theme."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"Navbar.jsx"}]},{"_type":"code","code":"import React, { useContext } from \"react\";\nimport ThemeContext from \"../context/theme-context\";\nimport styles from \"./Navbar.module.css\";\n \nconst Navbar = () => {\n const { isLightTheme, toggleTheme } = useContext(ThemeContext);\n \n return (\n   <nav>\n     <h1>React Context Demo</h1>\n     <label className={styles.switch}>\n       <input value={isLightTheme} onChange={toggleTheme} type=\"checkbox\" />\n       <span className={`${styles.slider} ${styles.round}`}></span>\n     </label>\n   </nav>\n );\n};\n \nexport default Navbar;\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"La oss sette alt sammen i App.jsx:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"App.jsx"}]},{"_type":"code","code":"import { useState } from \"react\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport styles from \"./App.module.css\";\nimport Card from \"./components/Card\";\nimport Navbar from \"./components/Navbar\";\nimport ThemeContext from \"./context/theme-context\";\n \nconst persons = [\n {\n   firstName: \"Mark\",\n   age: 35,\n },\n { firstName: \"Ada\", age: 207 },\n { firstName: \"Karen\", age: 44 },\n];\n \nconst App = () => {\n const [isLightTheme, setIsLightTheme] = useState(true);\n const toggleTheme = () => setIsLightTheme((prevVal) => !prevVal);\n \n return (\n   <ThemeContext.Provider value={{ isLightTheme, toggleTheme }}>\n     <div\n       className={`${styles.container} ${\n         isLightTheme ? styles.light : styles.dark\n       }`}\n     >\n       <Navbar />\n       <div className={styles.contentContainer}>\n         {persons.map((person) => (\n           <Card>\n             <p>Name: {person.firstName}</p>\n             <p>Age: {person.age}</p>\n           </Card>\n         ))}\n       </div>\n     </div>\n   </ThemeContext.Provider>\n );\n};\n \nexport default App;\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I dette tilfellet er det bare to steg ned i hierarkiet vi trenger staten, så her hadde vi strengt tatt ikke trengt Context. Det er allikevel enkelt å tenke seg at appen fort kan vokse og trenge denne staten overalt på alle forskjellige nivåer. Da kommer Context godt med."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"En ekstra optimering vi kan gjøre her er å lage vår egen Provider-komponent som tar hånd om sin egen state, i stedet for at den blir kontrollert fra en komponent i appen, som vi gjør i App.jsx i dette tilfellet. La oss se på hvordan vi kan gjøre det i “theme-context.js”."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"theme-context.js"}]},{"_type":"code","code":"import { useState } from \"react\";\nimport { createContext } from \"react\";\n \nconst ThemeContext = createContext({\n isLightTheme: true,\n toggleTheme: () => {},\n});\n \nexport const ThemeContextProvider = ({ children }) => {\n const [isLightTheme, setIsLightTheme] = useState(true);\n \n const handleThemeToggle = () => setIsLightTheme((prevVal) => !prevVal);\n \n return (\n   <ThemeContext.Provider\n     value={{ isLightTheme, toggleTheme: handleThemeToggle }}\n   >\n     {children}\n   </ThemeContext.Provider>\n );\n};\n \nexport default ThemeContext;\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Med denne komponenten kan vi da dra ut ThemeContext.Provider fra App.jsx og bruke vår nye komponent, ThemeContextProvider i index.jsx:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"index.jsx"}]},{"_type":"code","code":"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ThemeContextProvider } from \"./context/theme-context\";\n \nReactDOM.render(\n <React.StrictMode>\n   <ThemeContextProvider>\n     <App />\n   </ThemeContextProvider>\n </React.StrictMode>,\n document.getElementById(\"root\")\n);\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi kan da forenkle App.jsx til:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"App.jsx"}]},{"_type":"code","code":"import { useContext } from \"react\";\nimport \"./App.css\";\nimport styles from \"./App.module.css\";\nimport Card from \"./components/Card\";\nimport Navbar from \"./components/Navbar\";\nimport ThemeContext from \"./context/theme-context\";\n \nconst persons = [\n {\n   firstName: \"Mark\",\n   age: 35,\n },\n { firstName: \"Ada\", age: 207 },\n { firstName: \"Karen\", age: 44 },\n];\n \nconst App = () => {\n const { isLightTheme } = useContext(ThemeContext);\n \n return (\n   <div\n     className={`${styles.container} ${\n       isLightTheme ? styles.light : styles.dark\n     }`}\n   >\n     <Navbar />\n     <div className={styles.contentContainer}>\n       {persons.map((person) => (\n         <Card>\n           <p>Name: {person.firstName}</p>\n           <p>Age: {person.age}</p>\n         </Card>\n       ))}\n     </div>\n   </div>\n );\n};\n \nexport default App;\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi ser her at React Context kan være utrolig nyttig og ganske intuitivt, men det har noen “mørke” sider vi trenger å tenke på før vi tar det i bruk."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Context er ikke så effektiv når det kommer til hyppige oppdateringer av state. Her burde du heller vurdere tredjepartsbiblioteker som Redux. Alle komponenter som er descendants av en Provider og som konsumerer Context-en (enten vha “useContext” eller Consumer-komponenten som Context-en lager), vil re-rendre når verdien contexten i Provider-en endrer seg. Sørg defror for å bryte opp contextene du har dersom ikke all staten i den samme Context-en hører til hverandre. Hold state som endrer seg med hverandre i samme Context, og streb etter å ikke ha få store, men heller mindre små Context-er."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Videre er det også viktig å ikke tenke at Context erstatter all kommunikasjon mellom komponenter som props. Det finnes en tid for alt."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Hva burde jeg bruke når? 🤔"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Staten trengs bare av én komponent"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\nBruk local state."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Staten trengs av to eller flere komponenter relativt nærme hverandre i DOM-treet"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\nBruk lifted state, ev Component Composition om det passer seg."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Staten trengs av to eller flere komponenter, relativt nærme, men trenger mye prop drilling."},{"_type":"span","marks":[],"text":"\nVurder Component Composition. Eventuelt Context eller et tredjepartsbibliotek."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Det er mange komponenter som trenger den samme staten."},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\nHvis disse komponentene er i nærheten av hverandre, vurdér lifted state. Dersom de krever en del prop drilling, vurder Component Composition. Dersom ingen av disse teknikkene passer, kan du vurdere global state. Bruk Context om staten ikke oppdateres ofte og du vet at komponenten ikke skal gjenbrukes til noe annet. Bruk et tredjepartsbibliotek dersom ingen av de ovennevnte strategiene passer."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Jeg har masse server-side state og trenger å optimalisere performance og brukeropplevelsen"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\nDefinitivt bruk et tredjepartsbibliotek med innebygd støtte for caching, loading state og error handling. I de aller aller fleste tilfeller er det ikke vits i å finne opp hjulet på nytt (om du ikke er Facebook eller noe)."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Generelt kan en gyllen regel for nye prosjekter være å unngå å dra inn et tredjepartsbibliotek om man ikke finner ut at man virkelig trenger det og fordelene overveier den økte kompleksiteten."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Happy state management! 👏"}]}],"tags":["Frontend","JavaScript"]}
{"_type":"post","_createdAt":"2020-03-13T00:00:00.000+01:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/fra-skolebenken-til-sky.webp"},"title":"Fra skolebenken til sky","author":"Julie Minsaas","subtitle":"Alle snakker om skyen, men hvor viktig er det egentlig å kunne det? Hva er greia med sertifiseringer? Og bør man prioritere å ta sertifiseringer i AWS eller andre skyteknologier, sånn oppi alt annet man må lære seg i ny jobb?","description":"Bør man prioritere å ta sertifiseringer i AWS eller andre skyteknologier, sånn oppi alt annet man må lære seg i ny jobb? Les hva vi mener >>","publishedAt":"2020-03-13T00:00:00.000+01:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"AWS-sertifiseringer åpner nye dører\nNiklas Johansen, Erlend Ekern og Jørgen Halvorsen startet alle tre i Capra høsten 2019, og var raskt i gang med arbeidet med å lære mer om AWS."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"– Jeg anbefaler å være mer nysgjerrig utover det man lærer på skolen. Med AWS-sertifiseringen har jeg fått muligheten til å jobbe med spennende teknologi som brukes av store selskaper for å sette opp infrastruktur, forteller Jørgen, som sitter hos Gjensidige i dag."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"– Det krevde litt jobb, da det var mye nytt å sette seg inn i og mange forkortelser. Men når man kommer seg inn i sjargongen, og begynner å forstå sammenhengene, blir det bare mer og mer spennende og er en fin erfaring uansett om man jobber med sky eller ei."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Niklas er enig. Han valgte å ta AWS Certified Solutions Architect, som er en AWS-sertifisering for å få en kickstart i sky-verden. I løpet av studietiden hadde han enkelte fag om nettverk og skytjenester, men disse ga et veldig begrenset innblikk i stoffet. Dermed tenkte han sertifiseringen ville være en ypperlig mulighet til å dykke dypere i materien og gi et teoretisk og praktisk grunnlag å bygge videre på ute i prosjekt."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Kundene tjener på utviklernes AWS-sertifiseringer"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"– Det kom til svært god nytte allerede fra dag én, forklarer Niklas. I dag jobber jeg med å utvikle Vy sin nye tjenesteplattform, som vi bygger helt fra bunn i AWS. Applikasjonene som i dag kjører på on-prem-løsninger skrives på nytt til å utnytte de mulighetene skyplattformen tilbyr. Da snakker vi server-less, kø- og notifikasjonssystemer, API-tjenester, dokumentdatabaser, infrastructure as code og mye mer."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Som Niklas, så sitter Erlend hos Vy. Han jobber med å forenkle hverdagen for de andre utviklingsteamene, ved å bruke automatisering og DevOps prinsipper i skyen. Han jobber hovedsakelig med AWS i dag, etter å ha benyttet tiden godt før oppdrag på Capra HQ."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"For akkurat dette prosjektet var det ekstremt viktig å ha sertifisering. Vy er et statlig selskap, og for å kunne vise til hvorfor de velger en gitt kandidat over en annen er det absolutt nødvendig å ha noe håndfast på CVen, som for eksempel en sertifisering. De første månedene etter oppstart i Capra sto jeg fritt til å velge selv hva jeg ønsket å arbeide med før jeg skulle ut i kundeoppdrag. Jeg valgte å ta en AWS-sertifisering, og selv om det er en del stoff å gå gjennom, var det ikke spesielt krevende. Jeg så gjennom undervisningsvideoer, leste meg opp, eksperimenterte med AWS, og gikk gjennom prøveeksamener, forteller Erlend, og tipser:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Jeg jobbet mye med oppsett av et AWS-kurs vi skulle ha for NTNU studenter, og dette gjorde at jeg fikk mye hands-on erfaring med AWS, fikk anvendt teori på et større prosjekt og ble tvunget til å teste om jeg faktisk hadde skjønt ting i praksis. Mitt inntrykk er at flere og flere bedrifter kommer til å benytte seg av skyløsninger, eller i alle fall prinsippene som ligger bak dem, som å slutte å drifte og vedlikeholde egne servere. Det blir mer og mer relevant å operere på et høyere abstraksjonsnivå."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Fortsett å tilegne deg kunnskap"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Alle tre fremhever derfor viktigheten av å være mer nysgjerrig utover det man lærer på universitetet, teste ny teknologi på fritiden og sette opp egne prosjekter ved bruk av AWS eller annen skyteknologi. Niklas er helt klar i sin oppfordring til alle som vurderer hvorvidt de skal ta seg tid til å lære seg AWS:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Kjør på! Ikke bare er det interessant og nyttig kompetanse å ha, men dersom man tar sertifiseringer ser det også vanvittig bra ut på CVen! AWS Certified Solutions Architect, liksom – smak litt på den!, avslutter han med et glis."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"PS: Er du interessert i å eksperimentere med skyen, men vet ikke helt hvor du skal starte? Vi har tidligere skrevet en hands-on artikkel om hvordan man kan få en webapplikasjon og \"CI/CD-pipeline\" opp i skyen på AWS, så trykk deg inn her hvis du har klør i fingra etter å komme i gang med noe kult!"}]},{"_type":"block","markDefs":[{"_key":"adacc8868bec","_type":"link","href":"/webapplikasjon-pluss-ci-cd-er-lik-hjerte"}],"style":"normal","children":[{"_type":"span","marks":["adacc8868bec"],"text":"Sjekk artikkelen hvor Erlend har vært medforfatter"}]}],"tags":["Capra folk","Sky"]}
{"_type":"post","_createdAt":"2023-10-12T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/gastby-til-remix/hero.webp"},"title":"Fra Gatsby til Remix - En reise fra ett rammeverk til et annet","author":"Håkon Meyer Tørnquist og Camilla Marie Dalan","subtitle":"Blir med på team CapraWeb i sin reise da de skulle migrere capraconsulting.no fra Gatsby til Remix.","description":"Blir med på team CapraWeb i sin reise da de skulle migrere capraconsulting.no fra Gatsby til Remix.","publishedAt":"2023-10-12T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I den stadig skiftende verdenen av webutvikling er det avgjørende å holde seg oppdatert på de nyeste trendene. Bedrifter trenger nettsider som er like banebrytende som en katt med ti liv – alltid til stede, nysgjerrig og klar til å takle enhver utfordring. Da dukker ofte “migrere til en ny tech stack” opp som svaret på spørsmålet ingen har stilt."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I dag begir vi oss ut på et storslagent eventyr mens vi utforsker reisen til et modig selskap, Capra Consulting, som høsten 2022 våget å flytte fra de kjente omgivelsene i Gatsbys varme favn, til de ukjente Remix-farvann. Et solid team av utviklere, Team CapraWeb, gikk sammen for å takle denne monumentale oppgaven. Så fest setebeltene, webentusiaster, for en historie fylt med brå vendinger, krappe svinger og tvilsomme designvalg!"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/gastby-til-remix/geit.webp","alt":"Geit som kjører en gammel bil"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n  "},{"_type":"span","marks":[],"text":"Vil du bli med på en tur?"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Hvorfor migrere?"}]},{"_type":"block","markDefs":[{"_key":"cd47a48d4005","_type":"link","href":"https://www.gatsbyjs.com/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Capra hadde allerede en velfungerende nettside bygget på "},{"_type":"span","marks":["cd47a48d4005"],"text":"Gatsby"},{"_type":"span","marks":[],"text":", et rammeverk som på dette tidspunktet var et rent SSG-rammeverk. SSG – Static Site Generation – passer i utgangspunktet veldig fint til en statisk nettside, som vår strengt tatt er, men ingen av medlemmene i nåværende Team CapraWeb hadde vært med på å lage denne nettsiden fra bunnen av. Det krevde derfor en betydelig innsats av hver enkelt å sette seg inn i kodebasen. Spesielt med tanke på at dette skulle gjøres utenom kundearbeid. Siden applikasjonen ikke hadde blitt vedlikeholdt på en god stund, lå vi langt bak på avhengigheter, deriblant to major-versjoner bak nyeste Gatsby-versjon. Bygg- og deployment-pipelinen var treg, som gav oss en lang feedback loop, og koden var generelt så flokete og tett sammenkoblet at hver endring føltes som å spille Jenga: Et lite feiltrinn kunne velte hele tårnet."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Dessuten er det jo noe litt morsommere og mer motiverende med å bygge ting på nytt, da. 😎"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"En skinnende ny stack ✨"}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Remix, Tailwind og Cloudflare"}]},{"_type":"block","markDefs":[{"_key":"406cf4184e4e","_type":"link","href":"https://remix.run/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Et av teammedlemmene, Håkon, hadde bygget opp en stor forkjærlighet for "},{"_type":"span","marks":["406cf4184e4e"],"text":"Remix"},{"_type":"span","marks":[],"text":", et relativt nytt SSR-rammeverk for React. Vi andre, som lurte på hva greia var, spurte ChatGPT, og fikk følgende svar:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"“Remix er et frontend-rammeverk som får nettsider til å rocke hardere enn et luftgitar-solo. Med Remix kan du bygge nettsider så trendy at selv hipsterne vil miste skjegget i ren misunnelse. Remix er som en superhelt for frontend - det løfter nettsider til nye høyder og gjør konkurrentene grønne av misunnelse.”"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Og med det var vi egentlig ganske fornøyde."}]},{"_type":"block","markDefs":[{"_key":"b14878c2c932","_type":"link","href":"https://developer.mozilla.org/en-US/"},{"_key":"efa1236166fc","_type":"link","href":"https://remix.run/docs/en/main"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Fra spøk til revolver: Remix er et rammeverk som lener seg tungt på eksisterende web-standarder. Det gjør at det føles bedre dokumentert enn rammeverk av tilsvarende alder, da man ofte oppholder seg mer på "},{"_type":"span","marks":["b14878c2c932"],"text":"MDN"},{"_type":"span","marks":[],"text":" enn i "},{"_type":"span","marks":["efa1236166fc"],"text":"Remix-docsene"},{"_type":"span","marks":[],"text":". I tillegg gav det oss fordelen av å lære oss rammeverk-agnostiske APIer og patterns vi kan gjenbruke om (når?) det dukker opp noe fetere, og vi har lyst til å skrive om nettsiden på nytt. Som nevnt tidligere er kanskje SSG et vel så naturlig valg som SSR for en så statisk nettside som vår, men etter en runde i teamet ble vi enige om at det ikke spilte så stor rolle for vår bruk, og at trade-offsene var verdt det."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"De andre bitene av tech stacken vår valgte vi på overordnet samme grunnlag som Remix: Det skulle være gøy å holde på med, gi oss en rask feedback loop, og oppføre seg bra hos brukerne våre."}]},{"_type":"block","markDefs":[{"_key":"d5c656924dfc","_type":"link","href":"https://tailwindcss.com/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det har vært en sterk og lang diskusjon i frontend-miljøet i Capra om hvilken CSS-strategi som er best. De heteste diskusjonene har nok oppstått rundt "},{"_type":"span","marks":["d5c656924dfc"],"text":"TailwindCSS"},{"_type":"span","marks":[],"text":", der noen har ment at det er den beste oppfinnelsen siden kruttet, mens andre har ment at T-en står for “teknisk gjeld”. I vårt lille hjørne var alle medlemmene av Team CapraWeb veldig enige om at TailwindCSS var ganske kult og at prosjektet ikke var så stort eller komplekst at det ville ha noen stor betydning for vedlikehold om det viste seg å ikke skalere så bra som håpet."}]},{"_type":"block","markDefs":[{"_key":"c9380d34fc7c","_type":"link","href":"https://pages.cloudflare.com/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"For deployment gikk vi for "},{"_type":"span","marks":["c9380d34fc7c"],"text":"Cloudflare Pages"},{"_type":"span","marks":[],"text":". Den gamle nettsiden kjørte på Netlify, som vi strengt tatt var ganske fornøyd med, men som har en prismodell som ikke passet oss så godt. Noen raske serviettutregninger viste at å gå over til Cloudflare sannsynligvis ville spare oss for en del tusenlapper. Med det kunne teamet også gå ut og sosialisere med god samvittighet. 💁‍♀️Dessuten var Cloudflare nytt og hipt, og flere på teamet hadde lyst til å prøve det ut."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Ellers beholdt vi Sanity som CMS for blogg og bilder, fordi Sanity er fett og funker bra."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Prosessen 🔁"}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Hvordan gikk vi frem? Hvor ofte/mye jobbet vi? Hvordan tilrettela Capra?"}]},{"_type":"block","markDefs":[{"_key":"6ceb521b3d55","_type":"link","href":"https://gitmoji.dev/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi kicket off arbeidet på sensommeren 2022 etter at alle hadde fått slikket ferdig sol og det var på høy tid å tømme D-vitaminlagrene i et mørkt rom foran PC-skjermene sine. Neida. Joda. Et kanban-brett i Notion var et must, og vi var enige om mottoet: “Try hard, fail harder”. Med andre ord, push rett til main. For gøy tok vi også i bruk "},{"_type":"span","marks":["6ceb521b3d55"],"text":"gitmoji"},{"_type":"span","marks":[],"text":", som, om ikke annet, har gitt oss en deilig fargerik commit-historikk."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi tok oss god tid til å lære oss de forskjellige teknologiene, og jobbet ettersom enhver hadde tid og lyst, i tillegg til en ukentlig felles kodekveld. Overordnede oppgaver lagde vi i plenum, mens mer spesifisering av detaljer og å sørge for at ingenting falt mellom to stoler var opp til den enkelte. Ikke en veldig streng prosess, der, altså."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Tre måneder med Remix, Cloudflare, gode venner og litt for store mengder energidrikk senere, nærmet vi oss omsider mål."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"PROD!"}]},{"_type":"block","markDefs":[{"_key":"55f62442f1cb","_type":"link","href":"https://github.com/capraconsulting/nettsiden"},{"_key":"b3295f5fa710","_type":"link","href":"https://capraconsulting.no/?_ga=2.79165012.1970766327.1707512947-1479161094.1707512947"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Etter en god del jobb, en god del feiling og masse læring, var nettsiden endelig klar for produksjon i november 2022. Den åpne kildekoden lever "},{"_type":"span","marks":["55f62442f1cb"],"text":"her"},{"_type":"span","marks":[],"text":", og siden kan du se på "},{"_type":"span","marks":["b3295f5fa710"],"text":"capraconsulting.no"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/gastby-til-remix/live.webp","alt":"Screenshot of Notion task of \"Going live\""},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n  "},{"_type":"span","marks":[],"text":"Going live!"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Hva har vi lært?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi har lært at Remix er kult, TailwindCSS er gøy, Cloudflare er billig og trunk-based development er fanden så effektivt. Ellers er det alltid bra å ha et godt team å sparre med, og en arbeidsgiver som lar sine ansatte eksperimentere og følge en generell “kloke valg”-tankegang."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/gastby-til-remix/team.webp","alt":"Teamet skåler for ferdig utført jobb."},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n    Fra venstre: Håkon Tørnquist, Ingrid Domben, Julian Jark, Malin Aandahl og (bak kameraet) Camilla Marie Dalan.\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"CapraCon.no"}]},{"_type":"block","markDefs":[{"_key":"553863abbba4","_type":"link","href":"https://capracon.no/"},{"_key":"5ef99b1bb24c","_type":"link","href":"https://capraconsulting.no/?_ga=2.117780937.1970766327.1707512947-1479161094.1707512947"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"I mars 2023 ble den årlige internkonferansen til Capra, CapraCon, holdt. I og med at "},{"_type":"span","marks":["553863abbba4"],"text":"capracon.no"},{"_type":"span","marks":[],"text":" også var Team CapraWeb sitt ansvar, og “det gikk jo så greit å migrere "},{"_type":"span","marks":["5ef99b1bb24c"],"text":"capraconsulting.no"},{"_type":"span","marks":[],"text":" fra Gatsby til Remix, så hvorfor ikke gjøre det igjen”-tankegang, hadde teamet lyst til å skrive om denne siden og."}]},{"_type":"block","markDefs":[{"_key":"55aa1357b48d","_type":"link","href":"https://www.notion.so/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Litt nytt må man jo finne på, og den ene biten av puslespillet vi ikke hadde byttet ut i runde 1 var CMSet. Sanity er flott, men våre redaktører oppholder seg stort sett i "},{"_type":"span","marks":["55aa1357b48d"],"text":"Notion"},{"_type":"span","marks":[],"text":", en dokument- og organiseringsapplikasjon. Der kan man jo putte inn innhold, og de har jo også et API, har de ikke? 🤔"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hold utkikk etter neste artikkel for fortsettelsen…"}]}]}
{"_type":"post","_createdAt":"2023-07-06T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/gjensidige-fornyer-partnerskapet-med-capra.webp"},"title":"Ledende forsikringsselskap fornyer partnerskapet med spesialist på tech!","author":"","subtitle":"Et av Nordens ledende skadeforsikringsselskap, Gjensidige, satser stort på å gi kunder gode og trygge opplevelser. For å sikre dette digitalt har de etter tre års samarbeid valgt å videreføre partnerskapet med fagspesialisten Capra på teknologi.","description":"Et av Nordens ledende skadeforsikringsselskap, Gjensidige, satser stort på å gi kunder gode og trygge opplevelser. For å sikre dette digitalt har de etter tre års samarbeid valgt å videreføre partnerskapet med fagspesialisten Capra på teknologi.","publishedAt":"2023-07-06T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"“Capra er en partner til å stole på, både når det gjelder kvalitet og menneskene som jobber der. Dette har de vist med solide leveranser og folk over tid. Capra har svært dyktige fagfolk som passer godt inn i Gjensidige, og vi er veldig glad for at partnerskapet fortsetter og vi gleder oss til å bygge dette videre sammen.”"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"-Silje Bredesen, leder Digitalisering i Gjensidige"}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Partnerskap gir mer verdi"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Et partnerskap gir stor grad av forutsigbarhet for begge parter og gir mulighet til å skape verdi over tid. Capra har gjennom partnerskapet med Gjensidige allerede bidratt til konkrete og viktige tekniske leveranser for forsikringsaktøren. De har blant annet vært tett involvert i tekniske valg som har gitt raskere sider, tid spart for utviklere og systemer som er enklere å vedlikeholde. Ikke minst har partneren fasilitert fram beslutninger, samt flytt og modernisering av løsninger fra on-prem til sky. Et partnerskap skal ifølge Capra skape langt mer verdi enn å levere gode konsulenttjenester og kapasitet."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"“For oss er et partnerskap langt mer enn å låne ut kloke hoder. Det er kompetanseoverføring, kompetansedeling, å åpne fagmiljøet vårt og å løse problemer kunden ikke vet at de har. Vi skal tørre å utfordre, hvor vi bør gjøre hva, og sørge for at Gjensidige lykkes på lang sikt. Dette jobber vi med hver dag, både hos Gjensidige og hos Capra.“"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"- Oliver Hove-Breen, Salgs- og kundeansvarlig i Capra Consulting"}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Å bygge framtidens og markedsledende systemer krever mer"}]},{"_type":"block","markDefs":[{"_key":"e69bacf67d92","_type":"link","href":"https://capracon.no/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Å bygge utviklingsorganisasjoner hvor teknologer trives og lærer er viktig for å bygge gode systemer og ta en sterk posisjon i markedet. Hvert år blir Gjensidige invitert på "},{"_type":"span","marks":["e69bacf67d92"],"text":"CapraCon"},{"_type":"span","marks":[],"text":", Capra sin interne fagkonferanse, for å sikre kompetanseoverføring mellom selskapene. I hverdagen arrangeres lesesirkler og fagsamlinger slik at ansatte hos Gjensidige kan få glede av å sparre med hele Capra sitt fagmiljø og ikke kun konsulentene som sitter ute hos dem."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"\"Gjensidige er et modent og fremoverlent selskap hvor utviklerne, teamlederne og prosjektlederne stortrives, blir hørt og får være med å utforme løsningene. Vi er et selskap som er glad i åpenhet og delingskultur, og det tar vi med oss ut til partnerne. Partnerskapet gagner begge selskapene på en god måte.\""},{"_type":"span","marks":[],"text":" - "},{"_type":"span","marks":["strong"],"text":"Oliver Hove-Breen, Salgs- og kundeansvarlig i Capra Consulting"}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Om avtalen"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Capra er en strategisk og preferert partner på alle oppdrag i Norge for Gjensidige. I tillegg til å gjelde Gjensidige Forsikring, som Capra har vært partner med de siste årene, er dette en utvidet avtale som også gjelder Gjensidige Mobility Group og Gjensidige Pensjonsforsikring. Avtalen varer over 3 år med mulighet til å forlenge den med ett år av gangen, to ganger."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"“Gjensidige jobber hver eneste dag for å lage de beste digitale løsningene for kundene. Vi har erfart at Capra er en svært kompetent partner å ha i ryggen når behovene endres raskt. Vi stiller høye krav til leverandører, og en forlengelse av partnerskapsavtalen er det beste signalet på hva vi føler om samarbeidet. Vi stoler på at det blir noen spennende år fremover med fokus på videre digitalisering.”"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"- Milos Kostadinovic, innkjøpssjef Gjensidige"}]}]}
{"_type":"post","_createdAt":"2020-09-08T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/gjensidige-satser-videre-pa-digitale-kundeopplevelser-med-capra-som-en-av-selskapets-strategiske.webp"},"title":"Gjensidige satser videre på digitale kundeopplevelser med Capra som en av selskapets strategiske samarbeidspartnere","author":"Kjetil Thorbjørnsen","subtitle":"Gjensidige Forsikring ASA har valgt Capra som en av selskapets strategiske teknologipartnere. Over 5 år skal Capra fortsette å åpne sitt tunge fagmiljø for Gjensidige, og sørge for innovative kundeløsninger i toppklasse.","description":"Gjensidige Forsikring ASA har valgt Capra som en av selskapets strategiske teknologipartnere. Over 5 år skal Capra fortsette å åpne sitt tunge fagmiljø for Gjensidige, og sørge for innovative kundeløsninger i toppklasse.","publishedAt":"2020-09-08T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[{"_key":"8d30af7727ec","_type":"link","href":"https://www.capraconsulting.no/?_ga=2.88397531.1970766327.1707512947-1479161094.1707512947"}],"style":"normal","children":[{"_type":"span","marks":["8d30af7727ec"],"text":"Capra"},{"_type":"span","marks":[],"text":" ble valgt som en av to strategiske partnere etter en grundig evaluering, basert på selskapets ekspertise og innsikt innen moderne systemutvikling, teknologitrender og cloud. Samarbeidet tilrettelegger for at Gjensidige skal kunne posisjonere seg og tilby kundene de beste og mest innovative løsningene i bransjen."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"“Capra har meget dyktige fagfolk som spiller godt med vår kultur og våre team og verdier, og kompetansen Capra stiller med var utslagsgivende,” sier Christian Moe, teknologidirektør i Gjensidige."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"“Vår strategi er å jobbe tett med våre partnere for å utvikle digitale tjenester som fører til fornøyde kunder og lønnsom vekst, og Capra spiller oss gode.Vi ønsker partnere som kjenner oss godt og kan rådgi på taktisk og strategisk nivå. Capra har over tid vist god evne til å tilpasse seg og være en del av vår utvikling, og vi ønsker å bygge videre på dette samarbeidet,” fortsetter han."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Om avtalen"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I tillegg til å levere utviklingstjenester, vil Capra åpne opp sitt tunge fagmiljø for Gjensidige. Capra skal bidra til økt kompetansedeling og bidra som strategisk rådgiver innenfor teknologi."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"“I Capra har vi et sterkt fagmiljø og en stor delingskultur. Vi ønsker å tilby mer enn kun konsulentbistand, og vil fokusere på å bruke fagmiljøet og delingskulturen i Capra til å bygge kompetanse hos de ansatte i Gjensidige\" sier viseadministrerende direktør Kjetil Thorbjørnsen i Capra, og fortsetter:\n“Capra er utrolig stolte og glade over å ha blitt valgt som en av Gjensidiges strategiske teknologipartnere. Vi gleder oss til å fortsette det gode samarbeidet og ta ansvar for at Gjensidige skal være i front med innovative løsninger til sine kunder og ansatte.”"}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Kontakter"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Kjetil Thorbjørnsen"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Viseadministrerende direktør"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"+47 90553845"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"kth@capraconsulting.no"}]}],"tags":["Capra folk"]}
{"_type":"post","_createdAt":"2021-07-07T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/hoyniva-maskinlaering-i-aws/hero.webp"},"title":"Høynivå maskinlæring i AWS","author":"Harald Vinje","subtitle":"Amazon Web Services er så mye mer enn bare fillagring, server- og databasehosting. Vi tar for oss hva det kan tilby innen maskinlæring, samt gi en smakebit på noen av de relevante tjenestene.","description":"Vi tar for oss hva AWS kan tilby innen maskinlæring, samt gi en smakebit på noen av de relevante tjenestene. Les om hva som ligger bak >>","publishedAt":"2021-07-07T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det er ingen hemmelighet at vi i Capra er glade i Amazon Web Service (AWS), og det brede spekteret av tjenester AWS har å tilby for å gjøre hverdagen til oss utviklere lettere, billigere, og mer fleksibel. Når IT-konsulenter flest hører AWS, tenker nok mange først og fremst på tjenester som fillagring, server- og databasehosting, serverless lambdafunksjoner, og kanskje containter services. Men visste du at AWS også har et rikt sett med tjenester for oss maskinlæringsinteresserte? Noen av disse tjenestene skal vi se mer på i dag!"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"En rekke maskinlæringstjenester i AWS"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Er du tallknuseren som elsker å dypdykke i de forskjellige lagene og aktiveringsfunskjonene i nevrale nettverk? Ikke det? Kanskje du er hardwarespesialisten som vil sjekke ut hvor raskt du kan trene en modell på NVIDIAs kraftigste GPUer? Eller er du en enkel Webutvikler som vil teste ut og integrere ferdige maskinlæringsløsninger i Webappen din? Du finner uansett det du vil ha i ML-stacken til AWS!"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/hoyniva-maskinlaering-i-aws/aws-ml.webp","alt":"AWS ML Stack"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Maskinlæringstjenestene i AWS kan deles inn i tre nivåer, som visualisert på bildet over. På det laveste nivået finner du hardwaren du kan spinne opp og leke deg med, i tillegg til kjente og kjære maskinlæringsrammeverk som TensorFlow, mxnet og PyTorch, ofte preinstallert på maskinene. På nivå to finner du det som kanskje er AWS’ mest kjente maskinlæringstjeneste, SageMaker. Dette er en serverless (hvis du vil ihvertfall) tjeneste hvor du enkelt kan sette opp og dele Notebooks, hente inn, visualisere og aggregere data, teste ut algoritmer og modeller, og deploye modellen når du er fornøyd."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"På det øverste nivået finner vi maskineringstjenester som fungerer “out of the box”. Disse tjenestene er for deg som vil ta i bruk maskinlæringsalgoritmene AWS har jobbet hardt med å finpusse, uten å trenge å vite hvordan de fungerer bak kulissene. Det lar seg ofte gjøre med bare noen enkle API-kall. Å gå gjennom alle disse blir for omfattende for dette blogginnlegget, men vi skal se litt mer på mine favoritter. Vi skal også gå gjennom et lite kodeeksempel."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Amazon Rekogntition"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Rekognition er AWS’ maskinlæringsbaserte bilde- og videoanalysetjeneste. Med features som label detection, text detection, content moderation, facial attribute analysis, celebrity detection og mye mer har du stort sett det du trenger for å analysere og klassifisere bildene eller videoene dine. Analysen er som regel bare et API-kall unna."}]},{"_type":"code","code":"response = client.detect_labels(Image={'S3Object':{'Bucket':bucket,'Name':photo}, MaxLabels=10)\n","language":"text"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det er bare fantasien som setter grenser for bruksområder for Rekognition. Noen eksempler inkluderer:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"verifisere at brukeren laster opp dokumenter som inneholder tekst"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"sortere bilder på innhold"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"moderere opplastning av bilder"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"plassere et overvåkningskamera i nærheten for å spotte kjendiser du er fan av, og automatisk send e-post når du treffer (kanskje ikke heelt gdpr...)"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"AWS Comprehend"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Er du mer interessert i å analysere tekster, er AWS Comprehend-tjenesten for deg. I Comprehend sender du inn tekst og får tilbake informasjon om teksten på et mye mer kompakt format. Comprehend kan identifisere entiteter (som f. eks navn, adresser, firmaer), nøkkelord, tema, tekstens sentiment (positivt eller negativt ladet tekst) og mer. Det kreves lite av forståelse av hvordan Comprehend funker bak kulissene for å ta det i bruk. Også her er det kun et API-kall med tilhørende tekst som skal til for å få tilbake nyttig informasjon."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/hoyniva-maskinlaering-i-aws/apikall.webp","alt":"API kall eksempel"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her er det også rom for mye automatisering. Et eksempel på et use case: La oss si du har et produkt hvor kundene gir tilbakemeldinger via et skjema i nettbutikken din. Du ønsker å klassifisere tilbakemeldinger som enten positive eller negative, og lagre tilbakemeldingene i forskjellige mapper deretter. Et enkelt løsningsforslag er:"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/hoyniva-maskinlaering-i-aws/oversikt.webp","alt":"Løsningsforslag diagram"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Comprehend kan som nevnt utføre sentimentanalyse, hvor du får klassifisert tekst som positivt eller negativt ladet, i tillegg til tilliten (confidence) knyttet til klassifiseringen. Disse kan plasseres i forskjellige mapper i en S3-bøtte basert på klassifiseringen, eller sendes andre steder for videre prosessering eller lagring. For å orkestrere dette kan du bruke AWS Lambda."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Andre maskinlæringstjenester i AWS"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Rekognition og Comprehend er, etter min mening, de to mest nyttige ML-tjenestene som kan regnes som høynivå, men det er selvfølgelig mange andre slike tjenester AWS tilbyr, som vi skal nå gå kjapt gjennom."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Amazon Lex"},{"_type":"span","marks":[],"text":" er AWS’ chatbot service. Du lager og deployer din egen chatbot etter skreddersydde behov. Du kan enkelt konfigurere oppførselen til chatboten din i AWS-konsollen ved bruk av såkalte “intents”, hvor du må spesifisere hvilke oppgaver du vil at chatboten skal hjelpe brukeren med. Lex kan bruke avansert Natural Language Processing (NLP) for å tolke “Intents”. Du kan også programmere direkte hvilke ord eller fraser fra brukeren chatboten skal reagere på."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"For tjenester knyttet til tale (speech) har vi "},{"_type":"span","marks":["strong"],"text":"Amazon Transcribe"},{"_type":"span","marks":[],"text":" (speech to text) og "},{"_type":"span","marks":["strong"],"text":"Amazon Polly"},{"_type":"span","marks":[],"text":" (text to speech). Kombinerer du disse tre tjenestene kan du lage din egen Alexa-lignende enhet på følgende måte: "},{"_type":"span","marks":["em"],"text":"Transcribe -> Lex -> Polly"},{"_type":"span","marks":[],"text":". Transcribe konverterer tale til tekst, Lex tolker teksten og returnerer tekstsvar, og Polly taler teksten fra Lex tilbake til deg!"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Den siste tjenesten jeg vil nevne før vi går til kodeeksempelet er "},{"_type":"span","marks":["em"],"text":"Amazon Forecast"},{"_type":"span","marks":[],"text":". Forecast predikerer data for fremtiden basert på historiske data som brukeren mater inn i modellen. Prediksjonene kan visualiseres i flotte grafer, eksporteres til csv-filer eller hentes via APIer. En sentral forskjell mellom Forecast og de andre nevnte tjenestene, er at for å få nyttige prediksjoner fra forecast burde du ha god domenekunnskap om tidsseriene du ønsker å predikere. Det hjelper også å ha en god forståelse om forskjellige modellene du kan bruke for å få best mulig prediksjoner."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Rekognition til bildemoderering i Web appen din"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Nå skal vi se på hvordan du kan integrere AWS Rekognition i en web app i praksis. Hensikten med Web Appen er å kunne laste opp bilder, gitt at bildene blir godkjent av en modereringsfunksjon vi skal implementere. Appen er i utgangspunktet agnostisk til hvor bildet lastes opp, men i vårt tilfelle lastes det opp til S3. Under ser du kildekoden til appen, skrevet i ReactJS."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/hoyniva-maskinlaering-i-aws/react.webp","alt":"React kode"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det er i funksjonen checkIfAcceptableImage(imageFile) at Rekognition kommer inn i bildet. Den funksjonen skal vi ta en nærmere titt på nå."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/hoyniva-maskinlaering-i-aws/js-kode.webp","alt":"JavaScript kode"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Ettersom Rekognitions SDK sender API-kall over nettet returnerer funksjonen et promise-objekt. Kallet til detectModerationLabels er stedet all magien skjer! Vi slenger inn parameterne, som inneholder bildet og en callback-funksjon. Det er i callback-funksjonen vi definerer hva vi syns er passende bilder basert på moderationLabels i responsen fra Rekognition. For å gjøre det enkelt denne gangen, så sier vi at bildet kun er akseptabelt om det ikke inneholder noen moderationLabels. Nå har vi alt vi trenger for en fungerende Web App, så la oss se på resultatet:"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/hoyniva-maskinlaering-i-aws/nettside.webp","alt":"Demo av alert"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Voilà! Som vi ser så får vi en respons med labels og tilhørende confidence-score. I dette eksempelet sjekket vi om listen med labels er lenger enn 0 (altså at det er noen moderation labels på bildet), men her kan du lage egne regler med tilpassede labels etter appens behov. Si du f. eks kun vil hindre opplastning om confidence-scoren er over 90%, og la resten av modereringen gjøres av mennesker, kan du enkelt implementere dette."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Konklusjon"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi har så vidt skrapt overflaten av maskinlæring i AWS, men jeg håper allikevel du har fått en liten smakebit og blitt nysgjerrig på hva tjenestene AWS har å tilby innen maskinlæring. Maskinlæring og sky er to teknologier i rask utvikling, så det er alfa omega å være oppdatert på hvordan det kan benyttes i praksis."}]}],"tags":["Maskinlæring","AWS"]}
{"_type":"post","_createdAt":"2022-04-28T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/hva-er-en-it-konsulent.webp"},"title":"Hva er en IT-konsulent?","author":"Melanie B. Jørgensen","subtitle":"Behovet for gode IT-systemer gir et økende behov for dyktige mennesker som kan bygge dem. Når man enten trenger ekspertise over kort tid eller ikke finner de rette personene selv, leier selskaper ofte inn konsulenter. Hva gjør en ekstra flink IT-konsulent for sin kunde?","description":"Behovet for gode IT-systemer gir et økende behov for dyktige mennesker som kan bygge dem. Når man enten trenger ekspertise over kort tid eller ikke finner de rette personene selv, leier selskaper ofte inn konsulenter. Hva gjør en ekstra flink IT-konsulent for sin kunde?","publishedAt":"2022-04-28T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"En IT-konsulent har som oftest vært innom flere forskjellige domener, teknologier, team og utfordringer. Ikke minst har de et nettverk og fagmiljø som gjør at de får impulser fra flere kollegaer. Dette tror vi er en av de klareste tingene som skiller seg ut ved å være en IT-konsulent: læringskurvene og kunnskapen den besitter. Det er ikke uten grunn at vi i Capra satser stort på fagmiljøene våre."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Hva gjør en IT-konsulent?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"De fleste bedrifter er avhengig av IKT (informasjons- og kommunikasjonsteknologi), for å skape fantastiske opplevelser for sine kunder, eller for å effektivisere og forbedre produksjon og arbeidshverdagen til ansatte. For å bygge gode og robuste systemer kan det være lurt å leie inn en IT-konsulent både for å hjelpe til å bygge systemet hands on, men også for å la dine faste ansatte ta nytte av kunnskapen IT-konsulenten tar med seg inn i teamet. Vi liker å si at vårt mål er å gjøre oss overflødig, og det gjør vi nettopp ved å gjøre dere bedre."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"IT-konsulenter kan bli leid inn av mange ulike grunner. En åpenbar grunn er at man ønsker at utviklingen av systemet skal gå raskere eller at man rett og slett mangler kompetanse på ett område. Her er det snakk prosjekter som omfatter utvikling av nye løsninger fra bunn, til drifting av eksisterende løsninger - såkalt forvaltning. Det er også eksempler hvor man leier inn en konsulent på en lav prosent, kun for å rådføre seg på tekniske valg og eller for å få kompetanse på et område. Det er altså ikke nødvendigvis slik at man alltid trenger å leie inn en konsulent 100%. Det avhenger helt av behovet."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Som konsulent er det viktig å kunne gjenkjenne hva kundens behov egentlig er og levere på det. På mange måter er du gjest i en annens hus, det er kunden som bestemmer, men vi mener at de flinkeste konsulentene tør å rådgi og bruker ekstra tid og fagmiljløene sine for å sette seg inn i utfordringene kundene har. Eksempler på prosjekter en IT-konsulent kan bli leid inn til er alt fra migrering til skyen, utvikling av konkurransedyktige lærings- og salgsplattformer, skalere store mengder data for å få bedre innsikt i produksjon eller bygge sikre påloggingsystemer og betalingsmønstre til virksomheter."}]},{"_type":"block","markDefs":[{"_key":"906d4e377d91","_type":"link","href":"https://www.capraconsulting.no/dette-har-vi-gjort"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"I Capra skaper vi samfunnsnytte for over 1 000 000 brukere hver eneste dag. Les hva vi har gjort for kundene våre her: "},{"_type":"span","marks":["906d4e377d91"],"text":"https://www.capraconsulting.no/dette-har-vi-gjort"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Hva er et konsulentselskap?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Et konsulentselskap leier ut personer med faglig ekspertise til bedrifter som trenger hjelp på et området i en kortere periode. Konsulentselskaper tilbyr konsulenttjenester innenfor de fleste yrkesgrupper. Det finnes en rekke fagspesifikke konsulentyrker, deriblant IT-konsulent, økonomikonsulent og markedsføringskonsulent for å nevne noen. Som del av et konsulentselskap vil du få et felleskap og et apparat som finner de rette prosjektene for deg og som tar vare på deg. Som vi skrev så er du på mange måter gjest i en annens hus som konsulent, men konsulentselskapet du jobber i er det som for deg blir hjemmet."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Oppsummering:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Kort oppsummert er en IT-konsulent en person som har faglig ekspertise innen IT og tilbyr sine tjenester til bedrifter. En konsulent fungerer som en rådgiver og problemfikser, og leies ut i korte eller lengre perioder, og får derfor en variasjon av ulike prosjekter, arbeidsoppgaver og kulturer. Og kanskje viktigst av alt - bratte læringskurver!"}]},{"_type":"block","markDefs":[{"_key":"94d1867ea3bc","_type":"link","href":"https://www.capraconsulting.no/om-oss"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Trenger du IT hjelp til din bedrift?\nI Capra jobber vi med både hjertet og hjernen, og hjelper bedrifter å bli bedre ved å gjøre ting smartere og mer effektivt. Trenger du flere gode hoder på teamet ditt? Vi gir deg "},{"_type":"span","marks":["94d1867ea3bc"],"text":"IT-konsulenter med spisskompetanse"},{"_type":"span","marks":[],"text":"!"}]}],"tags":["Capra folk"]}
{"_type":"post","_createdAt":"2020-03-18T00:00:00.000+01:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/hva-er-viktigere-enn-lonn-for-it-konsulenter/hero.webp"},"title":"Hva er viktigere enn lønn for IT-konsulenter?","author":"Øystein Løvberg","subtitle":"Store summer på konto, eller frihet, samhold og muligheten til å jobbe med det man elsker? Hva er viktigst for deg på arbeidsplassen?","description":"Hos oss får du frihet, muligheten til å utvikle deg, vokse og få drømmestillingen – samtidig som du får henge med dødskule folk hver eneste dag &gt;&gt;","publishedAt":"2020-03-18T00:00:00.000+01:00","body":[{"_type":"block","markDefs":[{"_key":"6e1e1a904419","_type":"link","href":"https://hmsmagasinet.no/arbeidsgiver-arbeidsmiljo-lonn/arbeidsmiljo-er-viktigere-enn-lonn/234981"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Så lenge man tjener godt nok og ikke må slite for å få endene til å møtes, er det mange som mener at det finnes flere faktorer på arbeidsplassen som trumfer lønna. "},{"_type":"span","marks":["6e1e1a904419"],"text":"Arbeidsmiljøet"},{"_type":"span","marks":[],"text":" er for eksempel det de fleste peker på når de blir bedt om å beskrive det viktigste på jobb."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"For deg er det kanskje praten rundt kaffetrakteren som er avgjørende? Eller er det muligheten for selvutvikling og arbeid på spennende prosjekter? Smak og behag sier nå vi, her er hvert fall tre ting Capra mener er minst like viktig som lønna for IT-konsulenter!"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Frihet og muligheten til å tilrettelegge egen hverdag"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Siden livet består av flest hverdager, mener vi det er viktig å gjøre hver eneste dag så bra som mulig. Hvis du kun lever for helgene er det kanskje på tide å se etter et annet sted å jobbe. Arbeidsplassen trenger ikke arrangere vinkvelder hver mandag eller fyre opp røykmaskinen på fredager, men den bør absolutt se verdien av noe like gøy. Fleksibilitet! Ansatte som får mer autonomi og kan styre sin egen hverdag vil ofte føle seg friere på jobb, og kan jobbe slik de selv jobber best. Da blir hverdagen til en fest!"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Dersom man er IT-konsulent vil arbeidshverdagen gjerne bestå av å jobbe ute hos ulike kunder på lange og korte prosjekter. Da er det viktig å kunne ha en finger med i spillet når det kommer til hvilke kunder man ender opp hos. Noen prosjekter vil for eksempel vekke større interesse for visse IT-konsulenter enn for andre. Brenner du for noe bør arbeidsplassen tilrettelegge for lidenskapen, og la deg arbeide med de prosjektene du selv ønsker. *Kremt, kremt* det gjør selvfølgelig Capra."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/hva-er-viktigere-enn-lonn-for-it-konsulenter/work.webp","alt":"Stemingsbilde av en som jobber"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Selvutvikling så du kan bli den beste versjonen av deg selv"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"De fleste arbeidsplasser vil påstå at de ønsker seg de beste ansatte, med mye kompetanse og kunnskap på sitt felt. Det mange glemmer å ta høyde for er at de aller fleste fagfelt forandrer seg titt og ofte, noe som gjør at ansatte må holde seg oppdatert på trender og endringer. Legger ikke arbeidsplassen til rette for selvutvikling vil det kunne by på frustrasjoner i hverdagen."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det finnes mange måter å tilrettelegge for selvutvikling. Man kan få satt til side timer hvor det er greit å drive med egne prosjekter eller lese seg opp på fagfeltet sitt. Man kan bli satt i team hvor kompetansen er vid, men delekulturen er god, eller man kan ta i bruk en mentorordning hvor de som ønsker å lære mer om noe spesifikt får opplæring av andre flinke folk på arbeidsplassen. Det bør også oppmuntres til at folk får ta sertifiseringer, eller dra på kurs og seminarer. Læreglede bør alltid dyrkes slik at man kontinuerlig jobber med kompetanseheving. Det er like lønnsomt for ansatte som for bedriften. Hos Capra er selvutvikling like selvfølgelig som fredagstaco, small talk om været med fremmede, og vegring over å sitte ved siden av andre på bussen."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Muligheten for å spre sine vinger og fly, uten stress"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Status quo er ikke for alle, og nettopp derfor ønsker mange å arbeide et sted med mulighet for en karrieremessig utvikling. Det er svært vanlig å begynne i en bransje på et felt, for så å ønske seg videre over til noe annet etterhvert som tiden går og kompetansen vokser. De fleste kan kjenne at det blir kjedelig dersom man forblir i samme type stilling med samme oppgaver år etter år."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I IT-bransjen har det blitt mer og mer vanlig å jobbe selvstendig, og mange tør å satse på dette etter å ha fått erfaring fra konsulenthus. Det kan være skummelt å gi uttrykk for at man vil forlate en arbeidsplass til fordel for noe eget, og mange kvier seg for å fortelle sjefer og kolleger om dette. Derfor bør man se etter et sted med lave skuldre og forståelse for individuelle behov og drømmer. For Capra er det hyggelig å ha flinke folk så lenge det varer, og som stolte foreldre elsker vi å sende ungene våre ut i den store verden. Heiagjeng-mentalitet lenge leve."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/hva-er-viktigere-enn-lonn-for-it-konsulenter/work2.webp","alt":"Stemingsbilde av ei som jobber på kafe"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Finn din nye drømmejobb hos Capra"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Jepp, denne artikkelen var et forsøk på diskré rekruttering av flere flinke folk til oss i Capra, men alt nevnt over er noe vi synes er svært viktig i vår bransje. Hos oss får du frihet, muligheten til å utvikle deg, vokse og få drømmestillingen – samtidig som du får henge med dødskule folk hver eneste dag (med mindre du velger å ha litt hjemmekontor i ny og ne)."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi har også fem ukers ferie, selvstyrt avspasering dersom du har jobbet for mye en periode og utrolig mange andre goder, i tillegg til helt ok-pluss lønn selvsagt. Ta kontakt med oss dersom du kunne sett for deg å jobbe for Capra, og mener du har det vi ser etter."}]}],"tags":["Meninger","Rekruttering","Capra folk"]}
{"_type":"post","_createdAt":"2020-04-28T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/hva-ligger-egentlig-bak-en-inmail.webp"},"title":"Hva ligger egentlig bak en InMail?","author":"Morten Gran Kristoffersen og Hannah Synnestvedt Gallagher","subtitle":"1.000.000 NOK in salary? Gode betingelser? Lyst på en bedre lunsj? Fantastisk mulighet for en av våre kunder (som vi på død og liv ikke kan si hvem er)!","description":"Vi er alltid på jakt etter nye utviklertalenter! Vi legger derfor tid i screening av profiler og i å sende relevante InMails. Les om hva som ligger bak >>","publishedAt":"2020-04-28T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"For mange av dere utviklere ser nok dette kjent ut. Som en meget ettertraktet arbeidskraft, i et raskt voksende marked, er det flere rekrutterere som ønsker å fange oppmerksomheten deres blant annet med inmails på LinkedIn. Vi forstår at det blir mye useriøst og støy."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I rekrutteringsbransjen, både i Norge og internasjonalt, er det unektelig mange cowboyer, men vi vil gjerne slå et slag for de av oss som screener nøye og unngår å sende den samme templaten til 100 stykker i slengen!"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Vi i Capra legger tid i screening"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Jeg kan selvfølgelig ikke snakke for alle, jeg kan kun snakke for meg og mine kollegaer, men jeg nekter likevel å tro at vi er de eneste som skyr “cowboy taktikker”. Først og fremst er vi et selskap som har tatt klare standpunkt når det kommer til teknologi. Det gjør at vi søker personer med en interesse og kunnskap innen f.eks. AWS, Java og JavaScript. Når jeg og mine kollegaer besøker din profil, leser vi nøye gjennom all informasjon fra topp til bunn. Vi ønsker selvfølgelig ikke å kaste bort din og vår tid på noe som er helt feil for begge. Men den viktigste grunnen er at hvis vi tror du er riktig for oss og at vi er riktig for deg, så jobber vi med budskapet og skreddersyr en InMail eller en telefonsamtale til deg. Vi går på en feil her og der, uten tvil! Vi er ikke utviklere selv, men jeg vil likevel tørre å påstå at det ikke alltid står på oss."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Får du mange lite relevante InMails?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Kan det være at du ikke har oppdatert skills på 6 år? Eller kanskje du har 20 skills som ikke akkurat reflekterer din kjernekompetanse i dag? Mangel på informasjon kan også være like utfordrende som for mye. Det er også slik at rolletittel ikke brukes likt i bransjen, så mange kan gjøre feil antagelser her. Jeg kan anbefale deg å fylle profilen din ut med hva slags tech du jobber med, litt om hvilke oppgaver du gjør i hverdagen og hva du ønsker å fortsette med videre. Jeg kan "},{"_type":"span","marks":["strong","em"],"text":"garantere"},{"_type":"span","marks":[],"text":" deg at du ikke får "},{"_type":"span","marks":["strong"],"text":"flere"},{"_type":"span","marks":[],"text":" henvendelser, du vil få flere "},{"_type":"span","marks":["strong"],"text":"riktige"},{"_type":"span","marks":[],"text":" henvendelser, og jeg vil anta at arbeidsgiver setter pris på at du brander dem på en fin måte i sosiale medier."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Hvor er “Decline Message” knappen?!"}]},{"_type":"block","markDefs":[{"_key":"744d2ee42fbf","_type":"link","href":"/derfor-tilpasser-vi-var-rekrutteringsprosess-til-kandidaten"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hvorfor skreddersyr vi f.eks Inmails? Vi legger ned denne tiden og energien fordi vi virkelig ønsker å komme i prat med deg og at vi tror at vi har en stilling eller rolle som kan passe deg. "},{"_type":"span","marks":["744d2ee42fbf"],"text":"Vår prosess skreddersys for hver enkelt kandidat"},{"_type":"span","marks":[],"text":" og det er lov å si i den første telefonsamtalen at det vi tilbyr evt ikke er riktig karrierevei for deg. Konsulentbransjen passer ikke for alle, Capra er heller ikke for alle. All relevant informasjon er vanskelig å få fram i en InMail. Noen ganger blir den for kort, andre ganger blir den for lang. Jeg spør derfor om at når dere får en seriøs henvendelse, så er det hyggelig å erkjenne det med et svar. Det trenger ikke være så langt svar, bare vær tydelig."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"For om du får en InMail fra Capra som virkelig er far off, så setter vi pris på en tilbakemelding. Vi tåler å le litt av oss selv når vi feiler. Tro meg, det hender at vi ser tilbake på tidligere sendte meldinger og rister på hodet. Det er disse vi lærer mest av og som gjør at vi forhåpentlig forbedrer oss litt for hver eneste Inmails som sendes."}]}],"tags":["Rekruttering","Meninger"]}
{"_type":"post","_createdAt":"2020-10-29T00:00:00.000+01:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/hvordan-rekrutterer-man-til-autonome-team.webp"},"title":"Hvordan rekrutterer man til autonome team?","author":"Morten Gran Kristoffersen","subtitle":"I august la vi i Capra ned ledergruppen og fjernet alle mellomledere i jakten på flat struktur. Hvordan rekrutterer man egentlige faglige ledestjerner til et selskap der titler betyr nada, men kultur og påvirkningskraft er drivakslene?","description":"Hvordan rekrutterer man egentlige faglige ledestjerner til et selskap der titler betyr nada, men kultur og påvirkningskraft er drivakslene?","publishedAt":"2020-10-29T00:00:00.000+01:00","body":[{"_type":"block","markDefs":[{"_key":"bfb20d099780","_type":"link","href":"https://www.digi.no/artikler/intervju-it-konsulentselskapet-fjernet-alle-mellomledere-og-innforte-flat-struktur/500444?key=fI697eC1"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"For mange kandidater er titler eller roller viktig. De kommer kanskje fra større selskaper der dette henger sammen med lønn og betingelser? Kanskje det er viktig for dem da noen mener det er bevis på suksess i karrieren? I Digi.no den 12.10 fortalte Aslak Ege om hvordan vi i "},{"_type":"span","marks":["bfb20d099780"],"text":"Capra har reorganisert"},{"_type":"span","marks":[],"text":" til autonome team. Vil valget vi har tatt gjøre rekrutteringen vanskeligere eller lettere?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Nei til “karrierestige”..."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Personer som jager titler og roller og, ønsker en veldig definert intern karrierestige for seg, vil ikke alltid trives hos oss, da det ikke er mulig i Capra. Det har hendt at vi har fått kommentarer fra nyansatte tidligere, som sier «det er ingen som har en satt plan her for min videre vei» og det er helt riktig. Vi har aldri trodd på en satt karrierestige, men heller individuelle karriereplaner som du selv setter og er ansvarlig for."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"... ja til karriereplan!"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi er stolte av hvordan vi legger til rette for en brattest mulig læringskurve, slik at de ansatte kan ta det neste steget i karrieren, enten det er i eller utenfor Capra . Dette er også noe de ansatte responderer veldig bra på, siden de selv påvirker veien fra A til Å. Vi er nemlig ikke redde for at medarbeidere går videre i karrierene, samtidig som vi ønsker å bygge våre egne faglige ledestjerner. Det finnes selvfølgelig muligheter internt i Capra, de er bare ikke alltid definert som en faktisk rolle eller tittel. Reorganiseringen vår har to uttalte mål som gjelder for alle som er en del av Capra:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"Vi skal skape rom for at flere engasjerer seg i driften og utviklingen av selskapet, for på den måten å ta klokere valg og få mer eierskap til det som foregår."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"Vi skal øke graden av autonomi og fleksibilitet, for på den måten å bli mer robuste og øke hastigheten ved endringer."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Med over 50% av de ansatte som har sitt eget AS eller idé på siden som de jobber med på fritiden, mener vi at dette også vil hjelpe dem med å realisere sine private mål på sikt, da de lærer å ta eierskap til eget selskap fra dag 1."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Forventningssamtalen, en undervurdert prat"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Et nytt, viktig steg i vår rekrutteringsprosess er forventningssamtalen. I 2019 og starten av 2020 opplevde vi flere ganger at personer ble lokket til oss pga. strukturen og kulturen vår, men at de ikke helt turte å ta steget til oss, når vi ikke klarte å synliggjøre verdien for deres videre karriere. Vi var ikke det trygge valget."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Etter vi innførte forventningssamtalen i midten av februar har 80% av kandidatene i prosess takket ja, mot 60% tidligere. Noen ganger starter vi prosessen med en slik samtale, andre ganger er det siste samtalen før et offisielt tilbud. Dette avhenger av kandidatens erfaring, nåværende arbeidssituasjon og hva som er viktig for kandidaten med tanke på å skifte jobb. Det er også ulike mennesker som er med på samtalene, basert på hva som trengs å synliggjøres. Er det fag som er viktig, så er det våre faglige ledestjerner som tar praten og er ærlige om hvorfor de trives med autonome team. Er det struktur og kultur, så er det kanskje daglig leder som tegner opp visjonen videre for selskapet. Er en kandidat nysgjerrig, men ønsker å lære mer, så jobber vi langsiktig med kandidater og gir dem muligheten til å bli kjent med oss som selskap, i stedet for å presse dem i hui og hast inn i en kultur og struktur som kanskje ikke passer dem."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vår jobb blir å bevise at denne litt gale satsingen er verdt å være med på. Vi må bevise overfor våre nåværende og fremtidige ansatte at påvirkningskraften og samholdet i autonome team gir større påvirkningskraft og definisjonsmakt enn en fancy tittel."}]}],"tags":["Rekruttering"]}
{"_type":"post","_createdAt":"2020-03-13T00:00:00.000+01:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/hvorfor-bor-du-velge-liflig-som-skreddersydd-softwarelosning/hero.webp"},"title":"Hvorfor bør du velge Liflig som skreddersydd softwareløsning?","author":"Rolf Rønning","subtitle":"Liflig er vårt hjertebarn av mange grunner. En systemløsning så genial at det ikke lenger er noe å lure på – selvfølgelig skal du bruke det!","description":"Liflig er en tjeneste som gir deg en skreddersydd softwareløsning som alltid er oppdatert og relevant. Les hvorfor du bør velge Liflig >>","publishedAt":"2020-03-13T00:00:00.000+01:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Du vet hvor behagelig det er de gangene du spiser på restaurant, bestiller det du vil ha og bare får det servert? En luksus som mange kan være enige om at slår både hjemmelaget slit og rask ferdigmat. Vel, den følelsen kan du få med Liflig også. Capras kloke hoder har nemlig utviklet et konsept som tar seg av de største utfordringene softwareløsninger byr på."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Hva innebærer softwareløsningen Liflig?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Liflig er en tjeneste som gir deg en skreddersydd softwareløsning som alltid er oppdatert og relevant. Du bestemmer hva du vil ha, mens vi tar oss av det tekniske og bygger løsningen for deg. Usikker på hvorfor du bør velge nettopp Liflig fremfor andre softwareløsninger? Her er et par argumenter for hvorfor du bør vurdere Liflig som en alternativ måte å kjøpe softwareløsninger på."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Fire gode grunner til å velge Liflig"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Liflig ble skapt som et resultat av vår forkjærlighet for fremtidsrettede løsninger som gagner så mange som mulig på en gang. Vi ønsket å møte softwarebehov til både storsamfunnet, privatkunder, og selvsagt våre kunders kunder. Utfordringen var å få dette til i en og samme løsning. Sene timer på kontoret og mange koffeinristende hender førte til noe vi er svært fornøyde med, om vi så får si det selv. Liflig ble født, og har i dag vokst opp til å bli en knalltjeneste som lar oss skreddersy softwareløsninger for alle tenkelige bransjer, med alle mulige behov."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I dag ser vi at mange er i situasjoner hvor det trengs en softwareløsning, men ofte har man verken kapasitet eller kompetanse til å ta seg av dette på egenhånd. Mangel på tid og kompetanse er i seg selv en god grunn til å benytte seg av Liflig, og vi kan ramse opp fire andre åpenlyse fordeler med tjenesten."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"1. Liflig sparer bedriften din for mye unødvendig tidssløseri"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Dersom du velger Liflig blir på en måte Capra med på kjøpet. Vi anser oss nemlig som din totalentreprenør når det kommer til din nye softwareløsning. Dette betyr enkelt og greit at du slipper å bruke tid på beslutninger som krever at du setter deg inn i fagfelt du ikke har kontroll på. Vi tar de tunge og tekniske løftene."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Du kan rett og slett fortelle oss hva du vil ha, så fikser vi det uten at du må bruke mye tid på prosessen. Sliter du med å formidle ønskene dine, eller er du usikker på hva du trenger? Da kan vi selvsagt også hjelpe deg med å formidle behov, eller komme med gode forslag til en løsning."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"2. Softwareløsningen vår er svært økonomisk gunstig"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi har allerede understreket hvor mye tid du kan spare med Liflig – og tid er penger. Mange softwaretjenester bygges på en måte som gjør at utvikling over tid blir mer og mer tidkrevende, og dermed også dyrere å holde i. Liflig fungerer motsatt. Her er det Capra som tar ansvaret for at den tekniske løsningen er oppdatert og alltid holder en god standard. Liflig er også en forutsigbar forretningsmodell med faste månedlige kostnader, helt uten overraskelser."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"3. Liflig er en enkel softwareløsning å forholde seg til som kunde"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Med Liflig får du mindre å tenke på og færre bekymringer. Du skal aldri trenge å forholde deg til mer enn funksjonaliteten. Som kunde får du en prosessleder som følger dere opp, og som alltid sørger for at Capra har folk tilgjengelig til å gjøre arbeid som trengs på softwareløsningen deres. Slik vet du at du alltid får det du skal ha, uansett om det er influensasesong eller ferieavvikling."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"4. Vi gir deg et utfyllende partnerskap som faktisk fungerer"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Liflig sin forretningsmodell er langt nærmere et partnerskap enn et «kunde og leverandør»-forhold. Vi fungerer som en forlengelse av din egen bedrift, fremfor en leverandør av en tjeneste. Gjennom Liflig får du et superteam, hvor våre roller utfyller rollen til din bedrift. For at det ferdige resultatet skal bli bra trenger du heller ikke kompetanse om IT-utvikling, du må bare finne ut av hva du vil ha, og stille deg litt disponibel til et samarbeid slik at vi kan utvikle den perfekte softwareløsningen for bedriften din."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/hvorfor-bor-du-velge-liflig-som-skreddersydd-softwarelosning/stemning.webp","alt":"Stemningsbilde"},{"_type":"block","markDefs":[{"_key":"f969658b059a","_type":"link","href":"https://www.liflig.no/kontakt-oss"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Har du en teknologisk utfordring du vil vi skal se nærmere på, eller er du nysgjerrig på om dette er noe for deg? "},{"_type":"span","marks":["f969658b059a"],"text":"Ta kontakt med oss"},{"_type":"span","marks":[],"text":" - så tar vi en hyggelig prat!"}]}],"tags":["Liflig"]}
{"_type":"post","_createdAt":"2020-05-12T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/hvorfor-capra-har-spesialisert-seg-pa-aws/hero.webp"},"title":"Hvorfor Capra har spesialisert seg på Amazon Web Services","author":"Hein Kristiansen","subtitle":"Vi digger Amazon Web Services og har utviklet et av Norges største kompetansemiljø på skyplattformen. Med så mange gode alternativer, lurer kanskje mange på hvorfor vi har valgt AWS. Det er det flere grunner til!","description":"Da vi i Capra skulle bestemme hvilken plattform vi ønsket å satse på var valget enkelt. AWS. Og det er det flere gode grunner til. Les de her >>","publishedAt":"2020-05-12T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Amazon Web Services, bedre kjent som AWS, har vokst seg fra å introdusere fillagring som en tjeneste i 2006, til å bli verdens desidert største skyplattform. Selv om stadig flere konkurrenter kommer på banen klarer de ikke å dytte AWS ned fra den øverste plassen på pallen."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Den unektelige suksessen til AWS handler om så mye mer enn å ha hatt rett idé til rett tid. Plattformen er sikker, fleksibel, tilpasningsdyktig, forutsigbar og pålitelig. Da vi i Capra skulle bestemme hvilken plattform vi ønsket å satse på var valget enkelt. AWS. Og det er det flere gode grunner til."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Et av de største kompetansemiljøene på AWS"}]},{"_type":"block","markDefs":[{"_key":"4273cde0323b","_type":"link","href":"https://aws.amazon.com/partners/find/partnerdetails/?n=Capra%20Consulting%20AS&id=0010L00001oc2DGQAY"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Capra Consulting er et av de største kompetansemiljøene på Amazon Web Services i Norge, noe som både gagner våre kunder og våre ansatte. Vi er "},{"_type":"span","marks":["4273cde0323b"],"text":"APN Advanced Tier Consulting Partner"},{"_type":"span","marks":[],"text":", og har over 25 AWS-sertifiserte medarbeidere som kan hjelpe med å gjøre overgangen til offentlig sky smertefritt. Sertifiseringene våre gir oss dyp innsikt i tjenestene til AWS, og sørger for at våre ansatte har et teoretisk og praktisk grunnlag å bygge videre på i faktiske prosjekter."}]},{"_type":"block","markDefs":[{"_key":"68dfc398dcac","_type":"link","href":"https://www.liflig.no/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"I dag samarbeider Capra tett med AWS, slik at både skyen og ny teknologi alltid er lett tilgjengelig for alle våre kunder. I vår egenutviklede tjeneste for skreddersøm, "},{"_type":"span","marks":["68dfc398dcac"],"text":"Liflig"},{"_type":"span","marks":[],"text":", benytter vi selvsagt AWS. Dette sikrer at vi kan møte selv de mest kompliserte behov."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/hvorfor-capra-har-spesialisert-seg-pa-aws/aws.webp","alt":"AWS logo"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"En plattform vi og våre kunder kan stole på"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"AWS har vist seg å være utrolig pålitelig når det kommer til motstandsdyktighet i turbulente tider.. Amazon Web Services sin totale nedetid er nemlig betydelig lavere enn nedetiden til konkurrenter som Microsoft og Google. Dette gir en plattform som våre kunder kan stole mer på, og som er enklere å jobbe med for våre ansatte. En av hovedgrunnene til at vi i Capra har valgt å bli spesialister på nettopp AWS er hvordan plattformen presterer både til hverdags og under press."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"AWS er svært fleksibel, tilpasningsdyktig og skalerbar"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her i Capra har vi også falt for hvor skalerbar, fleksibel og tilpasningsdyktig plattformen faktisk er. Utviklerne av AWS skapte tidlig grobunn for en infrastruktur som enkelt kunne skaleres opp og ned raskt, for å møte de alltid flytende behovene til ulike bedrifter. I dag er AWS kjent for sin fleksibilitet, og bedrifter som tar i bruk skyplattformen slipper å forholde seg til begrensninger de er vant til å leve med i en fysisk infrastruktur. Her kan du være trygg på at tilgang til servere og lagring alltid er tilgjengelig."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/hvorfor-capra-har-spesialisert-seg-pa-aws/tech.webp","alt":"Teknologi illustrasjon"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Garantert høy sikkerhet og tilpasningsdyktighet"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Uansett hvor stor bedriften er vil AWS tilby samme nivå av sikkerhet. Her får man en løsning som møter de aller høyeste sikkerhetskrav, og det beste av alt er at man slipper å knote rundt med noe som helst på egenhånd. AWS støtter opp under alle de mest kjente compliance standardene i infrastrukturen sin, samtidig som de tilbyr et svært omfattende sikkerhetsregime. Her fås overvåkning i sanntid, slik at man kan oppdage mistenkelig aktivitet og potensielle sårbarheter med en gang."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Du skal også lete lenge før du finner en plattform som er like tilpasningsdyktig som AWS. Blant sine mange finurlige løsninger får du svært enkelt muligheten til å administrere den skybaserte infrastrukturen din med ulike programmeringsspråk. Dette gjør at plattformen  er enkel å jobbe med for alle programmerere."}]},{"_type":"block","markDefs":[{"_key":"6d1142e6347d","_type":"link","href":"https://www.capraconsulting.no/kontakt-oss"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Kunne du tenke deg å jobbe med AWS i et av Norges største kompetansemiljøer på plattformen? Eller gjorde denne artikkelen deg nysgjerrig på Capra som selskap? "},{"_type":"span","marks":["6d1142e6347d"],"text":"Ta kontakt for en hyggelig og uforpliktende prat da vel!"},{"_type":"span","marks":[],"text":" Vi gleder oss til å høre fra deg!"}]}],"tags":["Meninger","Sky"]}
{"_type":"post","_createdAt":"2021-10-11T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/internett-tidsbruk.webp"},"title":"Bruker du litt mye tid på sosiale medier eller internett?","author":"Nicolas Harlem Eide","subtitle":"Her er noen nyttige tips og verktøy for å effektivisere daglig tidsforbruk på internett.","description":"Vi har flere tips og verktøy for å effektivisere tiden du bruker på sosiale medier og internett. Les mer her!","publishedAt":"2021-10-11T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I løpet av én dag har jeg pleid å bruke det som er rundt gjennomsnittlig tid for min aldersgruppe på nett: Ca. 5-7 timer per dag. Personlig syns jeg dette er alt for mye, og jeg får ikke noe glede av det etter å ha holdt på en stund. Da ender jeg bare opp med å \"zombie-scrolle\" for å få neste \"hit\" av content."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Hvorfor bruker vi sosiale medier?"}]},{"_type":"block","markDefs":[{"_key":"6d7c735eeb64","_type":"link","href":"https://www.youtube.com/watch?v=B8ofWFx525s"},{"_key":"2b57b0f052fb","_type":"link","href":"https://news.yale.edu/2021/08/13/likes-and-shares-teach-people-express-more-outrage-online"},{"_key":"1b4e9ae05425","_type":"link","href":"https://www.theguardian.com/technology/2018/may/08/social-media-copies-gambling-methods-to-create-psychological-cravings"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Jeg vet jeg ikke er alene om dette, for "},{"_type":"span","marks":["em"],"text":"sosiale medier har blitt ekstremt gode på å skape "},{"_type":"span","marks":["em","6d7c735eeb64"],"text":"filterbobler"},{"_type":"span","marks":[],"text":", det vil si at man vises innhold som resonerer med deg, og som gjør at du ikke interagerer med folk som er uenige. En forsterkende effekt er at "},{"_type":"span","marks":["2b57b0f052fb"],"text":"radikalt innhold gjør det bedre, fordi det drives av likes, shares og klikk"},{"_type":"span","marks":[],"text":". For å holde deg avhengig brukes "},{"_type":"span","marks":["1b4e9ae05425"],"text":"gamblingteknikker"},{"_type":"span","marks":[],"text":", spesifikt fra enarmede banditter (har du noen gang instinktivt refreshet Instagram, NRK, YouTube og fått opp helt nytt spennende innhold?). Og selv om du prøve å stoppe, er det nesten umulig."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Diskusjoner rundt temaet ender ofte i én av to konklusjoner: \"Dette er da ikke et problem\", eller \"la oss flytte til elektromagnetisk strålefri sone og kvitte oss med den farlige teknologien\" - et litt mer uskyldig eksempel på at meninger ender opp i hver sin ekstrem."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Jeg syntes begge var ræva løsninger, for jeg har faktisk mye nytte av sosiale medier. Det er mye bra der ute, og det er en ekstremt god måte å få med seg ting man kanskje ellers ikke ville fått med seg."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I det siste prøvd å finne en løsning som passer for meg, og resultatet har blitt at jeg har gått fra 5-7 timer "},{"_type":"span","marks":["em"],"text":"til 2-4 timer"},{"_type":"span","marks":[],"text":"!"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Hvordan gå fram?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"For å løse det har jeg tenkt gjennom hva jeg vil ha ut av de sidene jeg er på. Om noe hovedsakelig er \"tomt\" content, så kuttes det."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I tillegg anser jeg hvordan jeg forholder meg til innholdet som veldig viktig. Jeg skal komme til innholdet, det skal ikke komme til meg. Det betyr ingen mailinglister i innboksen, ingen varsler - kun reservert for menneskelig kontakt - og definitivt ingen infinite scroll eller nytt content når jeg refresher."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I tillegg vil jeg kun ha én flate å få content på. Og hvis jeg går inn på innholdet fra en side, i.e. YouTube, må jeg ikke bli distrahert og klikke meg videre på relatert innhold. Så hvordan få content ut av de tungt bevæpnede plattformene og inn i et felles sted?"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Si hei til RSS"}]},{"_type":"block","markDefs":[{"_key":"51be53e283b7","_type":"link","href":"https://docs.rsshub.app/en/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"RSS ("},{"_type":"span","marks":["em"],"text":"Really Simple Syndication"},{"_type":"span","marks":[],"text":") lover akkurat dette: En enkelt protokoll for å aggregere innhold på tvers av sider. Det er relativt utbredt, og selv en del sosiale medier har RSS feed. Og om din plattform ikke støtter RSS, så finnes det "},{"_type":"span","marks":["51be53e283b7"],"text":"verktøy"},{"_type":"span","marks":[],"text":" for å gå fra, ja, hva enn det måtte være til RSS!"}]},{"_type":"block","markDefs":[{"_key":"868fbfc74009","_type":"link","href":"https://feedly.com/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Personlig bruker jeg "},{"_type":"span","marks":["868fbfc74009"],"text":"Feedly"},{"_type":"span","marks":[],"text":" for å aggregere alle feedene mine. Det finnes også en rekke andre verktøy som også gjør nytten."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Men det gjenstår fortsatt et stort problem: Hvordan kan vi unngå å havne i endeløs scrolling? Dette er en annen utfordring, for selv med RSS feed, så må du ofte inn på den aktuelle siden og som følger over på deres plattform."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Redirects, sletting og plugins"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her må man gå litt kreativt til verk, og det kan omfatte flere løsninger: På mobilen så kan man endre hjemmeskjermen til å ikke ha appene du scroller på. For min del, så betyr det at Chrome, Reddit og YouTube forsvinner, mens Feedly og Google Search blir. I tillegg, hvis du er typen som søker etter apper for å finne dem, så kan du rename appene så de blir vanskeligere å finne."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Langt men ikke lenger kommer jeg på mobil, for man kan ikke gjøre endringer inne i selve appene. Men i nettleseren har du full kontroll! Så her er det to sentrale ting som kan gjøres: "},{"_type":"span","marks":["em"],"text":"Redirects"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["em"],"text":"sletting"},{"_type":"span","marks":[],"text":" av elementer."}]},{"_type":"block","markDefs":[{"_key":"aa92bccfaaee","_type":"link","href":"https://chrome.google.com/webstore/detail/redirector/ocgpenflpmgnfapjedencafcfakcekcd?hl=en"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Redirects er handy og gjør at du kan blokkere alt som ikke er innhold. Her bruker jeg "},{"_type":"span","marks":["aa92bccfaaee"],"text":"Redirector"},{"_type":"span","marks":[],"text":". Selv sender jeg de fleste sider tilbake til Feedly, for å forsterke at det er det eneste stedet jeg skal for å få content (så NRK går til Feedly, YouTube går til Feedly, etc)."}]},{"_type":"block","markDefs":[{"_key":"f47ef89a6d0f","_type":"link","href":"https://chrome.google.com/webstore/detail/unhook-remove-youtube-rec/khncfooichmfjbepaaaebmommgaepoid?hl=en"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"I tillegg finnes det en mengde plugins for å blokkere elementer på nettsider. Eksempelvis bruker jeg "},{"_type":"span","marks":["f47ef89a6d0f"],"text":"YouTube Unhook"},{"_type":"span","marks":[],"text":", som lar deg slå av vilkårlige elementer på siden. I tillegg finnes det også generelle plugins for å gjøre det samme på andre nettsider."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Avslutningsvis vil jeg bare si at dette er verktøy og tiltak som har funket for meg. Det finnes utallige alternativer til å minke tiden brukt på nett, og jeg håper dette kan funke som motivasjon og utgangspunkt for å effektivisere egen nettbruk!"}]}],"tags":["Produktivitet"]}
{"_type":"post","_createdAt":"2020-04-26T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/key-takeaways-fra-frontend-workshop.webp"},"title":"Key takeaways fra frontend workshop","author":"Sandra Skarshaug","subtitle":"Hva skjer i Capra? Før vi alle flyttet oss på hvert vårt hjemmekontor arrangerte vi en frontend workshop for å løfte blikket, se overordnet på trender og våre ønsker fremover, og ikke minst ta pulsen på frontend-miljøet i Capra. Vi diskuterte hvilke teknologier vi foretrekker, hva vi føler vi burde lære oss fremover, hvilke trender vi har observert, samt hvilke teknologier vi ønsker å se mindre av. Her er våre takeaways – og så kommer det nok en oppfølgingssak som går mer i dybden etterhvert!","description":"Vi ser at fokuset i bransjen skifter fra «valg av tech» til et ønske om å ta helhetlig ansvar for hva som leveres til sluttbrukere. Les mer om tendensene her!","publishedAt":"2020-04-26T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Helt kort oppsummert: Vi vil som frontend-utviklere bli bedre på totalopplevelsen til sluttbrukeren, og ha mer fokus på ytelse i nettleseren. Vi opplever at fokus i bransjen gradvis skifter bort fra «valg av tech» og «hvilke biblioteker bør vi bruke?», til et ønske om å ta helhetlig ansvar for hva som leveres til sluttbrukere."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"React som bibliotek for frontend-applikasjoner"}]},{"_type":"block","markDefs":[{"_key":"de66b621bfc4","_type":"link","href":"https://youtu.be/BzX4aTRPzno?t=1470"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det kommer sikkert ikke som en stor overraskelse at React er vårt foretrukne bibliotek for frontend-applikasjoner. Gjennomgående for de fleste utviklerne er at de foretrekker å bruke React sammen med Typescript. Vi mener at den ekstra sikkerheten typer gir kan være med på å effektivisere forvaltning av applikasjonen, forbedre kodekvalitet, det gjør koden vår mer leselig, og kan forebygge feil ved større refaktoreringer av kodebasen. Selv om vi er svært glade i React har noen av oss også tatt i bruk Svelte i prosjekter, og har gode erfaringer med det. I jakten på å lage stadig mindre Javascript-bundles er også færre avhengigheter – og dermed også færre potensielle sikkerhetshull – en fin konsekvens, samtidig som "},{"_type":"span","marks":["de66b621bfc4"],"text":"miljø-fotavtrykket"},{"_type":"span","marks":[],"text":" fra applikasjonene vi lager blir mindre."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Service workers med ulike applikasjoner for større effektivitet"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"På horisonten er det flere trender vi ser positivt på. Vi ønsker for eksempel å i større grad ta i bruk service workers. Javascript i nettleseren kjører på én enkelt tråd, og kort forklart lar service workers oss utføre operasjoner uten at det påvirker tråden som vi så gjerne vil bruke til brukergrensesnittet for å gi best mulig brukeropplevelse. En service worker brukes ofte i forbindelse med progressive web-apps (PWAs), men kan også gjøre nytte for seg sammen med mer tradisjonelle applikasjoner, for eksempel til cache-håndtering. Vi ser også på server-side rendering av applikasjoner som en veldig spennende (og nå også ganske moden) tilnærming til å redusere arbeid for hver enkelt klient. Det kan redusere lastetid, og gi bedre resultater hos søkemotorer som leser og indekserer siden din. Web Assembly kommer som en kule, og gir oss nye muligheter for å effektivisere oppgaver på klienten som uten Web Assembly er tunge. I tillegg lar det oss bruke andre språk enn Javascript i nettleseren (Rust og Go er hete kandidater for øyeblikket)."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Viktigheten av en god brukeropplevelse - for alle"}]},{"_type":"block","markDefs":[{"_key":"83305ebbf3fa","_type":"link","href":"https://uu.difi.no/nyhet/2018/09/eus-webdirektiv-blir-en-del-av-norsk-regelverk"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hos frontend-utviklerne våre ser vi også en økt interesse for å skifte fokus mot den helhetlige opplevelsen som leveres til sluttbrukere – det kan være penere visualiseringer og animasjoner, optimalisering av bilde- og videoleveranse, eller ren ytelse i form av raskere lastetider eller en mer snappy opplevelse – og bort fra tjenester og prosjekter. Viktigheten av dette kan ikke understrekes nok. "},{"_type":"span","marks":["83305ebbf3fa"],"text":"I Norge har vi siden 2013 hatt et regelverk om universell utforming basert på WCAG 2.0 og en forskrift for universell utforming av IKT-løsninger"},{"_type":"span","marks":[],"text":". Dette omfatter både virksomheter i privat og offentlig sektor, samt lag og organisasjoner. Akkurat nå er et forslag om å utvide regelverket med deler av EUs Web Accessibility Directive under utarbeidelse, og det er enda ikke bestemt i hvilken grad lovforslaget skal gjelde privat sektor. Med dette følger potensielt flere krav som norske virksomheter må følge, og det igjen vil medføre retningslinjer som vil kunne bidra til et løft i brukeropplevelse!"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Nedadgående trender"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Når det gjelder teknologier som er på en nedadgående trend rent popularitetsmessig, er det mange kjære og kjente travere som etter hvert må vike for nye alternativer. Funksjonalitet som CSS-moduler og -variabler, samt verktøy som PostCSS som kan ta seg av ting som linting eller auto-prefixing, gjør at jobben som CSS-preprosessorer som LESS og SASS gjorde i stor grad er blitt overflødig. Vi ser også at den gamle favoritten Redux i svært mange tilfeller har blitt erstattet av Reacts innebygde Context-API. Årsaken er nok sammensatt, men vi tror at spesielt i mindre applikasjoner innfører Redux unødvendig kompleksitet sammenlignet med Context-APIet, og det rettferdiggjør ikke den ekstra mengden kode vi trenger for å få et fungerende skjelett opp å kjøre."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Både å lære mer om datadrevet utvikling, og i enda større grad ta det i bruk, var et ønske som kom tydelig frem blant flere av oss. Som nevnt opplever vi som frontend-utviklere et økt fokus på brukerens helhetlige inntrykk av applikasjonen. Vi mener at å ta ansvar for dette innebærer å ta i bruk datadrevet utvikling: Lage løsninger basert på data. Ved måling av hvordan applikasjonene oppfører seg hos brukerne har vi også et bedre faktagrunnlag, og kan dermed ta bedre avgjørelser for å forbedre sluttbrukerens opplevelse."}]}],"tags":["Frontend"]}
{"_type":"post","_createdAt":"2021-12-01T00:00:00.000+01:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/kloke-valg-ikke-ytterligere-tiltak.webp"},"title":"Schrems II krever kloke valg, ikke ytterligere tiltak","author":"Hein Kristiansen","subtitle":"Som følge av den såkalte Schrems II-dommen har vi fått et nytt begrep i vårt vokabular: Ytterligere tiltak. Disse kommer i form av organisatoriske, juridiske og tekniske løsninger som skal bedre personvernet innenfor Europas grenser. Det er kanskje fristende å legge skylden på amerikansk etterretning eller håpe på en snarlig politisk løsning i form av Privacy Shield 2.0. I stedet bør vi ta en nærmere titt i speilet. Hva gjør vi egentlig for å sikre personvernet til sluttbrukerne våre best mulig?","description":"Hein Kristiansen fra Capra Consulting forklarer hvordan håndtere persondata i skyen med kloke valg, ikke ytterligere tiltak","publishedAt":"2021-12-01T00:00:00.000+01:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Heldigvis har vi nå fått en ny veileder fra Datatilsynet om overføring av personopplysninger utenfor EØS. Denne gir oss grunnlaget for å gjøre en risikobasert vurdering: Opererer vi i tråd med gjeldende lover og regler? La oss se hvordan en slik vurdering kan gjøres."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Risikovurdering og ivaretakelse av personvern"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det første vi må gjøre i en risikovurdering er å sikre at vi har et lovlig overføringsgrunnlag. Her konkluderer både EU-domstolen og Datatilsynet med at standard personvernbestemmelser fremdeles er et gyldig overføringsgrunnlag, men at de ikke alltid er tilstrekkelige i seg selv."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"De nye standard personvernbestemmelsene introduserer også en nyvinning i form av at en databehandler nå kan eksportere personopplysninger. I noen tilfeller medfører dette eksportansvaret kan falle på skyleverandøren. For eksempel, hvis en databehandler velger å eksportere personopplysninger for eget formål, i strid med eller uten den behandlingsansvarliges instruks, blir databehandleren selv ansvarlig for denne eksporten. Den behandlingsansvarlige har likevel ansvar for å velge databehandlere som kan stille tilstrekkelige garantier for at de vil følge våre personvernregler."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Ulik lovgivning"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Amerikanske skyleverandører er dessverre underlagt en nasjonal lovgivning som sier at lokale myndigheter kan be om informasjon om bestemte personer. Derfor konkluderer både EU-domstolen og Datatilsynet med at standard personvernbestemmelser må suppleres med ytterligere tiltak ved overføring til USA. Hvis ikke slike tiltak blir iverksatt, er overføringen ulovlig og må stoppe. Jeg vil hevde at noen av disse ytterlige tiltakene er kloke valg, og vil beskrive dem nedenfor."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Heldigvis har skyleverandørene vært tidlig på banen og innført ytterligere juridiske tiltak. Datatilsynet ser på disse tiltakene som et skritt i riktig retning. Det er allikevel viktig å kunne dokumentere at dataimportøren utfordrer alle utleveringsbegjæringer de mottar fra lokale myndigheter og at den hjelper de registrerte med å ivareta rettighetene deres i det aktuelle tredjelandet."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Datatilsynet velger en noe strengere linje når det kommer til tekniske tiltak. Datatilsynet mener at hvis en dataimportør i et tredjeland forvalter krypteringsnøkkelen på vegne av den behandlingsansvarlige, så vil ikke kryptering være effektiv mot begjæringer om utlevering fra lokale myndigheter. Dette medfører at normal bruk av kjente tjenester for kryptering ikke lenger vil være tilstrekkelig når det er dataimportøren som administrerer modulene som genererer og lagrer krypteringsnøklene."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"IT-løsninger i samsvar med Schrems II"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Disse tjenestene er så dypt integrert hos skyleverandørene at det å ekskludere dem svekker sikkerheten betydelig. Heldigvis har vi tilgang til dedikerte moduler for vedlikehold av krypteringsnøkler som lar oss ta over administrasjonen. Dermed kan vi dokumentere at vi har stengt dataimportørens tilgang til krypteringsnøklene selv om de ligger i skyen. Vi kanogså innføre ytterlige tiltak som flerfaktorautorisering og kreve to eller flere godkjennelser for administrative handlinger på disse dedikerte modulene."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Dette bør vi kombinere med andre kloke valg som:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Å logisk segmentere miljø per konto."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Å innføre prinsipp om minste privilegium ved å fjerne all unødvendig tilgang per miljø."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Å sikre at vi alltid benytter state-of-the-art krypteringsalgoritmer, både ved overføringer (“in flight”) og lagring (“at rest”) av personopplysninger."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Å bedre sikkerheten ved prosessering av personopplysninger i ukryptert tilstand (“data in the clear”).\nDermed skaper vi en trygg sikkerhetsgrunnmur vi kan bygge videre på. Jeg mener at alle kjente tiltak som styrker personvernet må vurderes, for kostnad er i seg selv ingen unnskyldning for ikke å innføre dem."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Tiltakene jeg beskriver ovenfor iverksettes normalt bare ved betalingsformidling eller ved behandling av sensitive personopplysninger. Men de kan også brukes som ytterligere tiltakfor å overkomme regulatoriske hindringer som følge av den såkalte Schrems II-dommen eller tilsvarende domsavgjørelser i fremtiden. For å oppfylle kravet om tilsvarende beskyttelsesnivå som under GDPR må vi altså foreta en helhetlig risikobasert tilnærming hvor vi dokumenterer de tiltakene som er nødvendige for å komme i mål."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"De organisatoriske tiltakene som kreves for å etablere og vedlikeholde disse løsningene er en reell utfordring. Erfarne skyarkitekter med relevant sikkerhetserfaring vokser ikke på trær i Norge."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"La oss allikevel kalle en spade for en spade. Dette er kloke valg, ikke ytterligere tiltak."}]},{"_type":"block","markDefs":[{"_key":"3f60a86cdbdb","_type":"link","href":"https://www.digi.no/artikler/debatt-schrems-2-vi-trenger-kloke-valg-ikke-ytterligere-tiltak/515207"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Denne artikkelen ble først publisert på "},{"_type":"span","marks":["3f60a86cdbdb"],"text":"digi.no"},{"_type":"span","marks":[],"text":"."}]}],"tags":["Sky","Meninger","AWS"]}
{"_type":"post","_createdAt":"2020-11-30T00:00:00.000+01:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/kvalitetssikre-nettsiden-med-lighthouse/hero.webp"},"title":"Kvalitetssikre nettsiden med Google Lighthouse","author":"Gaute Meek Olsen","subtitle":"Når man lager nettsider så ønsker man at den skal være av god kvalitet for å gi mest mulig verdi for brukerne. Dette er en kort innføring i hvordan man med få ressurser kan luke bort feil som gir dårlig brukeropplevelse.","description":"Luk bort feil som gir dårlig brukeropplevelse med Google Lighthouse. Les mer her >>","publishedAt":"2020-11-30T00:00:00.000+01:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Den beste måten å kvalitetssikre en nettside på, er ved å forstå hvordan brukerne interagerer med den og hva de synes. Men ofte har man ikke denne innsikten, enten fordi man mangler kapasitet til å kartlegge det eller man ikke vet hvem brukerne er."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Da er det heldigvis fint at du kan ta i bruk et verktøy som kan hjelpe deg i riktig retning; nemlig Lighthouse. Denne artikkelen forklarer nærmere hva det er og hvordan det kan brukes både for en ikke-teknolog, under utvikling og ved å automatisere prosessen gjennom Continuous Integration (CI) pipelines."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Hva er Lighthouse?"}]},{"_type":"block","markDefs":[{"_key":"659e23e8b9d0","_type":"link","href":"https://developers.google.com/web/tools/lighthouse/"}],"style":"normal","children":[{"_type":"span","marks":["659e23e8b9d0"],"text":"Lighthouse"},{"_type":"span","marks":[],"text":" er et automatisert verktøy fra Google som vurderer og hjelper til med å forbedre kvaliteten på nettsider. Den gir deg en rapport med detaljer innenfor disse kategoriene:"}]},{"_type":"block","markDefs":[{"_key":"bb797241a909","_type":"link","href":"https://web.dev/pwa-checklist/"}],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Performance"},{"_type":"span","marks":[],"text":": Målinger som forteller blant annet hvor raskt nettsiden lastes og vises."},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":["strong"],"text":"Best Practices"},{"_type":"span","marks":[],"text":": Finner og presenterer alt fra bruken av HTTPS til bildenes anbefalte størrelsesforhold."},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":["strong"],"text":"Search Engine Optimization (SEO)"},{"_type":"span","marks":[],"text":": Sjekker at du har fulgt retningslinjene som gjør at nettsiden skal være synlig for søkemotorer."},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":["strong"],"text":"Accessibility"},{"_type":"span","marks":[],"text":": Leter etter vanlige feil innen universell utforming."},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":["strong"],"text":"Progressive Web App (PWA)"},{"_type":"span","marks":[],"text":": Sjekker for å lage en "},{"_type":"span","marks":["bb797241a909"],"text":"Progressive Web App"},{"_type":"span","marks":[],"text":"."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/kvalitetssikre-nettsiden-med-lighthouse/rapport.webp","alt":"Eksempel på en Lighthouse rapport"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Over ser du et eksempel på hvordan resultatet kan se ut. Etter en kjøring får du en score fra 0 til 100 innen hver kategori. Kategoriene består av et antall sjekker hver, som for eksempel \"Time to interactive\" og \"Background and foreground colors have sufficient contrast ratio\". Hver sjekk har en forklaring på hvorfor nettopp den er viktig og hvordan du kan rette opp i den."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"Det skal sies at slike verktøy ikke kan sjekke alt, og det finnes verktøy der ute som egner seg bedre til å sjekke én enkel kategori, for eksempel universell utforming eller performance. Likevel er Lighthouse er et kvalitetsverktøy som dekker flere områder, og i tillegg er gratis."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"For ikke-teknologen"}]},{"_type":"block","markDefs":[{"_key":"2b2dedf5f5dc","_type":"link","href":"https://web.dev/measure/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Kanskje du eier en nettside, er prosjektleder eller har en annen grunn til å sjekke kvaliteten på nettsiden? Det kan du gjøre veldig enkelt: Gå til "},{"_type":"span","marks":["2b2dedf5f5dc"],"text":"web.dev/measure"},{"_type":"span","marks":[],"text":", legg inn din URL og trykk RUN AUDIT. Da får du en full rapport over kvaliteten. Det kan være lurt å kjøre denne med jevne mellomrom slik at du kan fortelle utviklerne hva de skal forbedre."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"For utvikleren"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Du kan også kjøre Lighthouse i Chrome DevTools: Sørg for å ha installert Chrome, åpne en nettside, trykk F12 og naviger deg til Lighthouse-fanen. Her kan du velge hvilke kategorier som skal sjekkes og hvilken enhet kjøringen skal simuleres på. Deretter kan du trykke på “Generate report”-knappen for å få en fullstendig rapport. Dette er et enkelt tiltak for å sørge for god kvalitet på nettsiden mens du utvikler på lokal maskin."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/kvalitetssikre-nettsiden-med-lighthouse/devtools.webp","alt":"Lighthouse i Chrome DevTools"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"For maskinen"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Du kan til og med kjøre Lighthouse fra kommandolinjen. Dette betyr at vi kan automatisere Lighthouse-kjøringene med shell scripts. Det kan bli installert gjennom NPM med "},{"_type":"span","marks":["code"],"text":"npm install -g @lhci/cli"},{"_type":"span","marks":[],"text":" og kjørt med "},{"_type":"span","marks":["code"],"text":"lhci autorun"},{"_type":"span","marks":[],"text":". Her kommer en forklaring på hvordan du kan implementere dette i pull requests i GitHub, noe som gir teamet full kontroll over at kode som blir lagt til opprettholder kvaliteten."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"Hvis koden din ikke ligger i GitHub, så vil framgangsmåten mest sannsynlig være tilsvarende for andre plattformer."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Først, lag en workflow-fil i GitHub-repoet,"},{"_type":"span","marks":["code"],"text":".github/workflows/lighthouse.yml"},{"_type":"span","marks":[],"text":". Filnavnet kan være hva du ønsker, men behold mappenavnene "},{"_type":"span","marks":["code"],"text":".github"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["code"],"text":"workflows"},{"_type":"span","marks":[],"text":". Her er et forslag på hvordan .yml-filen kan se ut:"}]},{"_type":"code","code":"name: CI\non: pull_request\n\njobs:\n  lighthouse-ci:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - name: npm install & build\n        run: |\n          npm install\n          npm run build\n      - name: run Lighthouse CI\n        run: |\n          sudo npm i -g @lhci/cli\n          lhci autorun\n","language":"yml"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Denne sier at den skal kjøre jobben "},{"_type":"span","marks":["code"],"text":"lighthouse-ci"},{"_type":"span","marks":[],"text":" på pull requests. Stegene i jobben vil installere og bygge applikasjonen din, så kjøre Lighthouse på den ferdigbygde nettsiden. Hvis du ikke har et byggesteg i prosjektet ditt, kan du fjerne steget "},{"_type":"span","marks":["code"],"text":"npm install & build"},{"_type":"span","marks":[],"text":". "},{"_type":"span","marks":["code"],"text":"lhci autorun"},{"_type":"span","marks":[],"text":" vil kjøre Lighthouse med standardinnstillinger. Den vil lete etter en mappe med navn "},{"_type":"span","marks":["code"],"text":"dist"},{"_type":"span","marks":[],"text":", "},{"_type":"span","marks":["code"],"text":"build"},{"_type":"span","marks":[],"text":", "},{"_type":"span","marks":["code"],"text":"out"},{"_type":"span","marks":[],"text":" eller "},{"_type":"span","marks":["code"],"text":"public"},{"_type":"span","marks":[],"text":" for HTML-filer å skanne."}]},{"_type":"block","markDefs":[{"_key":"f7c567244994","_type":"link","href":"https://github.com/GoogleChrome/lighthouse-ci/blob/master/docs/configuration.md"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi kan også legge til konfigurering ved å plassere en "},{"_type":"span","marks":["code"],"text":"lighthouserc.js"},{"_type":"span","marks":[],"text":"-fil i rotmappen. For en detaljert oversikt over alle innstillingene som kan settes, kan du sjekke "},{"_type":"span","marks":["f7c567244994"],"text":"Lighthouse sin dokumentasjon"},{"_type":"span","marks":[],"text":". Her er et eksempel på en ferdige konfigurasjon:"}]},{"_type":"code","code":"module.exports = {\n  ci: {\n    collect: {\n      staticDistDir: 'dist',\n      isSinglePageApplication: true,\n      url: ['', 'about', '404']\n    },\n    assert: {\n      preset: \"lighthouse:no-pwa\",\n      assertions: {\n        \"categories:performance\": [\"error\", { \"minScore\": 0.9 }],\n        \"categories:accessibility\": [\"error\", { \"minScore\": 1 }],\n        \"categories:seo\": [\"error\", { \"minScore\": 0.9 }],\n        \"categories:best-practices\": [\"error\", { \"minScore\": 0.9 }],\n        \"unsized-images\": \"off\"\n      }\n    },\n    upload: {\n      target: \"temporary-public-storage\"\n    }\n  },\n};\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Innstillingen "},{"_type":"span","marks":["code"],"text":"collect"},{"_type":"span","marks":[],"text":" er for hvilke sider som skal skannes. Hvis du har flere "},{"_type":"span","marks":["code"],"text":".html"},{"_type":"span","marks":[],"text":" filer i mappen, så trenger du eventuelt bare "},{"_type":"span","marks":["code"],"text":"staticDistDir"},{"_type":"span","marks":[],"text":" for å angi mappen som skal skannes. Men hvis du har en Single Page Application (SPA) med flere routes, så kan du benytte "},{"_type":"span","marks":["code"],"text":"staticDistDir"},{"_type":"span","marks":[],"text":", "},{"_type":"span","marks":["code"],"text":"isSinglePageApplication"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["code"],"text":"url"},{"_type":"span","marks":[],"text":" for å angi hvilke routes som skal skannes."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["code"],"text":"assert"},{"_type":"span","marks":[],"text":" benyttes for hvilke sjekker som skal bli gjort og hva som avgjør om kjøringen blir godkjent eller avvist. "},{"_type":"span","marks":["code"],"text":"preset"},{"_type":"span","marks":[],"text":" kan ha verdien "},{"_type":"span","marks":["code"],"text":"lighthouse:all"},{"_type":"span","marks":[],"text":", "},{"_type":"span","marks":["code"],"text":"lighthouse:recommended"},{"_type":"span","marks":[],"text":" eller "},{"_type":"span","marks":["code"],"text":"lighthouse:no-pwa"},{"_type":"span","marks":[],"text":". "},{"_type":"span","marks":["code"],"text":"lighthouse:all"},{"_type":"span","marks":[],"text":" er en veldig aggressiv skanning hvor alt må være godkjent for en kjøring. "},{"_type":"span","marks":["code"],"text":"lighthouse:recommended"},{"_type":"span","marks":[],"text":" er et mer realistisk nivå som anbefales, hvor en score på under 90 gir warning og under 50 gir error. "},{"_type":"span","marks":["code"],"text":"lighthouse:no-pwa"},{"_type":"span","marks":[],"text":" er samme som "},{"_type":"span","marks":["code"],"text":"lighthouse:recommended"},{"_type":"span","marks":[],"text":", men uten sjekker for PWA. Du kan også være mer spesifikk i "},{"_type":"span","marks":["code"],"text":"assertions"},{"_type":"span","marks":[],"text":". Hvis man for eksempel synes en score på under 50 på performance er for lavt, og heller ønsker å gi en error når scoren er under 90, så kan man sette: "},{"_type":"span","marks":["code"],"text":"\"categories:performance\": [\"error\", { \"minScore\": 0.9 }]"},{"_type":"span","marks":[],"text":". Man kan også skru av spesifikke regler, med eksempelvis "},{"_type":"span","marks":["code"],"text":"\"unsized-images\": \"off\""},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hvis du ønsker å laste opp rapporten til en server kan dette gjøres i "},{"_type":"span","marks":["code"],"text":"upload"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["code"],"text":"target"},{"_type":"span","marks":[],"text":". Hvis du ikke ønsker å lagre rapportene selv så tilbyr Lighthouse en midlertidig lagring som kan benyttes helt gratis ved å sette "},{"_type":"span","marks":["code"],"text":"temporary-public-storage"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Til slutt, hvis du ikke ønsker å klikke deg inn på kjøringen til workflow consolen i pull requesten for å sjekke detaljer, så kan du installere Lighthouse CI GitHub app som setter statuser synlig i pull requesten. Her er et eksempel på hvordan det ser ut for hver URL som er skannet:"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/kvalitetssikre-nettsiden-med-lighthouse/scan.webp","alt":"Pull request status"},{"_type":"block","markDefs":[{"_key":"b072ecc74d65","_type":"link","href":"https://github.com/apps/lighthouse-ci"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Installer GitHub-appen "},{"_type":"span","marks":["b072ecc74d65"],"text":"Lighthouse CI"},{"_type":"span","marks":[],"text":" og gi tilgang til de repositoriene du ønsker. Kopier og ta vare på tokenet du får og lagre dette under Settings > Secrets med navn "},{"_type":"span","marks":["code"],"text":"LHCI_GITHUB_APP_TOKEN"},{"_type":"span","marks":[],"text":" for ønsket repository. Så må du oppdatere "},{"_type":"span","marks":["code"],"text":"lighthouse.yml"},{"_type":"span","marks":[],"text":" med:"}]},{"_type":"code","code":"# below - uses: actions/checkout@v2\nwith:\n  ref: ${{ github.event.pull_request.head.sha }}\n# below lhci autorun\nenv:\n  LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}\n","language":"yml"},{"_type":"block","markDefs":[{"_key":"faf0d882658b","_type":"link","href":"https://github.com/gautemo/lighthouse-example"},{"_key":"6ee156dc59ce","_type":"link","href":"https://github.com/gautemo/lighthouse-example/pull/9"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Sjekk ut mitt "},{"_type":"span","marks":["faf0d882658b"],"text":"GitHub repository"},{"_type":"span","marks":[],"text":" for en demonstrasjon med en "},{"_type":"span","marks":["6ee156dc59ce"],"text":"pull request"},{"_type":"span","marks":[],"text":" som inneholder Lighthouse-statuser."}]}],"tags":["Frontend"]}
{"_type":"post","_createdAt":"2020-03-13T00:00:00.000+01:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/liflig-kan-lose-et-stort-softwareproblem-i-it-bransjen/hero.webp"},"title":"Liflig kan løse et stort softwareproblem i IT-bransjen","author":"Rolf Rønning","subtitle":"Når vanlige softwaretjenester og løsninger ikke holder mål lenger er det på tide å ta affære. Liflig kan være løsningen på et utbredt problem i IT-bransjen.","description":"Når vanlige softwaretjenester ikke holder mål lenger er det på tide å ta affære. Liflig kan være løsningen på et utbredt problem i IT-bransjen. Les mer >>","publishedAt":"2020-03-13T00:00:00.000+01:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I en tid hvor tekniske løsninger er i fritt fall og kompetansebristen er reell, mener vi (helt objektivt, naturligvis) at vi har utviklet et løsning som takler mange av utfordringene bransjen står overfor. En slags nepotisme kanskje, men heller ikke uberettiget av den grunn. Liflig er nemlig en tjeneste som gir deg den skreddersydde softwareløsningen du alltid har ønsket deg. I tillegg er den også alltid oppdatert og relevant. Det eneste du som kunde trenger å gjøre er å bestemme deg for hva du vil ha, så tar vi i Capra oss av resten."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Flere softwareløsninger er i fritt forfall"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi i IT-konsulentbransjen må slutte å lyve for oss selv og våre kunder. De tekniske løsningene vi lenge har elsket og stolt på har fortapt seg over årene. Så hva gjør man når forelskelsen avtar? Vel, i IT-bransjen bør man noen ganger kaste inn håndkleet og begynne å tenke mer løsningsorientert."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I dag bygges mange softwaretjenester på en måte som gjør at utvikling blir mer og mer krevende over tid. Dette resulterer i at man må få hjelp av utviklere til å oppdatere og vedlikeholde løsningene, noe som kan koste dyrt. I teorien har du kjøpt en ferdig løsning, men i realiteten har den en utløpsdato.“På lik linje som at du ikke ville kjøpt et muggent brød billig, i håp om at det skulle bli ferskt igjen, mener vi det er dumt å skulle bruke X antall tusen på en løsning som allerede er utdatert og til slutt vil være nærmest ubrukelig. Og det er her Liflig kommer inn”."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Liflig er Google Docs der andre softwareløsninger er Word"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Når andre softwareløsninger forfaller og blir dyrere å holde i, vil Liflig fungere motsatt. Her får du nemlig en løsning hvor Capra tar ansvaret for at alt det tekniske til enhver tid er oppdatert og alltid møter en høy standard.  Det betyr rett og slett at du ikke trenger å bekymre deg for digitale tjenesteplattformer som ligner noe man har laget i Paint, eller irriterende programvarer som ikke funker som de skal."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Liflig kan på mange måter sammenlignes med Google Docs. Her blir dokumenter, lister, skjemaer og alt annet en måtte trenge, lagret og oppdatert i sanntid. Alle som har behov for det får også tilgang og kan gjøre endringer. Andre softwareløsninger kan i denne sammenhengen bli sett på som Word. Et program som lar deg skrive det du ønsker, men som kun ligger tilgjengelig for de som arbeider i dokumentet, og som kun kan oppdateres stykkevis."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Spar penger og tid med Liflig"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi synes ikke egentlig det finnes noen grunn for å la være å bytte til Liflig dersom man trenger skreddersydde softwareløsninger. Men igjen – det kan være nepotismen som snakker. Ser vi bort fra det faktum at dette er en skikkelig kul løsning, vil Liflig også kunne møte mer kjedelige og fornuftige krav, som tidsbesparing og økonomisk lønnsomhet. Liflig gir deg nemlig en forutsigbar forretningsmodell med faste månedlige kostnader, slik at du unngår ubehagelige overraskelser og plutselig må pantsette hele bedriften. Kontraktene våre er også enkle å forstå, og vi tilpasser de naturligvis etter deres behov."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/liflig-kan-lose-et-stort-softwareproblem-i-it-bransjen/pengeplante.webp","alt":"Pengeplante"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Siden du får et flott team på laget og programvaren din oppdateres i sanntid vil du også bli spart for mye tid og hodebry. Du slipper å oppdage feil eller problemer, for det er vi alltid på jakt etter. Liflig betyr faktisk herlig – og det er denne løsningen! Rett og slett helt herlig."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Lurer du på mer angående Liflig eller softwareløsninger som kan hjelpe deg?"}]},{"_type":"block","markDefs":[{"_key":"f1e48b26ce99","_type":"link","href":"https://www.liflig.no/kontakt-oss"}],"style":"normal","children":[{"_type":"span","marks":["f1e48b26ce99"],"text":"Ta kontakt med oss"},{"_type":"span","marks":[],"text":" for en trivelig prat!"}]}],"tags":["Liflig"]}
{"_type":"post","_createdAt":"2022-03-01T00:00:00.000+01:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/migrering-av-terraform-state-mellom-skyplattformer/hero.webp"},"title":"Migrering av Terraform state mellom skyplattformer","author":"Mina Farrokhnia","subtitle":"Ved å bruke migrering fra Google Cloud Platform (GCP) til Azure som eksempel, skal jeg gjennom denne artikkelen vise prosessen å bytte backend for Terraform mellom skyplattformer.","description":"Ved å bruke migrering fra Google Cloud Platform (GCP) til Azure som eksempel, skal jeg gjennom denne artikkelen vise prosessen å bytte backend for Terraform mellom skyplattformer.","publishedAt":"2022-03-01T00:00:00.000+01:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Noen ganger får man behov for å flytte filer fra en skyplattform til en annen. Det kan være på grunn av bytte av skyleverandør, eller kanskje man bare ønsker å konsolidere all lagring på en enkel tjeneste i et multicloud-miljø. En liten, men viktig detalj i migrasjonen er å bytte backend for Terraform. Må jeg kopiere over Terraform sin state manuelt? Er navnekonvensjonen på filene til Terraform lik på tvers av backend provider? Hva skjer med workspaces?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I denne artikkelen vil jeg guide deg gjennom denne prosessen. Jeg bruker en migrering fra Google Cloud Platform (GCP) til Azure som eksempel."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Bytte backend"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Som en del av Terraform-prosjektet definerer vi en backend. Denne peker til hvor Terraform lagrer sin tilstand. Nøyaktig hvordan dette gjøres er opp til implementasjonen, men i praksis betyr det at vi peker til en ressurs hvor vår backend provider lagrer et sett med filer som representerer Terraform sin interne tilstand."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her er et backend-oppsett som peker på en Cloud Storage-ressurs på GCP:"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/migrering-av-terraform-state-mellom-skyplattformer/kode1.webp","alt":"Terraform kode"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det første steget i migrasjonen er å kjøre “terraform init” med nåværende backend. Dette er viktig for at Terraform får med seg alle workspaces."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Neste steg er å endre backend i prosjektet til å bruke Azure. For å få til det må du først lage en Storage Account og container gjennom Azure Storage. Her brukte jeg et annet Terraform-prosjekt til å lage en Azure Storage account og deretter en container:"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/migrering-av-terraform-state-mellom-skyplattformer/kode2.webp","alt":"Terraform kode"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her ser vi vår container på Azure Storage, klar til bruk:"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/migrering-av-terraform-state-mellom-skyplattformer/azure-storage.webp","alt":"Azure storage"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I prosjektet jeg ønsket å migrere, byttet jeg så backend-oppsett til å peke på min nye Azure Storage container:"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/migrering-av-terraform-state-mellom-skyplattformer/kode3.webp","alt":"Terraform kode"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Etter det må “terraform init” kjøres igjen. Terraform vil oppdage at du har byttet backend provider, og du får valget om å overføre tilstanden:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["code"],"text":"$ terraform init"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["code"],"text":"Initializing the backend..."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["code"],"text":"Backend configuration changed!"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["code"],"text":"Terraform has detected that the configuration specified for the backend has changed. Terraform will now check for existing state in the backends."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["code"],"text":"Terraform detected that the backend type changed from \"gcs\" to \"azurerm\"."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["code"],"text":"Do you want to migrate all workspaces to \"azurerm\"?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["code"],"text":"Both the existing \"gcs\" backend and the newly configured \"azurerm\" backend support workspaces. When migrating between backends, Terraform will copy all workspaces (with the same names). THIS WILL OVERWRITE any conflicting states in the destination."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["code"],"text":"Terraform initialization doesn't currently migrate only select workspaces."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["code"],"text":"If you want to migrate a select number of workspaces, you must manually pull and push those states."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["code"],"text":"If you answer \"yes\", Terraform will migrate all states. If you answer \"no\", Terraform will abort."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["code"],"text":"Enter a value: yes"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Når Terraform har kjørt ferdig vil migrasjonen være ferdig. Om du sjekker din container på Azure Storage vil du se at alle tfstate-filene, for alle workspaces er overført:"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/migrering-av-terraform-state-mellom-skyplattformer/azure-storage2.webp","alt":"Azure storage"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Kort oppsummert"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Så lett er det altså. Terraform gjør det aller meste av jobben. Ikke vær bekymret for å gjøre noe galt siden du fremdeles har kopier av state-filene liggende på den gamle backenden. Bare husk å informere de andre i teamet før du går i gang: Endringer som gjøres med gammel backend reflekteres naturligvis ikke i den nye tilstanden til Terraform etter at migrasjonen er gjort."}]}],"tags":["Azure","Sky","Terraform"]}
{"_type":"post","_createdAt":"2020-04-22T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/mot-var-nye-cto.webp"},"title":"Møt vår nye CTO!","author":"Julie Minsaas","subtitle":"Denne måneden begynte Heidi Brovold i stillingen som CTO i Capra, noe vi er så glade for! Som vår daglige leder, Aslak Ege, sier: \"Heidis imponerende track-record og brennende engasjement for innovasjon, ledelse og læring var perfekt for oss og vårt mål om å bygge Norges beste kompetansemiljø på våre faglige satsningsområder. I tillegg tilfører hun oss sterk kompetanse på ledelse.”","description":"Denne måneden begynte Heidi Brovold i stillingen som CTO i Capra, noe vi er så glade for! Som vår daglige leder, Aslak Ege, sier: &quot;Heidis imponerende track-record og brennende engasjement for innovasjon, ledelse og læring var perfekt for oss og vårt mål om å bygge Norges beste kompetansemiljø på våre faglige satsningsområder. I tillegg tilfører hun oss sterk kompetanse på ledelse.”","publishedAt":"2020-04-22T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Så hvem er Heidi? Her kan du bli litt bedre kjent med henne!"}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Hva skal du ha ansvar for i Capra, og hvorfor var vi så heldige at du kom du til oss?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Jeg får ansvaret for Capras faglige utvikling innen de teknologiområdene selskapet satser på. Jeg skal jobbe særlig tett med Capras fagsjefer for frontend, backend, public cloud, teknisk arkitektur og prosessledelse - og resten av selskapet - for å sikre toppnivå på konsulenter og produkter, gjøre gode valg for Capras kunder og sørge for det beste utviklingsløpet for enkeltindivider og organisasjonen. Jeg vil også ha stort fokus på å styrke kulturen for læring og kompetansedeling."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Jeg begynte å jobbe i Capra på grunn av kulturen, hvor åpenhet og inkludering mellom knallflinke og lærende folk står i høysetet. Jeg brenner for læring og lederskap med innovasjon i tech-miljøer som formål - og der ser jeg en god match mellom Capra og meg."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Hva har du gjort tidligere?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Jeg kommer fra stillingen som nordisk fagansvarlig for “business consulting”, avdelingsleder og rådgiver innen innovasjon i TietoEVRY. Tidligere har jeg jobbet i krysningspunktet teknologi og innovasjon i blant annet DNV GL og Telenor. Jeg er utdannet innen informatikk, teknologiledelse og innovasjon ved TU Delft, NTNU/MIT og NHH."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Hva er hverdagslykke for deg?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Å starte dagen med en god kopp kaffe og tid til å tenke litt, gode menneskemøter i og utenfor jobb, å kjenne at jeg blir nysgjerrig og får lyst til å finne ut mer, en tur ut i sola, å lære noe nytt, et ryddig hus, en ryddig pult og et ryddig hode, at barna mine har det bra, å få et kompliment… Det kan være så mye."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Hvilken type er du på arbeidsplassen?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hun med den litt rotete pulten som rydder i sitt eget hode gjennom samtale med andre. Hun som samler informasjon via andre, tenker litt for seg selv og kommer tilbake med forslag. Hun som liker å fly høyt oppe, ha oversikt over helheten og er takknemlig for litt hjelp til å å dra ting ned."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Hva ønsker du å oppnå som CTO i Capra?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det viktigste akkurat nå er å få oversikt over fagområdene våre og hvilke lavthengende frukter vi kan høste for å styrke miljøene vi har og gjøre dem mer synlige hos kundene våre og i markedet. Etter hvert må Capra bli best i verden på fagledelse slik at vi velger riktige områder å satse på og gjør de riktige tingene for å utvikle disse områdene."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Hva er det viktigste du har lært?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"At jeg aldri blir utlært - og at det alltid finnes noen med et annet perspektiv enn meg som det er verdt å lytte til. :-)"}]}],"tags":["Capra folk"]}
{"_type":"post","_createdAt":"2022-02-08T00:00:00.000+01:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/ny-salgsansvarlig-i-capra.webp"},"title":"Ny salgsansvarlig i Capra","author":"Rikke Løngaard","subtitle":"Oliver Breen (28) tar over hovedansvaret for kundeutvikling, salg, leveranse og bemanning av konsulenttjenester i Capra.","description":"Oliver Breen (28) tar over hovedansvaret for kundeutvikling, salg, leveranse og bemanning av konsulenttjenester i Capra.","publishedAt":"2022-02-08T00:00:00.000+01:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Oliver startet i Capra i 2018 og har siden jobbet som forretningsutvikler, Key Account Manager og er ansattvalgt styremedlem i Capra. Han har en utdanning fra Handelshøyskolen BI med en fordypning i forretningsutvikling og teknologi, og har tidligere erfaring fra rekruttering og forretningssystemer. Nå overtar han hovedansvaret for kundeutvikling, salg, leveranse og bemanning for konsulenttjenester i Capra."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"– Jeg gleder meg mest til å fortsette og lære mer om Capra, markedet og bransjen. Ansvaret jeg har fått tar jeg på det største alvor. Å hjelpe kunder med å nå sine ambisjoner og mål gjennom teknologi, og å være først og fremst en partner og ikke kun leverandør er og blir viktig fremover. Våre eksisterende partnerskap skal vi også maksimalisere verdiskapningen for, sier Oliver Breen og fortsetter:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"– Og så er jeg veldig glad for at jeg vil fortsette å jobbe med, støtte og rådgi de utrolig flinke kollegaene mine. Vi jobber godt sammen som et team."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Capra har i dag team fremfor ledere som er organisert i en ledergruppe. I det nye salgsteamet som Oliver leder vil man ha en tettere og bredere involvering av konsulenter i kundeutvikling og salgsprosessen. Ved å involvere konsulentene vil man sørge for gode tekniske alibi og god forståelse av konsulentens hverdag."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"– Jeg tror å involvere en håndfull av konsulentene vil skape merverdi for våre kunder, teamet og for alle de andre som søker drømmeoppdraget i Capra. Å involvere konsulenter vi gi oss mye innsikt til å kunne enda bedre forstå behovet til kundene våre og på den måten skape enda mer merverdi. Siden vi ikke har en ledergruppe vi rapporterer til, gleder jeg meg til å bygge et team som har stort mandat til å videreutvikle etablerte praksiser og metoder, og gi kundene konsulenttjenester på et nytt nivå."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I forbindelse med at Kjetil trer over i en ny rolle internt, har Oliver imidlertid fått tid til å forberede seg til sin nye rolle."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"– Det har ligget litt i kortene at jeg skulle få mer ansvar. Jeg har brukt mye tid på å øke min kunnskap om samtlige kundeforhold, og har lagt mye tid i det å lære konsulentene våre å kjenne. Det siste halve året har jeg uformelt tatt meg mer og mer av kollegaene mine, og det føltes derfor bra å få en formell rolle som innebærer å sørge for at de har det bra på jobb. Jeg trives fantastisk godt i Capra, og det at jeg får en slik mulighet internt er en liten karrieredrøm som går i oppfyllelse, sier Oliver."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Oliver har allerede planene klare om hvordan han og teamet skal lykkes fremover."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"– Vi kommer til å øke fokuset på måling av kunde- og konsulenttilfredshet, for å sørge for at kundene er fornøyde og at konsulentene er topp motiverte i oppdrag. Vi fortsetter å implementere bruken av OKRs i teamet for å sette oss mål . Utover det har vi selvsagt merkantile mål vi skal levere på. Jeg forventer også at man ved hjelp av den unike teamstrukturen og mandatet som følger med den, kan involvere hele selskapet i arbeidet med kunder. Slik tror jeg vi fortsetter og lykkes, samt videreutvikler kunder, salg leveranse og bemanning."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Med ansettelsen av Oliver i ny rolle er vi sikret en god etterfølger etter Kjetil Thorbjørnsen, som har vært ansvarlig for salgsavdelingen siden 2010 og som skal bryne seg på andre utfordringer i Capra."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"– Oliver har jobbet med strategisk kundeutvikling i flere år, og han passer til å ta helhetsansvar for salg og forretningsutvikling i Capra. Han kommer inn som en senior, og skal ta dette videre. Jeg er glad for at Oliver var villig til å ta denne jobben, og dette ansvaret, sier Kjetil."}]}],"tags":["Capra folk"]}
{"_type":"post","_createdAt":"2020-06-25T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/js-hero.webp"},"title":"Nyheter i JavaScript - ES2020","author":"Gaute Meek Olsen","subtitle":"I juni 2020 kom det en håndfull nye features i JavaScript-språket.","description":"I juni 2020 kom det en håndfull nye features i JavaScript-språket. Les mer om dem her >>","publishedAt":"2020-06-25T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"TLDR - To Long, Didn't Read"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hvis du ikke ønsker å lese hele artikkelen, så har jeg samlet de viktigste endringene i dette bildet."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/nyheter-i-javascript-es2020.webp","alt":"Oppsummering av kode"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Bakgrunn"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Ecma International er ansvarlig for å standardisere JavaScript. Dermed lager de ECMAScript spesifiseringen, så hvis noen omtaler ECMAScript kan du tenke på dette som et synonym til JavaScript. Siden 2015 har de begynt å komme med årlige utgaver. Dette har ført til at vi omtaler hver utgave med årstallet, altså ECMAScript 2015 forkortes til ES2015. Men det er fortsatt mange som bruker nummeret til hvor mange utgaver som er utgitt, altså ES6 er synonymt med ES2015. Framtidige endringer som enda ikke er utgitt vil omtales som ESNext."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Nå i juni ble ECMAScript 2020/ES2020/ES11 utgitt og endringene er allerede implementert i moderne nettlesere. La oss se på hvilke nye fordeler dette gir oss."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Nullish coalescing"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hvis du ønsker å sette en verdi, men ønsker en default verdi i tilfelle den er "},{"_type":"span","marks":["code"],"text":"null"},{"_type":"span","marks":[],"text":" eller "},{"_type":"span","marks":["code"],"text":"undefined"},{"_type":"span","marks":[],"text":", kan du benytte "},{"_type":"span","marks":["code"],"text":"??"},{"_type":"span","marks":[],"text":"."}]},{"_type":"code","code":"const name = person.fullName ?? 'anonymous';\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her vil "},{"_type":"span","marks":["code"],"text":"name"},{"_type":"span","marks":[],"text":" bli \"anonymous\" hvis objektet person ikke har fått "},{"_type":"span","marks":["code"],"text":"fullName"},{"_type":"span","marks":[],"text":" satt. Hvis person har en verdi for "},{"_type":"span","marks":["code"],"text":"fullName"},{"_type":"span","marks":[],"text":", vil den verdien bli skrevet til "},{"_type":"span","marks":["code"],"text":"name"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Du tenker kanskje at dette er noe du alltid har hatt mulighet til med "},{"_type":"span","marks":["code"],"text":"||"},{"_type":"span","marks":[],"text":". Dette vil fungere nesten likt, for hvis verdien før "},{"_type":"span","marks":["code"],"text":"||"},{"_type":"span","marks":[],"text":" er falsy, vil ikke evalueringen short-circuit-e og neste verdi brukes. Men husk tom streng "},{"_type":"span","marks":["code"],"text":"''"},{"_type":"span","marks":[],"text":", "},{"_type":"span","marks":["code"],"text":"0"},{"_type":"span","marks":[],"text":", "},{"_type":"span","marks":["code"],"text":"NaN"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["code"],"text":"false"},{"_type":"span","marks":[],"text":" vil være falsy og gi default verdi, noe som kanskje ikke ønskes hvis det er meningen å skulle kunne tildele disse verdiene. "},{"_type":"span","marks":["code"],"text":"??"},{"_type":"span","marks":[],"text":" benytter heller nullish, som sjekker kun for "},{"_type":"span","marks":["code"],"text":"null"},{"_type":"span","marks":[],"text":" eller "},{"_type":"span","marks":["code"],"text":"undefined"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Optional chaining"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hvis du ønsker å benytte properties nøstet i flere nivåer i et objekt, så har du tidligere måtte sjekke at disse ikke er "},{"_type":"span","marks":["code"],"text":"null"},{"_type":"span","marks":[],"text":" eller "},{"_type":"span","marks":["code"],"text":"undefined"},{"_type":"span","marks":[],"text":" for at koden ikke skal kræsje. Nå kan vi benytte "},{"_type":"span","marks":["code"],"text":"?."},{"_type":"span","marks":[],"text":" før vi aksesserer propertien slik at koden bak kun brukes hvis verdien ikke er "},{"_type":"span","marks":["code"],"text":"null"},{"_type":"span","marks":[],"text":" eller "},{"_type":"span","marks":["code"],"text":"undefined"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Se for deg at vi har et hus med en eier, som igjen har et kjæledyr. Her må vi passe på at house, owner og pet har en verdi, eller sjekke på forhånd for å unngå feilmeldingen \"Cannot read property 'type' of null\". Her kan du se hvordan vi har måtte håndtert dette før og etter ES2020."}]},{"_type":"code","code":"const house = { owner: { name: 'Jim', pet: null }};\n\n// Old JavaScript\nif(house && house.owner && house.owner.pet && house.owner.pet.type === 'dog'){\n  console.log('owner has a dog');\n}\n\n// ES2020\nif (house?.owner?.pet?.type === 'dog') {\n  console.log('owner has a dog');\n}\n","language":"js"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Promise.allSettled"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hvis vi har flere asynkrone kall som kjører i parallell, så har vi kunnet samlet disse med "},{"_type":"span","marks":["code"],"text":"Promise.all"},{"_type":"span","marks":[],"text":". Men denne vil få en exception hvis ett av de asynkrone kallene feiler. Hva om vi ønsker å la alle kallene gjøre seg ferdig uansett om noen feiler eller ikke. Med "},{"_type":"span","marks":["code"],"text":"Promise.allSettled"},{"_type":"span","marks":[],"text":" vil den returnere når alle asynkrone kall er ferdige, enten de er oppfylt eller avvist."}]},{"_type":"code","code":"const promises = [fetch('/succeeds'), fetch('/fails')];\nconst [result1, result2] = await Promise.allSettled(promises);\n","language":"js"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"matchAll"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hvis du skal bruke regex for å finne alle forekomster av et regular expression treff, så har du tidligere kunne bruke "},{"_type":"span","marks":["code"],"text":"match"},{"_type":"span","marks":[],"text":" for å få alle delstrengene. Men hva om du ønsker både delstrengen og indeksen. Da kan du bruke "},{"_type":"span","marks":["code"],"text":"matchAll"},{"_type":"span","marks":[],"text":" og iterere over treffene."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"La oss finne alle tall i en tekst."}]},{"_type":"code","code":"const matches = 'Her kommer noen tall: 5 12 88'.matchAll(/\\d+/g);\nfor (const match of matches) {\n  console.log(match);\n}\n\n// Output:\n// [\"5\", index: 22, input: \"Her kommer noen tall: 5 12 88\", groups: undefined]\n// [\"12\", index: 24, input: \"Her kommer noen tall: 5 12 88\", groups: undefined]\n// [\"88\", index: 27, input: \"Her kommer noen tall: 5 12 88\", groups: undefined]\n","language":"js"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"BigInt"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["code"],"text":"BigInt"},{"_type":"span","marks":[],"text":" er en ny primitive data type i JavaScript, på lik linje med "},{"_type":"span","marks":["code"],"text":"Boolean"},{"_type":"span","marks":[],"text":", "},{"_type":"span","marks":["code"],"text":"Number"},{"_type":"span","marks":[],"text":", "},{"_type":"span","marks":["code"],"text":"String"},{"_type":"span","marks":[],"text":", "},{"_type":"span","marks":["code"],"text":"Symbol"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["code"],"text":"undefined"},{"_type":"span","marks":[],"text":". "},{"_type":"span","marks":["code"],"text":"BigInt"},{"_type":"span","marks":[],"text":" kan håndtere tall over "},{"_type":"span","marks":["code"],"text":"Number"},{"_type":"span","marks":[],"text":" sin safe integer limit. Det vil si hvis vi ønsker å håndtere tall som kan være større enn 9_007_199_254_740_991, så er det lurt å bruke "},{"_type":"span","marks":["code"],"text":"BigInt"},{"_type":"span","marks":[],"text":". "},{"_type":"span","marks":["code"],"text":"BigInt"},{"_type":"span","marks":[],"text":" vil være representert med en n på slutten av tallet."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"La oss plusse på 2 på tallet 9_007_199_254_740_991, korrekt tall skal da slutte med sifferet 3."}]},{"_type":"code","code":"9_007_199_254_740_991 + 2; // 9007199254740992\nBigInt(9_007_199_254_740_991) + BigInt(2) // 9007199254740993n\n","language":"js"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Dynamic import"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Før har vi kun hatt mulighet til å importe moduler statisk på toppen av filen. Nå med dynamic imports har vi muligheten til å gjøre dette hvor som helst i koden on-demand og kun når vi trenger det. "},{"_type":"span","marks":["code"],"text":"import()"},{"_type":"span","marks":[],"text":" vil returnere en promise med modulen."}]},{"_type":"code","code":"const module = await import('module');\n","language":"js"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Module namespace exports"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Ved import og export av JavaScript-moduler har vi i de fleste situasjoner kunne gitt vårt eget navn til modulen. Slik som dette."}]},{"_type":"code","code":"import * as values from 'module';\nimport { value as v } from 'module';\n\nexport { v as value };\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Men vi har ikke hatt mulighet til å re-exporte noe fra en annen modul med en navneendring direkte. Men nå med ES2020 har vi muligheten til dette, slik:"}]},{"_type":"code","code":"export * as someUtils from 'utils';\n","language":"js"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"globalThis"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hvis du skriver kode som skal kunne kjøre i flere typer miljø, for eksempel både i en nettleser og på en Node server, så har de forskjellig navn på det globale objektet. Nettlesere bruker "},{"_type":"span","marks":["code"],"text":"window"},{"_type":"span","marks":[],"text":", Node bruker "},{"_type":"span","marks":["code"],"text":"global"},{"_type":"span","marks":[],"text":" og web workers bruker "},{"_type":"span","marks":["code"],"text":"self"},{"_type":"span","marks":[],"text":". Nå finnes "},{"_type":"span","marks":["code"],"text":"globalThis"},{"_type":"span","marks":[],"text":", som vil gi deg det korrekte globale objektet uansett miljø."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her er ett eksempel hvor vi ønsker å sjekke om vi kan gi en alert til brukeren. Hvis dette kjører på en nettside så vil globalThis referere til window, og alert vil være tilgjengelig."}]},{"_type":"code","code":"if (typeof globalThis.alert === 'function'){\n  alert('hei');\n}\n","language":"js"}],"tags":["Frontend","JavaScript"]}
{"_type":"post","_createdAt":"2021-08-05T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/js-hero.webp"},"title":"Nyheter i JavaScript - ES2021","author":"Gaute Meek Olsen","subtitle":"I juni 2021 kom det en håndfull med nye features i JavaScript språket.","description":"I juni 2021 kom det en håndfull med nye features i JavaScript språket. Les mer om dem her >>","publishedAt":"2021-08-05T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"TLDR - Too Long, Didn't Read"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hvis du ikke ønsker å lese hele artikkelen, så har jeg samlet de viktigste endringene i dette bildet."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/nyheter-i-javascript-es2021.webp","alt":"Oppsummering av kode"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Bakgrunn"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hvert år i juni så kommer det en ny utgave av ECMAScript som er spesifikasjonen av JavaScript. Dette tilfører nye features som kan brukes og gjør JavaScript bedre. I år ble ES2021, også kjent som ES12 sluppet. Og jeg skal gå gjennom hva som er nytt."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Numeric separators"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hvis koden din inneholder tall med mange siffer, kan de fort bli vanskelige å lese. Altså at man må telle nuller for å finne ut om det er en million eller ti millioner for eksempel. Nå er det tillatt å benytte underscore i tallet for å synliggjøre f.eks. tusen-deler."}]},{"_type":"code","code":"const hardToRead = 1000000000;\nconst easyToRead = 1_000_000_000;\nconsole.log(hardToRead === easyToRead); // Output: true\n\nconst decimal = 1.333_333;\n","language":"js"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"replaceAll"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Når man jobber med strings i JavaScript kommer det av og til behov for å bytte ut deler av teksten med noe annet. Tidligere har man kunnet benytte "},{"_type":"span","marks":["code"],"text":"replace"},{"_type":"span","marks":[],"text":" metoden, men denne bytter kun ut første forekomst. Dette har vi kunnet løst med regex med et globalt flagg. Nå har vi en ny metode kalt "},{"_type":"span","marks":["code"],"text":"replaceAll"},{"_type":"span","marks":[],"text":" slik at vi slipper å benytte regex hvis vi ikke vil."}]},{"_type":"code","code":"const apples = '🍏🍏🍏';\nconst oranges = apples.replaceAll('🍏', '🍊');\nconsole.log(oranges) // Output: 🍊🍊🍊\n","language":"js"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Promise.any"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hvis vi har flere asynkrone kall som kjører i parallell og vi ønsker å fortsette så fort et av dem er fullført, så har vi kunnet samlet disse med "},{"_type":"span","marks":["code"],"text":"Promise.race"},{"_type":"span","marks":[],"text":". Men denne vil fullføres uavhengig om det raskeste kallet feiler eller er suksessfullt. Hvis vi ønsker å vente til det første suksessfulle kallet er ferdig kan vi benytte "},{"_type":"span","marks":["code"],"text":"Promise.any"},{"_type":"span","marks":[],"text":"."}]},{"_type":"code","code":"try{\n  const promises = [fetch('/slow'), fetch('/fast')];\n  const first = await Promise.any(promises);\n}catch(error){\n  console.error('Every promise failed', error.errors);\n}\n","language":"js"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Logical assignment"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Du kjenner kanskje til de logiske operatorene "},{"_type":"span","marks":["code"],"text":"&&"},{"_type":"span","marks":[],"text":", "},{"_type":"span","marks":["code"],"text":"||"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["code"],"text":"??"},{"_type":"span","marks":[],"text":". Nå kan vi benytte disse til å assigne en variabel."}]},{"_type":"code","code":"x &&= y; \n// x is unchanged if it's falsy, otherwise y\n\nx ||= y;\n// x is unchanged if it's truthy, otherwise y\n\nx ??= y;\n// x is unchanged if it's null or undefined, otherwise y\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Dette kan virke ganske likt og det samme som dette:"}]},{"_type":"code","code":"x = x && y;\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Men de følger sine logiske operatorers short-circuiting. Som vil si at de assigner kun til variabelen hvis den logiske operatoren vil evaluere den høyre side. Så det er egentlig det samme som:"}]},{"_type":"code","code":"x && (x = y);\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Dette kan av og til ha noe å si siden en assignment kan føre til en side-effect. Dette er demonstrert i denne kodesnutten:"}]},{"_type":"code","code":"const obj = {\n  value: 0,\n  get y(){\n    return this.value;\n  },\n  set y(value){\n    console.log('side-effect');\n    this.value = value;\n  }\n}\n\nobj.y ??= 99; // no side-effect\nobj.y = obj.y ?? 99; // Output: side-effect\n","language":"js"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"WeakRef"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"JavaScript benytter seg av garbage-collect til å frigjøre minnet. Men så lenge noen har en referanse til objektet så kan det ikke bli garbage-collected og må bli holdt i minnet. Nå kan vi benytte "},{"_type":"span","marks":["code"],"text":"WeakRef"},{"_type":"span","marks":[],"text":" hvis vi synes det er greit at garbage-collector kan frigjøre objektet fra minnet hvis det trengs uten at vi har kontroll over det. Hvis det er blitt tømt fra minnet vil "},{"_type":"span","marks":["code"],"text":"deref()"},{"_type":"span","marks":[],"text":" returnere "},{"_type":"span","marks":["code"],"text":"undefined"},{"_type":"span","marks":[],"text":". Trengs det kontroll over når det blir tømt kan vi benytte "},{"_type":"span","marks":["code"],"text":"FinalizationRegistry"},{"_type":"span","marks":[],"text":" for å registrere en callback hvis objektet blir tatt av garbage-collector."}]},{"_type":"code","code":"const cacheRef = new WeakRef({ count: 0 });\n\nconst cache = cacheRef.deref();\nif(cache){\n  console.log(cache.count);\n}else{\n  console.log('cache object lost to garbage-collection');\n}\n\n// FinalizationRegistry let's you assign a callback if object is garbage-collected\nconst registry = new FinalizationRegistry((value) => {\n  console.log(value);\n});\nregistry.register(cacheRef.deref(), 'cacheRef is lost');\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Merk at dette er kode du ønsker å unngå hvis mulig, da bruk av "},{"_type":"span","marks":["code"],"text":"WeakRef"},{"_type":"span","marks":[],"text":" bør nøye tenkes ut. For når garbage-collector vil bli kjørt har vi liten innsikt i og kan være forskjellig i ulike nettlesere."}]}],"tags":["Frontend","JavaScript"]}
{"_type":"post","_createdAt":"2022-06-28T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/nyheter-i-javascript-es2022.webp"},"title":"Nyheter i JavaScript - ES2022","author":"Gaute Meek Olsen","subtitle":"I juni 2022 kom det en håndfull nye features i JavaScript.","description":"I juni 2022 kom det en håndfull nye features i JavaScript. Les mer >>","publishedAt":"2022-06-28T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"TLDR - Too Long, Didn't Read"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hvis du ikke ønsker å lese hele artikkelen, så har jeg samlet de viktigste endringene i denne kodeblokken. Les videre for forklaring."}]},{"_type":"code","code":"/* Top-level await */\nconst response = await fetch('https://www.capraconsulting.no/blogg');\n\n/* .at() */\nconst last = ['🐯', '🐥', '🦞'].at(-1);\n\n/* Error cause */\nnew Error('Some error', { cause: 'cause of error' });\n\n/* Object.hasOwn */\nObject.hasOwn({ myNumber: 5 }, 'myNumber');\n\n/* Regular expression /d flag */\n/Capra/d.exec('Hvor er Capra?').indices[0];\n\n/* New class elements */\nclass Robot {\n  static maxAge = 100;\n  #age = 10;\n}\n","language":"js"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Bakgrunn"}]},{"_type":"block","markDefs":[{"_key":"f71ab0a7f817","_type":"link","href":"https://tc39.es/process-document/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hvert år i juni, kommer det en ny utgave av ECMAScript som er spesifikasjonen av JavaScript. Det er TC39 kommiteen som er ansvarlig for å ta forslag fra ide til godkjenning, også kjent som stage 0 til 4 som er bedre forklart på "},{"_type":"span","marks":["f71ab0a7f817"],"text":"https://tc39.es/process-document/"},{"_type":"span","marks":[],"text":". Årets utgave vil da inkludere alle forslag som har nådd stage 4. I år ble ES2022, også kjent som ES13, sluppet med et knippe nye features som vi skal se på."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Top-level await"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I 2017 fikk vi "},{"_type":"span","marks":["code"],"text":"async"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["code"],"text":"await"},{"_type":"span","marks":[],"text":" i JavaScript for å enklere håndtere asynkron kode. Men det kom med begrensningen om at vi måtte bruke "},{"_type":"span","marks":["code"],"text":"await"},{"_type":"span","marks":[],"text":" inne i en "},{"_type":"span","marks":["code"],"text":"async"},{"_type":"span","marks":[],"text":" funksjon. Nå kan vi benytte "},{"_type":"span","marks":["code"],"text":"await"},{"_type":"span","marks":[],"text":" på rotnivå i moduler. Merk at med top-level "},{"_type":"span","marks":["code"],"text":"await"},{"_type":"span","marks":[],"text":" vil koden som kommer etter vente med å kjøre til den asynkrone koden har kjørt ferdig."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det er altså slutt på denne merkelige syntaksen for å kjøre koden direkte med "},{"_type":"span","marks":["code"],"text":"await"},{"_type":"span","marks":[],"text":"."}]},{"_type":"code","code":"(async () => {\n  const response = await fetch('https://github.com/');\n  console.log(await response.text());\n})();\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Og vi kan heller skrive det slik."}]},{"_type":"code","code":"const response = await fetch('https://github.com/');\nconsole.log(await response.text());\n","language":"js"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":".at() metode på Array og string"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Arrays og strings har fått en ny metode "},{"_type":"span","marks":["code"],"text":"at()"},{"_type":"span","marks":[],"text":" som tar inn et tall og returnerer elementet på den indexen. Men det er jo akkurat det samme som å benytte brackets tenker du kanskje nå. Det stemmer og jeg kommer fortsatt til å bruke det for det meste, men "},{"_type":"span","marks":["code"],"text":"at()"},{"_type":"span","marks":[],"text":" støtter negative indekser for å hente elementer fra slutten. Det har da f.eks. blitt mye enklere å hente siste element."}]},{"_type":"code","code":"const list = ['🐯', '🐥', '🦞'];\n// Old way was list[list.length - 1]\nconst last = list.at(-1); // 🦞\nconst first = list.at(0); // 🐯\n","language":"js"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Error cause"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det kjente "},{"_type":"span","marks":["code"],"text":"Error"},{"_type":"span","marks":[],"text":" objektet har fått en ny property "},{"_type":"span","marks":["code"],"text":"cause"},{"_type":"span","marks":[],"text":" som benyttes for å indikere årsaken til feilen. Det kan være nyttig for å fange en "},{"_type":"span","marks":["code"],"text":"Error"},{"_type":"span","marks":[],"text":" for så å kaste det videre med en mer spesifikk error melding. Verdien kan være av typen any, så du kan ikke gjøre antagelser for at den f.eks. er av typen "},{"_type":"span","marks":["code"],"text":"Error"},{"_type":"span","marks":[],"text":"."}]},{"_type":"code","code":"try {\n  const empty = {}\n  console.log(empty.not.existing)\n} catch (error) {\n  throw new Error('It failed', { cause: error });\n}\n","language":"js"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Object.hasOwn"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["code"],"text":"Object.hasOwn"},{"_type":"span","marks":[],"text":" kan benyttes for å sjekke om et property eksisterer på et objekt. Det er et mer beleilig alternativ til "},{"_type":"span","marks":["code"],"text":"Object.prototype.hasOwnProperty"},{"_type":"span","marks":[],"text":"."}]},{"_type":"code","code":"const object = {\n  myNumber: 5\n}\nconsole.log(Object.hasOwn(object, 'myNumber')); // true\nconsole.log(Object.hasOwn(object, 'nonExistent')); // false\n","language":"js"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"RegExp indekser flagg"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Regular expressions har fått et nytt flagg "},{"_type":"span","marks":["code"],"text":"/d"},{"_type":"span","marks":[],"text":" for å generere indekser for subtekster av dine treff. Slik vet du når teksten begynner og hvor den slutter."}]},{"_type":"code","code":"const match = /wolf/d.exec('strong wolf pack');\nconst [start, stop] = match.indices[0]; // [7, 11]\n","language":"js"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Nye klasseelementer"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I 2015 kom klasser til JavaScript, men det har ikke slått helt igjennom på samme måte som i andre språk. Kanskje var grunnen at det manglet blant annet private og statiske felter og metoder. Nå har hvertfall klassene fått seg en oppgradering."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Du kan opprette felter uten å gjøre det inne i en konstruktør."}]},{"_type":"code","code":"class Robot {\n  name = 'Optimus Prime';\n}\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Du kan benytte private felter og metoder, som ikke kan aksesseres fra utsiden. Dette gjøres med "},{"_type":"span","marks":["code"],"text":"#"},{"_type":"span","marks":[],"text":" som prefiks."}]},{"_type":"code","code":"class Robot {\n  #age = 0;\n\n  #increaseAge(addedYears) {\n    this.#age += addedYears;\n  }\n}\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Du kan benytte statiske felter og metoder med nøkkelordet "},{"_type":"span","marks":["code"],"text":"static"},{"_type":"span","marks":[],"text":". Dette kan gjøres i kombinasjon med private felter og metoder, men som statisk. I tillegg så har du mulighet til å lage en statisk blokk som vil kjøre når klassen opprettes, som vil si når JavaScript-filen kjøres, ikke når du initierer et objekt av klassen. Dette kan hjelpe deg med å sette statiske verdier mer programmatisk."}]},{"_type":"code","code":"class Robot {\n  static price = 999;\n  static #maxAge = 100;\n  static {\n    const isSale = new Date().getHours() < 10;\n    if(isSale) {\n      this.price = 50;\n    }\n  }\n  static #privateMethod() {\n    console.log('private static method called');\n  }\n  static publicMethod() {\n    console.log('public static method called');\n  }\n}\n\nconsole.log(Robot.price);\n","language":"js"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"in operator for private felter og metoder"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Siste nyhet er at vi kan benytte "},{"_type":"span","marks":["code"],"text":"in"},{"_type":"span","marks":[],"text":" operatoren for å sjekke om et privat felt eller metode er definert på klassen. Jeg er litt usikker på når man vil få bruk for det, men koden ser slik ut."}]},{"_type":"code","code":"class Robot {\n  #age = 0;\n  static hasAge(object){\n    return #age in object;\n  }\n}\n\nconst robot = new Robot()\nconsole.log(Robot.hasAge(robot)); // true\nconsole.log(Robot.hasAge({})); // false\n","language":"js"}],"tags":["Frontend","JavaScript"]}
{"_type":"post","_createdAt":"2023-08-23T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/js-hero.webp"},"title":"Nyheter i JavaScript - ES2023","author":"Gaute Meek Olsen","subtitle":"I år kom ECMAScript 2023, også kjent som ES14. Denne utgaven har lagt til en rekke forbedringer når man jobber med lister.","description":"I år kom ECMAScript 2023, også kjent som ES14. Denne utgaven har lagt til en rekke forbedringer når man jobber med lister.","publishedAt":"2023-08-23T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Bakgrunn"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hvert år i juni slippes en ny utgave av ECMAScript, altså spesifikasjonen til JavaScript. I år kom ECMAScript 2023, også kjent som ES14. Denne utgaven har lagt til en rekke forbedringer når man jobber med lister. Vi kan enklere finne innhold fra slutten med "},{"_type":"span","marks":["code"],"text":"findLast"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["code"],"text":"findLastIndex"},{"_type":"span","marks":[],"text":". Vi kan jobbe med kopier av listen i stedet for metoder som også ville mutert den originale listen, med "},{"_type":"span","marks":["code"],"text":"toSorted"},{"_type":"span","marks":[],"text":", "},{"_type":"span","marks":["code"],"text":"toReversed"},{"_type":"span","marks":[],"text":", "},{"_type":"span","marks":["code"],"text":"toSpliced"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["code"],"text":"with"},{"_type":"span","marks":[],"text":". Ellers har vi endringer som at "},{"_type":"span","marks":["code"],"text":"WeakMap"},{"_type":"span","marks":[],"text":" støtter nå den primitive typen "},{"_type":"span","marks":["code"],"text":"symbol"},{"_type":"span","marks":[],"text":". Og til slutt støtte for filer med hashbang på første linje for å angi programmet som skal kjøre filen."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Finn fra slutten"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Når man jobber med arrays har det tidligere vært vanskelig å finne et element fra slutten uten å inngå et kompromiss. Enten har vi ofte mutert listen eller gjort unødvendig kopiering."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Si at vi har en liste med tall og ønsker å finne siste partall."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Nå trenger vi ikke lengre å gjøre slik:"}]},{"_type":"code","code":"const array = [1, 2, 3, 4, 5]\nconst lastEven = [...array].reverse().find((n) => n % 2 === 0)\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Men kan benytte "},{"_type":"span","marks":["code"],"text":"findLast"},{"_type":"span","marks":[],"text":":"}]},{"_type":"code","code":"const array = [1, 2, 3, 4, 5]\nconst lastEven = array.findLast((n) => n % 2 === 0)\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hvis du ønsker å finne index i stedet for selve elementet kan du benytte "},{"_type":"span","marks":["code"],"text":"findLastIndex"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Endre liste med kopi"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Visste du at "},{"_type":"span","marks":["code"],"text":"sort"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["code"],"text":"reverse"},{"_type":"span","marks":[],"text":" vil både mutere listen og returnere den? Her er et eksempel med sortering."}]},{"_type":"code","code":"const array = [3, 2, 1]\nconst sorted = array.sort((a, b) => a - b)\nconsole.log(array) // [1, 2, 3]\nconsole.log(sorted) // [1, 2, 3]\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"For å unngå dette har vi brukt en workaround med å ta en kopi selv:"}]},{"_type":"code","code":"const array = [3, 2, 1]\nconst sorted = [...array].sort((a, b) => a - b)\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Nå har vi fått fire metoder som gir oss en kopi i stedet med "},{"_type":"span","marks":["code"],"text":"toSorted"},{"_type":"span","marks":[],"text":", "},{"_type":"span","marks":["code"],"text":"toReversed"},{"_type":"span","marks":[],"text":", "},{"_type":"span","marks":["code"],"text":"toSpliced"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["code"],"text":"with"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"toSorted"}]},{"_type":"code","code":"const array = [3, 2, 1]\nconst sorted = array.toSorted((a, b) => a - b)\n","language":"js"},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"toReversed"}]},{"_type":"code","code":"const array = [3, 2, 1]\nconst reversed = array.toReversed()\n","language":"js"},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"toSpliced"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["code"],"text":"toSpliced(startÌndex, deleteCount, item1, item2, itemN)"}]},{"_type":"code","code":"const array = [1, 100, 3]\nconst counting = array.toSpliced(1, 1, 2)\nconsole.log(counting) // [1, 2, 3]\n","language":"js"},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"with"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["code"],"text":"with"},{"_type":"span","marks":[],"text":" metoden vil returnere en kopi av listen og bytter ut elementet på en gitt indeks."}]},{"_type":"code","code":"const array = [10, 2, 3]\nconst counting = array.with(0, 1)\nconsole.log(counting) // [1, 2, 3]\n","language":"js"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Symboler i WeakMap, WeakSet og WeakRef"}]},{"_type":"block","markDefs":[{"_key":"e870a8cff691","_type":"link","href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap"},{"_key":"2bd424fbdd2b","_type":"link","href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet"},{"_key":"14ec9eb7f05d","_type":"link","href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakRef"},{"_key":"ba4096dfdf7f","_type":"link","href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry"}],"style":"normal","children":[{"_type":"span","marks":["code"],"text":"symbol"},{"_type":"span","marks":[],"text":" er en primitiv type i JavaScript som gir garanti for at den er unik. Nå er symboler også tillatt som nøkler i en "},{"_type":"span","marks":["e870a8cff691"],"text":"WeakMap"},{"_type":"span","marks":[],"text":" og verdier i "},{"_type":"span","marks":["2bd424fbdd2b"],"text":"WeakSet"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["14ec9eb7f05d"],"text":"WeakRef"},{"_type":"span","marks":[],"text":". Og kan dermed også registreres i "},{"_type":"span","marks":["ba4096dfdf7f"],"text":"FinalizationRegistry"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Disse brukes for å holde på verdier som kan bli tatt av garbage collectoren. Altså at vi har en referanse til noe som vi sier at hvis JavaScript trenger å rydde opp i minnet, så går det fint at vi mister denne dataen. Disse har tidligere ikke støttet symboler, men det er nå mulig."}]},{"_type":"code","code":"const symbol = Symbol('my-symbol')\n\n/* symbol as key */\nconst weakMap = new WeakMap()\nweakMap.set(symbol, 10)\nconsole.log(weakMap.get(symbol))\n\n/* symbol as entry */\nconst weakSet = new WeakSet()\nweakSet.add(symbol)\nconsole.log(weakSet.has(symbol))\n\nconst weakRef = new WeakRef(symbol)\nconsole.log(weakRef.deref())\n\nconst registry = new FinalizationRegistry((value) => {\n  console.log(value)\n})\nregistry.register(symbol, 'weakRef is lost')\n","language":"js"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Hashbang"}]},{"_type":"block","markDefs":[{"_key":"3a224f326b72","_type":"link","href":"https://en.wikipedia.org/wiki/Shebang_(Unix)"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hashbang, også kjent som "},{"_type":"span","marks":["3a224f326b72"],"text":"Shebang"},{"_type":"span","marks":[],"text":" er når første linje i filen starter med "},{"_type":"span","marks":["code"],"text":"#!"},{"_type":"span","marks":[],"text":", som ikke er gyldig JavaScript, men den blir da ignorert når koden kjøres. Slik hashbang/shebang benyttes til å peke på hvilket program som skal kjøre filen. Du kan altså starte JavaScript filen med f.eks. "},{"_type":"span","marks":["code"],"text":"#!/usr/bin/env node"},{"_type":"span","marks":[],"text":" eller "},{"_type":"span","marks":["code"],"text":"#!/usr/bin/env -S deno run"},{"_type":"span","marks":[],"text":" for å angi Node eller Deno."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Si at vi lager filen hello.js:"}]},{"_type":"code","code":"#!/usr/bin/env node\n\nconsole.log('👋')\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I stedet for å kjøre filen med"}]},{"_type":"code","code":"node hello.js\n","language":"sh"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Trenger vi kun å angi filen slik:"}]},{"_type":"code","code":"./hello.js\n","language":"sh"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Merk at dette kun er mulig på Unix lignende operativsystemer. Det fungerer altså ikke på Windows."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Dette har vært mulig tidligere også, men endringen i ES2023 er at det er JavaScript enginen som vil ignorere linjen slik at JavaScript runtimen slipper."}]}],"tags":["Frontend","JavaScript"]}
{"_type":"post","_createdAt":"2020-06-04T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/obskure-feil-krever-obskure-losninger.webp"},"title":"Obskure feil krever obskure løsninger","author":"Håkon Meyer Tørnquist","description":"Hva gjør du når alle lamper lyser rødt, og du ikke klarer å finne ut av hvorfor? Les hvordan vi jobber med feilsøking  >> ","publishedAt":"2020-06-04T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[{"_key":"001abc4fcd72","_type":"link","href":"https://medium.com/dataseries/the-rise-and-fall-of-knight-capital-buy-high-sell-low-rinse-and-repeat-ae17fae780f6"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"I blant dukker det opp bugs i produksjon. Noen ganger er det alvorlige feil som truer en hel "},{"_type":"span","marks":["001abc4fcd72"],"text":"organisasjons eksistens"},{"_type":"span","marks":[],"text":", andre ganger har du ved et uhell lagt ut hjelpeteksten i appen din på tysk. For å unngå de mest voldsomme konsekvensene, er det lurt å holde et øye med appene dine, men hva gjør du når alle lamper lyser rødt, og du ikke klarer å finne ut av hvorfor?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Jeg sitter på et produktteam som eier og drifter rundt 30 JavaScript-applikasjoner. Vi monitorerer dem ved hjelp av et hjemmesnekret bibliotek som logger eventuelle feil til en tjeneste som gjør meldingene søk- og indekserbare i loggverktøyet vårt. I området vi sitter i har vi en skjerm som viser et live-dashboard i form av et rutenett, hvor hver rute viser antall unike brukere som har utløst feil i en gitt applikasjon inneværende døgn. Med opp til 20 000 unike brukere i døgnet er vi sjelden i null på alle rutene, men ved å fargekode dem til å skifte farge - fra grønn, via gul, til rød - etter et visst antall feil, får vi raskt overblikk om feilraten går utover det normale."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Etter en større modernisering av biblioteket vi bruker for å gjøre HTTP-kall begynte vi å legge merke til at en del av applikasjonene logget et mye høyere antall feil enn de pleide. Vi sjekket loggene, og så at en stor andel av feilene hadde oppstått uten at noe hadde gått galt backend. Nettleserne logget dem som en “TypeError”, sammen med en generisk melding om et kall hadde gått galt. Meldingene var attpåtil både nettleser- og lokasjonsspesifikke, så her var det lite å hente."}]},{"_type":"block","markDefs":[{"_key":"adc845fcd513","_type":"link","href":"https://no.wikipedia.org/wiki/Red_herring"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi slet med å reprodusere feilene i testmiljøene våre, og hadde heller ingen tilbakemeldinger fra brukere som sa de opplevde feil, og var på dette tidspunktet litt i villrede. Vi mistenkte at dette ikke var feil som var synlige for sluttbrukerne, men problemet var at de fremdeles ble logget, som gav oss vanskeligheter med å se de "},{"_type":"span","marks":["em"],"text":"faktiske"},{"_type":"span","marks":[],"text":" feilene blant alle de "},{"_type":"span","marks":["adc845fcd513"],"text":"røde sildene"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[{"_key":"baa76e6c6e06","_type":"link","href":"https://bugzilla.mozilla.org/show_bug.cgi?id=1280189"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"I mangel på informasjon om enkeltfeilene, begynte vi å se mer nøye på brukerne det gjaldt. Det var få mønstre å se når det kom til nettleser eller operativsystem, men det viste seg at når en bruker opplevde feilen, var det ofte det siste de gjorde i en applikasjon, før de enten forsvant fra loggene helt, eller navigerte til en annen applikasjon. Dette er en situasjon hvor nettleserne er "},{"_type":"span","marks":["baa76e6c6e06"],"text":"beryktet"},{"_type":"span","marks":[],"text":" for å kaste generiske feil. Vi forsøkte å reprodusere feilen i den applikasjonen som opplevde den mest, og denne gangen hadde vi mer flaks. Når vi navigerte bort, eller avbrøt lastingen av siden før alle kallene var ferdige, dukket det umiddelbart opp feil i loggene våre."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Nå hadde vi en god anelse om rotårsaken, neste steg var å få fikset problemet. Én løsning er å “hviteliste” disse feilene og ikke logge dem, men det at de kommer i veldig mange forskjellige varianter avhengig av nettleser og språk, gjør dette til en løsning som skalerer dårlig. Vi ville dessuten ikke risikere å la være å logge faktiske feil brukerne opplever. Vi kunne ha forsøkt å bytte ut nettlesernes innebygde fetch-implementasjon med noe annet som gir bedre feilmeldinger, som axios, men det var en større teknisk avgjørelse vi helst ville unngå om vi kunne. Den hovedmistenkte bak feilen ble også opphav til den initielle løsningen: Nettleseren."}]},{"_type":"block","markDefs":[{"_key":"97b3a970cdb5","_type":"link","href":"https://developers.google.com/web/updates/2018/07/page-lifecycle-api"},{"_key":"306e4126af58","_type":"link","href":"https://developers.google.com/web/updates/2018/07/page-lifecycle-api"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"En nettside som lastes går gjennom det som kalles en "},{"_type":"span","marks":["97b3a970cdb5"],"text":"sidesyklus"},{"_type":"span","marks":[],"text":". Denne syklusen eksponerer en haug av events du kan lytte og reagere på, som “load”, som trigges når siden har lastet inn, eller “focus”, som trigges når den aktuelle siden får fokus. Eventene som er sentrale her, er tre events som trigges nær slutten av sidesyklusen; "},{"_type":"span","marks":["em"],"text":"pagehide"},{"_type":"span","marks":[],"text":", "},{"_type":"span","marks":["em"],"text":"beforeunload"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["em"],"text":"unload"},{"_type":"span","marks":[],"text":". En liten advarsel: Hvis du kan unngå det, ikke bruk dem til noe, og iallfall ikke til noe viktig. Oppførselen og timingen deres er notorisk inkonsistent på tvers av nettlesere og enhetstyper, og visse nettlesere støtter dem ikke i det hele tatt. Når det er sagt, kan de hjelpe deg til å gjøre visse antagelser om brukeren. At minst én av dem har blitt utløst, betyr - veldig enkelt forklart - at den aktuelle brukeren er på vei bort fra siden. Det er et par andre forholdsregler man bør ta, som kan leses om "},{"_type":"span","marks":["306e4126af58"],"text":"her"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi la inn lyttere på disse eventene, og registrerte hvilke events brukeren haddde opplevd når en feil oppstod. Vi fant at 90% av feilene ble trigget av brukere som hadde opplevd minst ett av eventene, og valgte å logge disse som “warn”-feil i stedet for “error”. Dashboardet vårt ble umiddelbart grønnere, som igjen gav oss mye bedre mulighet til å se mønstre i de 10 resterende prosentene."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Dette er fremdeles ikke en fullverdig løsning på problemet. Vi plukker ikke opp alle, og det er en form for spesialhåndtering det bør være minst mulig av i et robust system, men gitt de tekniske rammene vi opererer innenfor og verktøy vi har tilgang til, var dette en veldig rask og enkel måte å få ny data om brukeren og forenkle feilsøkingsarbeidet vårt på."}]}],"tags":["Meninger","Frontend"]}
{"_type":"post","_createdAt":"2022-02-21T00:00:00.000+01:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/oppgradere-aks-via-azure-function/hero.webp"},"title":"Oppgradere AKS via Azure Function","author":"Mina Farrokhnia","subtitle":"En kort introduksjon til bruk av Azure Functions for automatisk oppgradering av Azure Kubernetes Service.","description":"En kort introduksjon til bruk av Azure Functions for automatisk oppgradering av Azure Kubernetes Service","publishedAt":"2022-02-21T00:00:00.000+01:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Alle som driver med drift innen IT, vet hvor viktig det er med automatisering av prosesser. Oppgradering av Kubernetes er et eksempel på en tilbakevendende oppgave som kan ta opp mye tid. For hver ny versjon skal oppgraderingene gjøres i en bestemt rekkefølge: først utvikler-miljøet, deretter diverse testmiljøer, osv. Til sist skal produksjonsmiljøet oppgraderes, gjerne etter en vilkårlig utsettelsesperiode."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Kubernetes på Azure (AKS) er en kritisk del av infrastruktur til Entur AS. De har flere miljøer fordelt over ulike AKS clusters. Nettopp derfor trengte de en løsning for å automatisere kubernetes oppgradering på miljøer. Automatiseringen sørger for at oppgraderingene ikke bare blir gjort på riktig tidspunkt, men også uten sjansen for menneskelig feil."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det skal nevnes at Azure tilbyr Upgrade-Channel og maintenance windows for automatisk oppgradering av Azure Kubernetes Services(AKS), men problemet med det er at vi ikke kan styre rekkefølgen på oppgradering av miljøer. Med det kan vi risikere at prod-miljø oppgraderes før dev og test, noe vi ikke ønsker. Derfor implementerte jeg egen løsning for det. Min løsning tar hensyn til blant annet avhengigheten på rekkefølge mellom miljøene, samt krav om oppgradering på spesifikke ukedager og tidspunkter."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Azure Functions"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Azure Functions er Microsoft sin løsning for serverless i Azure. Funksjonene kjører gjennom Function App-ressurser, og støtter mange programmeringsspråk, bla. Python."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Noe som kjennetegner serverless er at applikasjonene kjøres opp kun når det er behov for det, og har typisk en kjøretid på et tidsrom målt i millisekunder. For å skrive funksjoner som opererer med tilstand (“state”) i et serverless miljø, introduserte Azure durable functions som en utvidelse av Azure Functions. Med dette kan du definere arbeidsflyter som beholder en intern tilstand ved gjennom orchestrator functions - kode som beskriver hvordan funksjonene utføres og i hvilken rekkefølge den skal eksekveres."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Man kan bruke durable functions til å understøtte flere ulike typer designmønstre. I mitt tilfelle ønsker jeg å bruke function chaining, dvs. å utføre en sekvens av funksjoner i en bestemt rekkefølge: Output fra én funksjon kan brukes som input til en annen funksjon hvis det er behov."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"En grunnleggende Durable Function inneholder:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Orchestrator function: Holder styr på arbeidsflyten ved å orkestrere andre funksjoner."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Activity function: Utfører arbeid, og returnerer eventuelt et resultat. Disse kalles opp av orchestrator function."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Client function: En vanlig Azure function som starter en orchestrator function. Dette er “inngangsdøren” til hele arbeidsflyten."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Implementasjon"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Jeg har laget følgende Function App i Azure via terraform, som vi skal gå gjennom:"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/oppgradere-aks-via-azure-function/terraform.webp","alt":"Terraform kode"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"For å skrive durable function har jeg valgt Python som programming språk. Som IDE bruker jeg Visual Studio Code. Det har god støtte for Azure Functions gjennom Microsoft sin utvidelse for Azure Functions. Azure-dokumentasjonen har gode eksempler slik at du kan komme i gang raskt med å lage din første funksjon."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Som client function, har jeg brukt en timer trigger. Den tar cron expression (et uttrykk som angir en tidsplan) som input og kaller opp orchestrator function på spesifikke tidspunkter."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Orchestrator function, som er ansvarlig for å sette i gang oppgradering av AKS basert hvilken uke dag er, sender miljønavn som input til en activity function. Denneutfører så oppgradering på det angitte miljøet basert på input som den får. Den går først gjennom subscriptions og resource groups basert på miljønavn, og gjør så oppgradering på AKS i henhold til den siste tilgjengelige stabile versjonen."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"For eksempel, hvis det er mandag i dag, så settes det i gang en activity function med en “sandbox” som input. Denne oppgraderer så AKS for sandkassemiljøet. Tirsdagen sendes det en forespørsel for oppgradering av utviklermiljøet, osv."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"For å understøtte kravet om at vi ikke oppgraderer produksjonsmiljøet til en versjon som ikke har blitt testet først, har jeg laget to litt ulike activity functions. Den første gjør oppgradering basert på den nyeste stabile versjonen som er tilgjengelig fra Azure, og lagrer senere denne versjonen til en Azure Storage Table. Den andre funksjonen henter ut denne versjonen og oppgraderer andre miljøer. Slik sikrer vi at alle versjoner først rulles ut i testmiljøet, og ikke minst at alle miljøene havner på samme versjon."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Oppsummering"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det er viktig å holde programvare oppdatert, både for å motta sikkerhetsoppdateringer og for å få ny funksjonalitet. Azure Function app er en enkel og kostnadseffektiv tjeneste som kan hjelpe deg med å automatisere prosesser. Nå har du lært hvordan du kan bruke det for å automatisere oppgradering av AKS."}]},{"_type":"block","markDefs":[{"_key":"8f9bd87267ab","_type":"link","href":"https://github.com/Mina69/AKSAutoUpgrade"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her kan du finne kildekoden: "},{"_type":"span","marks":["8f9bd87267ab"],"text":"Mina69/AKSAutoUpgrade (github.com)"}]}],"tags":["Azure","Python"]}
{"_type":"post","_createdAt":"2023-01-12T00:00:00.000+01:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/pipelines-mer-enn-bare-ci-cd/hero.webp"},"title":"Pipelines - mer enn bare CI/CD","author":"Mina Farrokhnia","subtitle":"De kan brukes til mye mer.","description":"De kan brukes til mye mer.","publishedAt":"2023-01-12T00:00:00.000+01:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"De fleste av oss har med årene blitt godt kjent med bruk av automatisering for å understøtte smidig utvikling. Verktøyene som hjelper oss med dette blir stadig bedre, og enhver plattform med respekt for seg selv tilbyr nå sin egen løsning for automatisering. Ofte kaller vi bare dette for “pipelines”. Men disse verktøyene har en rekke andre bruksområder utover bygg, test og deployment."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Noen andre bruksområder for pipelines er:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Deployment av både infrastruktur og applikasjon"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Backup"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Bygge dokumentasjon: dokumentasjon som kode f.eks via AsciiDoc/Antora"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Kjøre bots (Renovate): sender PR for nye versjoner, Vulnerability scanning"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I denne artikkelen ser vi nærmere på en av disse bruksområdene, Backup, noe som er en kritisk del av vårt daglige arbeid i IT."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I eksempelet her, skal vi kjøre en daglig backup av DNS-soner ved å bruke CloudBuild som er en serverless CI/CD plattform i GCP(Google Cloud Platform) og noen andre ressurser. Vi har flere prosjekter som skiller hvert miljø. Under hvert prosjekt har vi Cloud DNS som inkluderer DNS-soner og DNS-records for hvert miljø. Oppgaven er å ta en daglig backup av alle DNS-soner og lagre dem på en Storage."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/pipelines-mer-enn-bare-ci-cd/arkitektur.webp","alt":"Arkitektur diagram"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n  "},{"_type":"span","marks":[],"text":"Slik ser arkitekturen"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Ressursene som har blitt brukt inkluderer:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Cloud Scheduler"},{"_type":"span","marks":[],"text":": Å triggere  CloudBuild hver dag på et bestemt tidspunkt."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"CloudBuild trigger"},{"_type":"span","marks":[],"text":": Å kjøre backup script på alle prosjekter og lagre det på en lagringsplass."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"CloudStorage"},{"_type":"span","marks":[],"text":": Her bruker jeg to storage buckets:\n1. Lagring av CloudBuild logger\n2. Lagring av backup filer"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"ServiceAccount"},{"_type":"span","marks":[],"text":": Gi nødvendig tilgang til CloudBuild."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Github repo"},{"_type":"span","marks":[],"text":": Inneholder infrastruktur scripts og backup script."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Bash script"},{"_type":"span","marks":[],"text":": script som kjører backup process."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Terraform"},{"_type":"span","marks":[],"text":": Å implementere nødvendige ressurser på GCP."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Atlantis"},{"_type":"span","marks":[],"text":": For å kjøre terraform automatisk etter at en PR er opprettet."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Cloud-planleggingsjobben vil utløse CloudBuild. Når CloudBuild blir utløst, går den gjennom jobbene som er definert for den på en yaml-fil."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Jobben vil kalle bash-skriptet for å kjøre backupprosessen. Dette skriptet går gjennom hvert prosjekt, finner Cloud DNS , går gjennom hver DNS-sone og eksporterer DNS-records. Da lagres de i en mappe under Cloud Storage. CloudBuild bruker en ServiceAccount som gir tilgang til å lese Cloud DNS-data under prosjektene og også kunne skrive data på Cloud-lagringene."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Backupen vi har lagret kan bli brukt for disaster recovery i tilfelle CloudDNS går ned. Da kan vi restore DNS records fra storage fort eller så kan vi overføre DNSer til en annen konto. Vi behøver bare kjøre import kommandoen "},{"_type":"span","marks":["code"],"text":"gcloud dns record-sets import pathto.zonefile --zone-file-format --zone=examplezonename)"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[{"_key":"9eedbfc33d20","_type":"link","href":"https://github.com/Mina69/gcp-dnszones-backup"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Koden finner du her: "},{"_type":"span","marks":["9eedbfc33d20"],"text":"https://github.com/Mina69/gcp-dnszones-backup"}]},{"_type":"block","markDefs":[{"_key":"ba96daee6c05","_type":"link","href":"mailto:mfa@capraconsulting.no"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Har du andre måter å bruke pipeline? Send gjerne en "},{"_type":"span","marks":["ba96daee6c05"],"text":"e-post"},{"_type":"span","marks":[],"text":" om du har spørsmål eller kommentarer."}]}],"tags":["Sky"]}
{"_type":"post","_createdAt":"2020-08-21T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/sa-mange-ganger-moter-du-pa-capra-i-lopet-av-en-dag/hero.webp"},"title":"Så mange ganger møter du på Capra i løpet av en dag","author":"Oliver Hove-Breen","subtitle":"Det er ikke lange veien du skal gå utenfor huset ditt for å treffe på Capra. Vi forenkler hverdagen til hundretusenvis av brukere, hver eneste dag, og du er kanskje ikke klar over det selv, men mest sannsynlig er du en av dem.","description":"Vi forenkler hverdagen til hundretusenvis av brukere, hver eneste dag, og du er kanskje ikke klar over det selv, men mest sannsynlig er du en av dem.  &gt;&gt;","publishedAt":"2020-08-21T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Når en bedrift henter inn konsulenter fra Capra, vil vi rådføre beslutningstakere, utvikle og lede tekniske prosjekter. Vårt mål er å best mulig dra nytte av teknologi for å maksimere verdiskapingen og videre vekst. Vi leder tekniske prosjekter, utvikler og bygger systemer for å maksimere verdiskapning og videre vekst for din bedrift. Vi sørger ikke bare for at implementering og videre bruk av systemene går som smurt, men gir deg konsulenter som tør å rådgi og utfordre dine valg på veien."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi har jobbet med noen av de største merkevarene i Norge, og hjulpet dem å maksimere deres bruk av teknologi, og flere av dere vil treffe på oss mange ganger i løpet av en av dag."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Dette er historien om en helt vanlig dag  – med Capra"}]},{"_type":"block","markDefs":[{"_key":"e1bda7e81c2e","_type":"link","href":"https://nrk.no/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det er fredag! Du har hatt en fantastisk dag på jobben, selv om du kanskje brukte litt for mye tid på å lese nyheter på "},{"_type":"span","marks":["strong","e1bda7e81c2e"],"text":"NRK.no"},{"_type":"span","marks":[],"text":" (Capra har jobbet for å utvikle hele CMS-et journalistene bruker for å skrive saker, samt alle front- og backend-tjenestene som trengs for å tegne og deske – inkludert kule, altoppslukende artikler under team Digital Historiefortelling)."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Nå er arbeidsdagen over, og det er dårlig vær ute, men humøret ditt er på topp likevel. Det er tross alt helg! Du trasker mot togstasjonen, men på veien får du en pushmelding på telefonen fra Vy om at det er avvik i togtrafikken; ikke behov for å stresse med andre ord. Det er nettopp dette Capra jobber med, å bygge Vy sin neste tjenesteplattform i AWS (Amazon Web Services). I hovedsak for å gi deg raskere og bedre informasjon når det oppstår avvik i togtrafikken."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/sa-mange-ganger-moter-du-pa-capra-i-lopet-av-en-dag/sjekker-tlf.webp","alt":"Hannah sjekker telefonen"},{"_type":"block","markDefs":[{"_key":"17a16a909062","_type":"link","href":"https://ruter.no/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Da ble det bussen i stedet. Du sjekker "},{"_type":"span","marks":["strong","17a16a909062"],"text":"Ruter"},{"_type":"span","marks":[],"text":"-appen og finner etter et veldig raskt og enkelt søk flere alternative ruter fra jobben. Capra har nemlig jobbet med Ruter og implementert og erstattet algoritmen for kollektivt reisesøk. Dessuten trenger du snart ikke begrense deg til regionsøk, men kan planlegge den kollektive turen din på nasjonalt nivå. Hurra!"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/sa-mange-ganger-moter-du-pa-capra-i-lopet-av-en-dag/buss.webp","alt":"Hannah på bussen"},{"_type":"block","markDefs":[{"_key":"871b9d103641","_type":"link","href":"https://en-tur.no/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Du begynner å drømme deg bort om norgesferie mens du sitter på bussen, og går inn på "},{"_type":"span","marks":["strong","871b9d103641"],"text":"Entur"},{"_type":"span","marks":[],"text":"-appen for å finne ut hvordan du for eksempel kan komme deg til både eventyrlige Bodø og sjarmerende Trondheim (og hjem igjen). Entur er en reiseplanlegger som gjør det enkelt å planlegge, sammenligne og betale for reiser på tvers av alle transportformer. Blant annet kan du søke etter en destinasjon og få reisealternativer basert på hele Norges kollektivtilbud. Capra leverer infrastrukturløsninger og bidrar til å optimalisere prosessene rundt det å samle data, slik at den blir tilgjengelig for de som vil benytte den."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/sa-mange-ganger-moter-du-pa-capra-i-lopet-av-en-dag/coop.webp","alt":"Hannah handler"},{"_type":"block","markDefs":[{"_key":"30bebdaccf36","_type":"link","href":"https://coop.no/"},{"_key":"5eb52fc4edfc","_type":"link","href":"https://coop.no/medlem/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Når du har gått av bussen, stikker du innom dagligvarebutikken "},{"_type":"span","marks":["strong","30bebdaccf36"],"text":"Coop"},{"_type":"span","marks":["strong"],"text":" Extra"},{"_type":"span","marks":[],"text":" for å handle middag. Du plukker med deg litt forskjellig – det står taco på menyen (det er jo fredag!) – og går til kassa for å betale. Du klapper litt på lommene i jakka, deretter bukselommen, så en liten titt i PC-bagen; lommeboka ligger igjen på jobb. Heldigvis er du "},{"_type":"span","marks":["strong","5eb52fc4edfc"],"text":"Coop-medlem"},{"_type":"span","marks":[],"text":", og kan dermed bruke den nye funksjonen i medlemsappen deres, Coopay, og betale direkte med appen. Tjenesten er realisert av en rekke eksterne leverandører med ekspertise på ulik teknologi, og Capra har her blant annet vært delaktig i med prosjektledelse."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Når du har kommet deg nesten til inngangsdøren går det opp for deg at du glemte noe i butikken: rømme. "},{"_type":"span","marks":["em"],"text":"Ånei!"},{"_type":"span","marks":[],"text":" Du bestemmer deg for å ta en rask tur innom nabobutikken, Rema 1000, for å plukke med deg rømme (tross alt tacoens viktigste ingrediens). Handleopplevelsen er sømløs og du får god hjelp – også her jobber Capra i kulissene."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/sa-mange-ganger-moter-du-pa-capra-i-lopet-av-en-dag/bil.webp","alt":"Hannah ved bilen"},{"_type":"block","markDefs":[{"_key":"ee068432e81f","_type":"link","href":"https://www.apcoa.no/"},{"_key":"8ce3624e758b","_type":"link","href":"https://www.gjensidige.no/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Du låner bilen til samboeren og skal til å parkere i et "},{"_type":"span","marks":["strong","ee068432e81f"],"text":"Apcoa-parkeringsanlegg"},{"_type":"span","marks":[],"text":" (Apcoa jobber med å fase ut fysiske betalingsautomater og porter i anleggene, og erstatte de med skiltgjenkjenning, og Capra bistår på kundeflater som app og nettside), når du er uheldig og bulker bilen. Heldigvis går det fint, for du har forsikring gjennom "},{"_type":"span","marks":["strong","8ce3624e758b"],"text":"Gjensidige"},{"_type":"span","marks":[],"text":" (veldig fint at det var så enkelt å bestille gjennom deres nettbutikk for forsikringer, som Capra har laget, blant mye annet)."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/sa-mange-ganger-moter-du-pa-capra-i-lopet-av-en-dag/nrk-tv.webp","alt":"Hannah ser på NRK TV"},{"_type":"block","markDefs":[{"_key":"9397ad01f604","_type":"link","href":"https://nrktv.no/"},{"_key":"a272a628d45f","_type":"link","href":"https://nrk.no/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det var ikke noe mer du hadde glemt? Nei, phew. Etter langt om lenge og lenger om langt kommer du deg endelig hjem. Maten blir fortært, og oppvasken tatt. Endelig kan du slenge deg ned i sofaen med en bolle popcorn og noe spennende på TV-en. Du ser ferdig gullrekka på "},{"_type":"span","marks":["strong","9397ad01f604"],"text":"NRK TV"},{"_type":"span","marks":[],"text":", men hva skal du se på nå? Du er langt ifra klar for å legge deg – det er jo fredag! Du ser det står “Se også” under den ferdigspilte episoden av Lindmo. Jammen er det ikke seks andre titler basert på det du allerede har sett og liker. Ved å analysere atferden din, jobber "},{"_type":"span","marks":["strong","a272a628d45f"],"text":"NRK"},{"_type":"span","marks":[],"text":" med å bli enda bedre på å tilby deg skreddersydde anbefalinger basert på dine preferanser."}]},{"_type":"block","markDefs":[{"_key":"d6d7c1165903","_type":"link","href":"https://www.capraconsulting.no/selvskryt"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Dagen er over, og det er på tide med en god natts søvn. I morgen er en ny dag med Capra – "},{"_type":"span","marks":["d6d7c1165903"],"text":"kanskje møter du på oss igjen"},{"_type":"span","marks":[],"text":"?"}]}],"tags":["Capra folk"]}
{"_type":"post","_createdAt":"2020-11-17T00:00:00.000+01:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/server-side-rendered-custom-elements.webp"},"title":"Server Side Rendered Custom Elements","author":"Anders Olav Candasamy","description":"Nå har du muligheten til å utvide vanlige HTML tags med egen logikk og lage avanserte komponenter. Les mer >>","publishedAt":"2020-11-17T00:00:00.000+01:00","body":[{"_type":"block","markDefs":[{"_key":"2fe7ba495092","_type":"link","href":"https://caniuse.com/custom-elementsv1"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Custom Elements er en nyere teknologi som i dag støttes av de "},{"_type":"span","marks":["2fe7ba495092"],"text":"fleste moderne nettlesere"},{"_type":"span","marks":[],"text":". Med dette har vi mulighet til å utvide vanlige HTML tags med egen logikk og lage avanserte komponenter."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Best av alt er at disse komponentene krever ingen JavaScript-rammeverk eller -biblioteker. Støtten leveres direkte av "},{"_type":"span","marks":["strong"],"text":"selve"},{"_type":"span","marks":[],"text":" nettleseren. For nettsiden din betyr dette mindre JavaScript og bedre brukeropplevelser."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Ettersom Custom Elements er en nettleserteknologi, finnes den ikke på serveren (en NodeJS server i vårt tilfelle). Konsekvensen av dette er at vi ikke kan gjøre uttegning på serveren. Heldigvis skal vi se at dette er ganske enkelt å få til. Uttegning på server er nok bedre kjent som Server Side Rendering (SSR)."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Hva er Server Side Rendering (SSR)"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Om du aldri har hørt om SSR før, så er ikke det så farlig. Kort forklart kan man si at det finnes to måter å levere nettsider på: Server Side Rendering (SSR) og Client Side Rendering (CSR). Med SSR lages all HTML på serveren din før den blir sendt til brukerne. Med CSR blir derimot JavaScript – som kan generere HTML – sendt til brukerne. SSR kan "},{"_type":"span","marks":["em"],"text":"på en måte"},{"_type":"span","marks":[],"text":" sammenlignes med Foodora som leverer ferdiglaget mat rett til døren din, mens CSR er Kolonial som leverer oppskriftene og ingrediensene du trenger for å lage mat. Det finnes fordeler og ulemper med begge disse og det som er “best” er helt avhengig av kontekst. Generelt vil SSR gi brukerne dine det beste førsteinntrykket av en nettside. Dette fordi de presenteres med innholdet med engang - de må ikke vente på JavaScript."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Nå som vi har fått dekket eventuelle hull i forkunnskaper, er vi  klare for å lage et Custom Element som serveren og i nettleseren kan bruke - Et "},{"_type":"span","marks":["em"],"text":"isomorphic"},{"_type":"span","marks":[],"text":" custom element, med andre ord. Med denne kan vi få det beste fra både SSR og CSR. Et bruksområde for et slikt element kan være et standardkomponent bibliotek som skal kunne brukes på tvers av forskjellige teams/applikasjoner som bruker SSR og/eller CSR."}]},{"_type":"block","markDefs":[{"_key":"f569bc92e6d3","_type":"link","href":"https://gist.github.com/AndersCan/d216a385d951f8d5ba8a0dc3373d6417"},{"_key":"66787610dba7","_type":"link","href":"https://codepen.io/AndersCan/full/BazMJJp"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Koden som vises under kan ses i sin helhet her: "},{"_type":"span","marks":["f569bc92e6d3"],"text":"gist.github.com"},{"_type":"span","marks":[],"text":" og en liten demo her: "},{"_type":"span","marks":["66787610dba7"],"text":"Codepen.io"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Isomorphic Custom Element"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"La oss lage en custom element som hete "},{"_type":"span","marks":["code"],"text":"hello-element"},{"_type":"span","marks":[],"text":". Vi ønsker at dette elementet skal tegne ut "},{"_type":"span","marks":["code"],"text":"Server: Hei"},{"_type":"span","marks":[],"text":" på serveren, og "},{"_type":"span","marks":["code"],"text":"Nettleser: Hei"},{"_type":"span","marks":[],"text":" i nettleseren. Et litt urealistisk eksempel, men den vil gjøre det lett å skille på hva serveren tegner (SSR) og hva nettleseren tegner (CSR)."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Client Side Rendering"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"La oss starte med å implementere nettleserversjonen av "},{"_type":"span","marks":["code"],"text":"hello-element"},{"_type":"span","marks":[],"text":". Det første vi må gjøre er å fortelle nettleseren at vi har et nytt element. Vi må også fortelle nettleseren hva den skal gjøre når den ser dette elementet på nettsiden vår."}]},{"_type":"code","code":"customElements.define(\n  \"hello-element\", \n  HelloElement\n);\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her forteller vi nettleseren om "},{"_type":"span","marks":["code"],"text":"hello-element"},{"_type":"span","marks":[],"text":" og gir en "},{"_type":"span","marks":["code"],"text":"HelloElement"},{"_type":"span","marks":[],"text":" klasse til denne. Nå vil nettleseren bruke denne klassen for å vite hva den skal gjøre. La oss nå definere "},{"_type":"span","marks":["code"],"text":"HelloElement"},{"_type":"span","marks":[],"text":" klassen."}]},{"_type":"code","code":"class HelloElement extends HTMLElement {\n  connectedCallback() {\n    this.innerHTML = this.render(\"Nettleser: Hei\");\n  }\n  render(text) {\n    return `<h1> ${text} </h1>`;\n  }\n}\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Implementasjonen er ganske kort, men det er 3 ting som er viktige å få med seg her."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Det første er at klassen vår må utvide nettleseren sin "},{"_type":"span","marks":["code"],"text":"HTMLElement"},{"_type":"span","marks":[],"text":". Dette er et krav nettleseren stiller til alle Custom Elements."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Det andre er "},{"_type":"span","marks":["code"],"text":"connectedCallback"},{"_type":"span","marks":[],"text":" funksjonen. "},{"_type":"span","marks":["code"],"text":"connectedCallback"},{"_type":"span","marks":[],"text":" er en lifecycle event som kjøres av nettleseren når den oppdager HTML taggen vår, "},{"_type":"span","marks":["code"],"text":"hello-element"},{"_type":"span","marks":[],"text":". I denne setter vi HTML til det vi ønsker."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Sist, men ikke minst, er at "},{"_type":"span","marks":["code"],"text":"render"},{"_type":"span","marks":[],"text":" funksjonen vår er pure - den bruker kun inputen den får."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Med dette har vi nå et element som kan brukes i nettleseren."}]},{"_type":"code","code":"<!-- når nettleseren ser -->\n<hello-element> </hello-element>\n<!-- vil connectedCallback gjøre den om til -->\n<hello-element> <h1> Nettleser: Hei </h1> </hello-element>\n","language":"html"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I eksemplet over må vi vente på at "},{"_type":"span","marks":["code"],"text":"connectedCallback"},{"_type":"span","marks":[],"text":" blir kjørt før vi viser innhold til brukeren. Neste steg er å kunne bruke "},{"_type":"span","marks":["code"],"text":"hello-element"},{"_type":"span","marks":[],"text":" på serveren, slik at vi alltid viser innhold."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Server Side Rendering"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det første vi trenger på serveren er å definere en "},{"_type":"span","marks":["code"],"text":"HTMLElement"},{"_type":"span","marks":[],"text":" klasse. Som nevnt tidligere, er det nettleseren selv som definerer denne. Selv om vi egentlig ikke bruker den på serveren, har vi implementert "},{"_type":"span","marks":["code"],"text":"HelloElement"},{"_type":"span","marks":[],"text":" slik at den må defineres. Heldigvis kan denne være helt tom."}]},{"_type":"code","code":"global.HTMLElement = class EmptyHTMLElement {};\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Grunnen til at denne kan være helt tom er fordi serveren er kun interessert i hva HTMLen blir. Den bryr seg ikke om registrering av elementet, krav om utviding av "},{"_type":"span","marks":["code"],"text":"HTMLElement"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["code"],"text":"connectedCallback"},{"_type":"span","marks":[],"text":" funksjonen. Den trenger kun vite navnet på elementet og HTMLen som skal være inni den."}]},{"_type":"code","code":"const helloElement = new HelloElement();\nconst serverHtml = `\n<hello-element>\n  ${helloElement.render(\"Server: Hei\")}\n</hello-element>`;\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Så enkelt kan det gjøres, men vi kan gjøre dette litt enklere med en hjelpefunksjon: "},{"_type":"span","marks":["code"],"text":"renderElement"},{"_type":"span","marks":[],"text":"."}]},{"_type":"code","code":"function renderElement(elementConstructor, tagName, props) {\n  const element = new elementConstructor();\n  const html = element.render(props);\n\n  return `<${tagName}> ${html} </${tagName}>`;\n}\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Med "},{"_type":"span","marks":["code"],"text":"renderElement"},{"_type":"span","marks":[],"text":" blir uttegningen av "},{"_type":"span","marks":["code"],"text":"hello-element"},{"_type":"span","marks":[],"text":" litt kortere å skrive."}]},{"_type":"code","code":"const html = renderElement(\n  HelloElement, \n  \"hello-element\", \n  \"Server: Hei\"\n);\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Med dette har vi nå byggeklossene for å få det beste fra to verdener: SSR og CSR. Det er temmelig få linjer med kode og det finnes mange enkle forbedringer som kan gjøres her. Vi har gjort ting enklest mulig slik at koden ble kortest mulig."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Om du lurer så kan du fint bruke React eller Preact i dette oppsettet om du vil. Det eneste kravet med løsningen er at du kan konvertere det "},{"_type":"span","marks":["code"],"text":"render"},{"_type":"span","marks":[],"text":" returnere til HTML. For nettleseren blir det "},{"_type":"span","marks":["code"],"text":"ReactDOM.render"},{"_type":"span","marks":[],"text":" (evt. "},{"_type":"span","marks":["code"],"text":"ReactDOM.hydrate"},{"_type":"span","marks":[],"text":") og på serveren blir det "},{"_type":"span","marks":["code"],"text":"ReactDOM.renderToString"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[{"_key":"3b8d61a4d5b3","_type":"link","href":"https://codepen.io/AndersCan/full/BazMJJp"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"En liten demo av denne løsningen kan ses på "},{"_type":"span","marks":["3b8d61a4d5b3"],"text":"Codepen.io"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[{"_key":"61f814c176ab","_type":"link","href":"https://github.com/popeindustries/lit-element"},{"_key":"96c3163d27c3","_type":"link","href":"https://github.com/WebReflection/heresy"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Synes du dette var spennende, kan du se nærmere på "},{"_type":"span","marks":["61f814c176ab"],"text":"https://github.com/popeindustries/lit-element"},{"_type":"span","marks":[],"text":" som var inspirasjonen til denne bloggposten. Denne benytter seg av lit-html og gjør ting "},{"_type":"span","marks":["em"],"text":"litt"},{"_type":"span","marks":[],"text":" annerledes enn det vi har vist her. "},{"_type":"span","marks":["96c3163d27c3"],"text":"Heresy"},{"_type":"span","marks":[],"text":" er også et interessant bibliotek å se på."}]}],"tags":["Frontend"]}
{"_type":"post","_createdAt":"2020-03-18T00:00:00.000+01:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/slik-redder-it-konsulenter-planeten/hero.webp"},"title":"Slik redder IT-konsulenter planeten","author":"Therese Engen","subtitle":"Jobber du som utvikler eller konsulent? Da er du faktisk en bidragsyter til å redde verden - litt.","description":"Den digitale revolusjonen har gjort det mulig for bedrifter å ta enkle, effektive og miljøvennlige valg på arbeidsplassen. Sånn kan vi redder verden litt &gt;&gt;","publishedAt":"2020-03-18T00:00:00.000+01:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Den digitale revolusjonen har gjort det mulig for bedrifter å ta enkle, effektive og mer miljøvennlige valg på arbeidsplassen. Dokumenter arkiveres elektronisk og møter kan føres via videotjenester, noe som sparer inn på både reiseutgifter og utslipp av CO2. Etterhvert som de elektroniske duppedingsene på arbeidsplassen utvikles, får de også lenger levetid, holdbarhet og krever mindre energi. Heia fremgang og miljøvennlighet!"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I dag har det blitt skikkelig trendy å kunne si at man arbeider med eller for miljøet. Å kunne snakke høyt om en grønnere hverdag og lidenskap for planeten er i vinden som aldri før. Lyst til å være med på skrytelaget? Jobber du som utvikler, programmerer eller konsulent er du faktisk med på å redde verden. Litt hvert fall."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Redusert lastetid er ikke bare godt for sjela"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Gamle løsninger, for store filer, koder, unødvendige designelementer og annet innhold er elementer som krever mer nettverksdata. Utdaterte nettsider kan gjerne ha svært treg lastetid, noe som irriterer de fleste langt inn i sjela. I tillegg kan mye nettverksdata ha en negativ effekt på miljøet."}]},{"_type":"block","markDefs":[{"_key":"af2a38c9031c","_type":"link","href":"https://www.nytimes.com/2012/09/23/technology/data-centers-waste-vast-amounts-of-energy-belying-industry-image.html"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Jo mer data, desto høyere vil strømforbruket til data- og serverrom være. Nedkjøling av slike rom trekker mye energi, men er en absolutt nødvendighet for å unngå overoppheting og systemfeil. Mange data- og serverrom har generatorer dersom strømmen skulle ende opp med å gå, men kjører gjerne kjølesystemene sine på full guffe hele døgnet for å sikre seg mot en slik hendelse. Noen av de aller største datasentrene bruker faktisk "},{"_type":"span","marks":["af2a38c9031c"],"text":"like mye energi som en mellomstor by"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Redd kloden med effektive nettsider og optimalisering for smarttelefoner"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det finnes ofte gode løsninger som lar oss minske mengden data en nettside eller app bruker, og dermed også strømforbruket til data- og serverrom, uten at man trenger å redusere tiden man bruker til å stirre på store og små skjermer. Det bør rett og slett bygges mer effektive nettsider og apper som er mer datavennlige, energivennlige og enkle å oppdatere. Dette kan være en teknologisk bidragsyter i å gjøre verden litt grønnere med andre ord."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Dersom du har lyst til at brukere av løsningene skal være enda mer miljøvennlige bør du også utvilsomt optimalisere for alle typer skjermer, men særlig smarttelefoner. Det er nemlig slik at det elektriske behovet til en bærbar maskin er betraktelig lavere enn behovet til en stasjonær datamaskin, og nettbrett og smarttelefoner trenger igjen mindre elektrisitet enn laptoper. Hvem hadde trodd at en smarttelefon-optimalisert løsning kan være med på å gjøre deg til en slags miljøhelt (#ydmyk)."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/slik-redder-it-konsulenter-planeten/image.webp","alt":"Person med telefon og laptop"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Fremtiden er mer miljøvennlig og mer teknologisk"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Snakker man høyt om miljøvennlighet blir man i dag ofte møtt med applaus, eller av motarbeidende argumenter. Kommentarfeltkrigerne elsker å påpeke umuligheten av å bli helt og fullt miljøvennlig. Digitalisering? Redusert lastetid og optimalisert bruk av nettverksdata? Pøh! Det hjelper jo ikke med mindre du kutter kjøtt, bil, fly, går naken fordi alle klærne våre inneholder plast og flytter inn i en hule uten varme eller lys."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi vet at det finnes plenty med fallgruver når det kommer til teknologiske fremskritt og digitalisering. Produkter utvikles med en garanti om at de går i stykker om noen år, slik at man får flere til å kjøpe de aller nyeste versjonene. Mennesker utnyttes i andre land for å produsere blant annet smarttelefoner, og vi klorer til oss miljøfiendtlige materialer for å skape nye og ettertraktede maskiner. Jepp, vi har en lang vei å gå før vi kan sidestille oss med andre grønne hverdagshelter, og det er absolutt viktig at vi tar debattene som er vanskelige og ukomfortable rundt miljøvennlighet og tek-industrien. Kun da vil vi avdekke problemer som eksisterer, og kun da vil vi kunne løse disse problemene."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Heldigvis er vårt fagfelt kjent for å utvikle seg lynraskt. Nettopp derfor vil vi fremover se løsninger som er mer energieffektive, og produkter som er produsert av smartere materialer på mer etiske måter. I mellomtiden vil uansett Capra sine utviklere og konsulenter jobbe hardt for å skape de aller beste løsningene for våre kunder, og i samme slengen slå et slag for å redde verden. Litt."}]}],"tags":["Meninger","Teknisk prosjektledelse"]}
{"_type":"post","_createdAt":"2020-11-09T00:00:00.000+01:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/slik-rekrutterte-vi-var-cto-ved-hjelp-av-performance-based-hiring/hero.webp"},"title":"Slik rekrutterte vi vår CTO ved hjelp av Performance-based Hiring","author":"Morten Gran Kristoffersen","subtitle":"I et mylder av ulike tankesett, teorier og metodikker i henhold til rekruttering, så har vi i Capra valgt Lou Adler og hans Performance-based hiring. Hvordan funker denne metodikken, sånn egentlig?","description":"Med Performance-based Hiring rekrutterte vi en CTO som kunne løse oppgavene best og la bort det endeløse fokuset på CV.  >>","publishedAt":"2020-11-09T00:00:00.000+01:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Mange vil nok leie inn et byrå for å finne sin nye CTO. Derimot, ønsket vi å ta saken i egne hender og stole på metodikken som vi bruker til å ansette resten av selskapet. Vi mente det var rett og rimelig at kandidaten skulle se hvordan vi rekrutterte -kandidatopplevelsen fra A til Å - og dermed komme med innspill og tanker om forbedringer av prosessen vår."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Og med fasit i hånd, så har vi gjennom prosessen lært mye som vi har tatt med oss videre inn i rekrutteringen til Capra."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Hva ligger egentlig i Performance-based Hiring?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"La oss starte med det jeg mener er de to viktigste prinsippene i denne metodikken:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"Du skal ansette basert på fremtidig prestasjon, ikke nåværende ferdigheter eller kompetanse."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"Du skal kunne tilby en kandidat en 30% økning på ulike parametere, slik som ansvar, utfordring, faglig vekst og personlig vekst ved bytte av jobb. Lønn er ikke en del av ligningen i første omgang. Kan du ikke tilby dette, så ikke kast bort tiden til kandidaten."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/slik-rekrutterte-vi-var-cto-ved-hjelp-av-performance-based-hiring/oppotunity-gap.webp","alt":"Opportunity gap oversikt"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Dette appellerer godt til oss i Capra. Våre ansatte skal ikke stå stille, men kontinuerlig søke ny kunnskap og nye ferdigheter, slik at de kommer seg nærmere den rollen eller jobben de ønsker seg videre i karrieren. Vi ser på karrieren som en reise, og Capra skal være en positiv erfaring på den ferden."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Hvordan gjør vi det i praksis?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Når vi ansetter en ny kandidat, stiller vi ikke spørsmålet: “Hva må personen kunne?” Vi spør oss: “Hva skal personen oppnå i jobben de første tolv månedene?”."}]},{"_type":"block","markDefs":[{"_key":"50c38b53e95b","_type":"link","href":"/mot-var-nye-cto"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Da vi ansatte "},{"_type":"span","marks":["50c38b53e95b"],"text":"vår nye CTO, Heidi Brovold"},{"_type":"span","marks":[],"text":", i våres, var det første vi gjorde i den prosessen å identifisere hva vår nye CTO skulle oppnå. Det så slik ut:"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/slik-rekrutterte-vi-var-cto-ved-hjelp-av-performance-based-hiring/oppna.webp","alt":"Formål med rollen"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Etter prestasjonsmålene var på plass lagde vi en “Employee Value Proposition (EVP)”. Hva kan vi som selskap tilby denne kandidaten utover lønn og andre økonomiske goder?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Et lite utdrag av det som stod der var:"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/slik-rekrutterte-vi-var-cto-ved-hjelp-av-performance-based-hiring/evp.webp","alt":"Employee Value Proposition"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det er først som et steg nr 3 vi begynner å se på kandidatprofilene, samt utvikle en personas. Kandidatprofilen inneholder blant annet erfaring, ferdigheter og personlige egenskaper, men fungerer ikke som en sjekkliste. Den er en veileder for screening på hva vi "},{"_type":"span","marks":["em"],"text":"tror"},{"_type":"span","marks":[],"text":" er riktig. Justeringer gjøres eventuelt etter noen intervjuer."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her ser dere hvordan vi definerte erfaring i kandidatprofilen:"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/slik-rekrutterte-vi-var-cto-ved-hjelp-av-performance-based-hiring/kandidatprofil.webp","alt":"Kandidatprofil"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Til å rekruttere en CTO for et IT-konsulentselskap med rundt 100 ansatte, så satte vi ikke voldsomme krav til erfaring tenker du kanskje?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Tanken er at erfaring i seg selv ikke er et krav. Kravet til stillingen er at personen kan implementere en ny faglig strategi på 90 dager. Det er derfor ikke antall år som er avgjørende, men hva kandidaten har fylt årene med. Som rekrutterer ser jeg på ulike CVer med tankesettet, “vil denne jobben by på en stor nok utfordring?”, ikke “kan kandidaten X og Y?”"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/slik-rekrutterte-vi-var-cto-ved-hjelp-av-performance-based-hiring/whiteboard.webp","alt":"Whiteboard tavle"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Hvordan responderte kandidatene?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Til en CTO stilling så tok vi primært kontakt ved å ringe. Det ble lagt ned mye tid i å finne kontaktinformasjon, og de gangene det viste seg å være vanskelig, sendte vi heller en en melding via LinkedIn."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"For en rekrutterer er det mye lettere å være konkret og direkte når du har bestemte prestasjonsmål og en EVP å selge kandidaten. Formålet med den første kontakten var også å selge den innledende praten til dem. Vi så også at samtlige kandidater som fikk tilsendt Inmail svarte, og vi fikk positiv respons på at den var enkel å forholde seg til. Den pirret nysgjerrigheten akkurat nok til at vi fikk tatt en prat over telefon, og vurdert om dette er en stilling som innebar en økning, basert på 30%-tankegangen. Noen ble vi enige om at spranget var for stort, andre at det ikke var av rett karrierevei."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Selve “pitchen” var standard, men innledning var skreddersydd basert på informasjon vi hentet inn fra nettverk, Linkedin, Google og andre steder. Her er et eksempel på hvordan en slik LinkedIn melding kunne se ut:"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/slik-rekrutterte-vi-var-cto-ved-hjelp-av-performance-based-hiring/melding.webp","alt":"LinkedIn melding"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Hvordan funker prinsippene på vanlige konsulenter?"}]},{"_type":"block","markDefs":[{"_key":"0e4185aa1d82","_type":"link","href":"/hvordan-rekrutterer-man-til-autonome-team"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"La oss være dønn ærlige: Det er ikke verdens letteste ting å lage gode prestasjonsmål når vi ikke vet hvilken kunde, "},{"_type":"span","marks":["0e4185aa1d82"],"text":"eller rolle hos kunde, som kandidaten skal ut til"},{"_type":"span","marks":[],"text":". Akkurat denne delen av jobben er veldig mye lettere når det er en konkret stilling som CTO."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi bruker denne metodikken på alle stillingene vi ansetter i Capra, og vi jobber kontinuerlig med å forbedre og tilpasse den, slik at vi har mest mulig klarhet å tilby kandidaten fra første praten."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hvis du er nysgjerrig på metodikken eller vil ta en prat om hvordan vi rekrutterer i Capra, så er det bare å ta kontakt."}]}],"tags":["Rekruttering","Capra folk"]}
{"_type":"post","_createdAt":"2020-11-06T00:00:00.000+01:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/slik-reorganiserer-vi-capra/hero.webp"},"title":"Slik reorganiserer vi Capra","author":"Stein-Otto Svorstøl","description":"Inspirert av boken Team Topologies har Capra nylig gått fra å være en rollebasert og hierarkisk organisasjon, til å satse på nettverksbasert organisering med team som grunnelement. ","publishedAt":"2020-11-06T00:00:00.000+01:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Høsten 2019 valgte vi i Capra å fornye vår strategi. Prosessen omfattet en krevende kartlegging av organisasjonen og markedet, hvor vi identifiserte de største utfordringene vi så for oss de kommende årene, blant annet vår evne til å håndtere økende antall ansatte uten å miste autonomien. For å adressere denne veksten, samt større trykk på intern drift, besluttet ledergruppen å innføre en ny organisasjonsstruktur som ville tjene oss bedre."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hovedmålene med dette var å:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"skape rom for at flere engasjerer seg i drift og utvikling av selskapet, med hensikt å skape økt eierskap og å ta bedre beslutninger"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"øke graden av autonomi og fleksibilitet, for at selskapet skal bli mer robust og respondere enda raskere på endringer"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[{"_key":"63c8900616a7","_type":"link","href":"https://www.weforum.org/agenda/2020/07/flexible-working-after-covid19-telenor-norway/"},{"_key":"3e53bf8e11ab","_type":"link","href":"https://en.wikipedia.org/wiki/Eating_your_own_dog_food"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"En rask løsning kunne vært å innføre et nytt nivå i hierarkiet. Derimot, hos våre kunder fronter vi selvdrevne, autonome team og "},{"_type":"span","marks":["63c8900616a7"],"text":"“tight, loose, tight”"},{"_type":"span","marks":[],"text":"-ledelse med for eksempel målstyringsverktøyet OKRs. Vi hjelper dem med å implementere resultatorienterte arbeidsprosesser og organisasjonsdesign med hensikt om å maksimere “transparency, accountability, autonomy and alignment”. Hvorfor ikke bygge på de samme verdiene hos oss selv - "},{"_type":"span","marks":["3e53bf8e11ab"],"text":"spise vår egen hundemat"},{"_type":"span","marks":[],"text":"?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Veien til en nettverksorganisasjon"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"For å komme i gang, trengte vi en felles tankemodell for å forstå teamorganiseringen vi ønsket oss. Det finnes et mangfold av rammeverk for smidig utvikling som baserer seg på team, men disse er ofte omfattende og spisset for spesifikke formål – først og fremst systemutvikling. Vi trengte noe friere; noe som systematiserte prinsipper som allerede var kjent for oss."}]},{"_type":"block","markDefs":[{"_key":"16f55d824d42","_type":"link","href":"https://www.amazon.com/Team-Topologies-Organizing-Business-Technology/dp/1942788819"},{"_key":"3c7c8de9651a","_type":"link","href":"https://www.amazon.com/Accelerate-Software-Performing-Technology-Organizations/dp/1942788339/ref=pd_lpo_14_t_1/144-9166183-0317309?_encoding=UTF8&pd_rd_i=1942788339&pd_rd_r=371f8e0f-b9e8-4e7f-b846-fd489cf7f1c5&pd_rd_w=hf4Xe&pd_rd_wg=MsjFs&pf_rd_p=7b36d496-f366-4631-94d3-61b87b52511b&pf_rd_r=V9HJCMBZ50VG4TKQQZK6&psc=1&refRID=V9HJCMBZ50VG4TKQQZK6"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Passende nok, var boken "},{"_type":"span","marks":["16f55d824d42"],"text":"“Team Topologies: Organizing Business and Technology Teams for Fast Flow”"},{"_type":"span","marks":[],"text":" utgitt i 2019, tett opptil at vi gikk i gang med arbeidet vårt. Den bygger videre på "},{"_type":"span","marks":["3c7c8de9651a"],"text":"“Accelerate”"},{"_type":"span","marks":[],"text":", og er skrevet av Matthew Skelton og Manual Pais. Den presenterer en måte å resonnere rundt teamorganisering i en systemutviklingsorganisasjon. I en bisetning nevnes det at de tror prinsippene og topologiene deres kan brukes i flere kontekster, noe som passet oss perfekt! Boken gav oss dermed vokabularet vi trengte for å lage et nytt organisasjonskart."}]},{"_type":"block","markDefs":[{"_key":"5c9df5019c70","_type":"link","href":"https://medium.com/smidigalliansen/oppsummering-av-team-topologies-5a5ab0bef926"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Altfor "},{"_type":"span","marks":["5c9df5019c70"],"text":"kort oppsummert"},{"_type":"span","marks":[],"text":" gav boken oss:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"fire grunnleggende team-topologier, altså “teamtyper”"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"tre grunnleggende interaksjonsmoduser for team – det vil si måter to team kan jobbe sammen"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[{"_key":"ea60c21676f4","_type":"link","href":"https://teamtopologies.com/key-concepts"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Forfatterne illustrerer disse konseptene på nettsidene sine "},{"_type":"span","marks":["ea60c21676f4"],"text":"her"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi begynte med å opprette et team med formål om å designe og innføre den nye strukturen. Med det nye vokabularet vårt som bakgrunn, gikk dette teamet inn i en iterativ prosess, som så omtrent slik ut:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"innhente informasjon om roller og ansvarsområder"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"systematisere dette inn i de verdistrømmene som holder Capra i gang: Ansette flinke kolleger, bygge kompetanse og selskap, og selge og levere tjenester til våre kunder."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"basert på dette og modellen fra “Team Topologies”, tegne opp et kart med forslag til team og ansvar"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"ta med dette tilbake til ansatte med roller og ansvar i dag"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"gjenta steg 1-4 til kartet gir mening for flere enn oss selv"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[{"_key":"0eee58cb1fee","_type":"link","href":"https://www.amazon.com/Start-Why-Leaders-Inspire-Everyone/dp/1591846447"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Deretter utviklet vi workshop-innhold for å hjelpe nye team i startfasen: Alle team må ha et tydelig formål for å ha livets rett ("},{"_type":"span","marks":["0eee58cb1fee"],"text":"“Start With Why”"},{"_type":"span","marks":[],"text":"), og teamet må vite hvem de er til for. Innledningsvis konkretiseres formålet, og teamet setter sine mål basert på Capras overordnede retning. Når dette er gjort, er det opp til teamet hvordan de organiserer seg internt og hvordan oppgavene løses, med gitte ressurser de har til rådighet."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Hva har vi oppnådd?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"På om lag fire måneder, har vi etablert tolv team, som jobber innen rekruttering, markedsføring, fagmiljø, salg og leveranse. For to måneder siden ble ledergruppen avviklet, og deres opprinnelige oppgaver er i dag spredt utover flere andre team. Blant disse finner vi Team Økonomi, som har ansvar for økonomi, budsjett og prognoser; Team Operasjonelt, som kontrollerer den daglige driften av selskapet og sikrer at konsulentene våre trives; Team Strategi og Porteføljestyring, som jobber med andre team for å peke ut og forankre selskapets retning. De ser på hvordan vi på et overordnet plan skal reagere på endringer og tilpasse oss markedet. Da ved først og fremst å justere de ressursene teamene har fått tildelt."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/slik-reorganiserer-vi-capra/strategi.webp","alt":"Strategi oversikt"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Figuren viser hvilke team som er knyttet til de tre viktigste, overordnede verdistrømmene til Capra: Ansette flinke kolleger, bygge kompetanse og selskap, og selge og levere tjenester til våre kunder. Under hver av dem finner du verdistrømteam – det vil si team som primært jobber for å støtte den overordnede verdistrømmen og skape verdi for selskapet. Disse teamene kan dynamisk endre på sine leveranser for å matche feedback og variasjoner i markedet."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Under finner vi det vi kan kalle Capras plattform, i form av det «Team Topologies» kaller "},{"_type":"span","marks":["em"],"text":"Plattform Team"},{"_type":"span","marks":[],"text":". De kan ikke respondere på noe direkte i verdistrømmene, men vil reagere på det verdistrømteamene informerer om. Nederst finner vi Team Nyorg (kort for Ny Organisering), som er oss som de siste månedene har jobbet med nytt organisasjonsdesign."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/slik-reorganiserer-vi-capra/team.webp","alt":"Team inndeling"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Neste steg"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Fokuset er i første rekke å stabilisere de nyetablerte teamene, og å sikre at ansvar, oppgaver og roller fordeles på en fornuftig måte innad. Det skal utvikles støttemateriale for å hjelpe teamene med å lære mer om seg selv og egen ytelse. Eksempler på dette er retningslinjer for å holde retrospektiver, evaluering av hvor godt et team leverer på egne mål, og å identifisere grensesnitt på tvers av team."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi kommer til å fortsette å iterere og lære om organisasjonsdesign, og sørger for stabile arenaer for tilbakemeldinger på endringsprosessen og selve designet. For eksempel har vi i denne iterasjonen bevisst valgt å ikke gjøre noe med organiseringen av HR-funksjonen, bare for å sikre at de ansatte fortsatt har et stabilt sted å bringe sine tanker, bekymringer og forbedringer."}]},{"_type":"block","markDefs":[{"_key":"a7772110eed2","_type":"link","href":"https://blog.crisp.se/wp-content/uploads/2012/11/SpotifyScaling.pdf"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"I Capra liker vi åpenhet og engasjement. Vi tror på en organisering som legger til rette for at alle kan bidra der de ønsker å engasjere seg. Dette motiveres gjennom flat struktur, autonome team, fokus på formål og stor villighet til å eksperimentere. For som med “"},{"_type":"span","marks":["a7772110eed2"],"text":"The Spotify Model"},{"_type":"span","marks":[],"text":"”, er også dette kun et øyeblikksbilde av vår organisasjon, og over tid vil vi lære, iterere og bli enda bedre. Vi gleder oss!"}]},{"_type":"block","markDefs":[{"_key":"8168df50ced8","_type":"link","href":"https://nettsiden.pages.dev/blogg/slik-reorganiserer-vi-capra/%20https://smidigpodden.no/episode/32"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Lyst til å lære enda mer om reorganiseringen? Da kan du lytte til Ørjan Bøe Thygesen snakke om det på Smidigpodden "},{"_type":"span","marks":["8168df50ced8"],"text":"her"},{"_type":"span","marks":[],"text":"!"}]}],"tags":["Capra folk"]}
{"_type":"post","_createdAt":"2023-09-21T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/smekkfulle-team-topologies-kurs-med-manuel-pais/hero.webp"},"title":"Smekkfulle Team Topologies-kurs med Manuel Pais","author":"Malin Aandahl","subtitle":"I løpet av de siste to dagene har vi i Capra hatt den enorme glede av å arrangere kurs med Manuel Pais, medforfatter av den banebrytende boken \"Team Topologies\". Responsen har vært overveldende, med fulltegnede kurs og ventelister begge dager!","description":"Smekkfulle Team Topologies-kurs med Manuel Pais","publishedAt":"2023-09-21T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Hva er Team Topologies?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I 2019 ble boken \"Team Topologies\" av Matthew Skelton og Manuel Pais lansert. Boken presenterer en tilnærming til organisering av moderne softwareutvikling, hvor tverrfaglige team er byggeklossene. Tilnærmingene baserer seg på domene-drevet design og funn fra forskningen Accelerate. De to siste dagene har Capra vært vertskap for forfatter Manuel Pais sine Team Topologies-kurs, som har ført til to helt fulle dagskurs."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Hva lærer man på kurset?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Kurset handlet om hvordan man kunne gjøre utformingen av organisasjonen din til en strategisk fordel ved å ta i bruk konsepter fra Team Topologies, som å gi gode teamnavn, definere teaminteraksjoner og etablere gode feedback-loops. Man vil lære om praktiske teknikker for effektivt organisasjonsdesign, basert på team-fokuserte sosiotekniske systemer, Conway’s law og klart definerte Team-APIer. I tillegg vil man lære om ulike teamtyper (verdistrøms-team, muliggjøringsteam, komplisert subsystem team og plattform-team) og hvordan velge riktig team topologi for å få til en rask utviklingstakt. Kurset passer for CTO/CIO, avdelingsledere, arkitekter, teamledere og utviklere."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"På kurset deltok Øistein Haugland fra Itera, som sier følgende om kurset:"}]},{"_type":"block","style":"blockquote","markDefs":[],"children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"Manuel leverte over forventningene!"},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"Jeg har nå vokabularet, og de nødvendige mentale modellene, til å løse problemstillinger jeg tidligere ikke kunne sette fingeren på."},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"Team Topologies tar jeg med videre for å lære bort, og anvende. Anbefales sterkt."},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/smekkfulle-team-topologies-kurs-med-manuel-pais/paishaugland.webp","alt":"Øistein Haugland og Manuel Pais på Team Topologies kurs hos Capra"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n  "},{"_type":"span","marks":[],"text":"Øistein Haugland og Manuel Pais på Team Topologies-kurs hos Capra"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[{"_key":"8de25b2fe1f9","_type":"link","href":"mailto:obr@capraconsulting.no"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Ettersom kursplassene raskt ble utsolgt og veldig gode tilbakemeldinger, blir det antagelig flere kurs. Si i fra til "},{"_type":"span","marks":["8de25b2fe1f9"],"text":"Oliver Hove-Breen"},{"_type":"span","marks":[],"text":" dersom du vil vite om neste kurs."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Satsningen på Team Topologies i Capra"}]},{"_type":"block","markDefs":[{"_key":"16bd836abfc1","_type":"link","href":"/den-forste-av-mange-oppsummering-av-capras-team-topologies-konferanse"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"I Capra har vi de siste årene fokusert mye på Team Topologies. I fjor arrangerte vi en "},{"_type":"span","marks":["16bd836abfc1"],"text":"Team Topologies konferanse"},{"_type":"span","marks":[],"text":", hvor over 80 bedrifter deltok. Nedenfor kan du lese om hvordan Capra selv har anvendt teknikkene fra Team Topologies i måten de organiserer seg. Vi erfarer at konseptene fra Team Topologies er svært nyttige og gir en organisasjon et vokabular om teamtyper og interaksjon mellom team, som gir klarhet i forventninger til samarbeid, hvert enkelt teams hensikt, og dermed bedre samkjøring som kan gi høyere utviklingshastighet."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Hvordan har vi brukt det hos andre kunder"}]},{"_type":"block","markDefs":[{"_key":"7d43ba2bdac6","_type":"link","href":"mailto:esso@capraconsulting.no"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hos våre kunder NRK og Vy har vi allerede tatt i bruk flere av konseptene fra Team Topologies, som interaksjonsmoduser, kognitiv last, inverse Conway og hvordan vi brukte domene-drevet design for å strukturere Vy sine domener. Dette har ført til tydeligere grensesnitt og domener mellom team, mer fokus og mindre kognitiv last mer team. Vi har snakket om erfaringene våre hos ICE og Tolletaten, og vi deler gjerne erfaringene med deg også. Vi kan også hjelpe deg å forstå hvordan din bedrift kan ta nytte av konseptene fra Team Topologies. Ta kontakt med vår foredragsholder og teknologileder "},{"_type":"span","marks":["7d43ba2bdac6"],"text":"Stein-Otto Svorstøl"},{"_type":"span","marks":[],"text":" for en uforpliktende prat."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/smekkfulle-team-topologies-kurs-med-manuel-pais/kurs.webp","alt":"Deltaker på kurs"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n  "},{"_type":"span","marks":[],"text":"Ivar Iversen fra Fremtind på Team Topologies-kurs."},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Fra roller i et hierarki til Team Topologi"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I Capra gjorde vi for noen år siden en reorganisering fra hierarki til en ren Team Topologies og autonome team. Vår teknologileder Therese Engen fra Capra forteller om reisen nedenfor:"}]},{"_type":"block","markDefs":[{"_key":"1035630b5f7b","_type":"link","href":"/slik-reorganiserer-vi-capra"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Capra er et konsulentselskap basert i Oslo som fokuserer på å levere verdi til kunder gjennom nymotens teknologi og innovative løsninger. Vi er veldig opptatte av å rigge vårt eget selskap for fart og flyt, ettersom vi tror dette fører til bedre løsninger for våre kunder og en større følelse av eierskap for våre ansatte. I 2019 startet vi nettopp en slik reorganisering. Dersom du ønsker å lese mer om vår reise fra en ledergruppe til autonome team, ta en titt på følgende bloggartikkel: "},{"_type":"span","marks":["1035630b5f7b"],"text":"Slik reorganiserer vi Capra"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Capra tjente penger, kundene våre var happy og folkene våre var happy - så hvorfor initierte vi denne endringen? Ledergruppen følte at farten sank. Mange utfordringer ble løst utenfor ledergruppen, og de fikk dessuten mange spørsmål fra kolleger som man like gjerne kunne, og burde, løst selv. Med autonomi, samkjøring og flat struktur i bakhodet oppdaget ledergruppen Team Topologies - en bok som ga dem vokabularet til å starte reisen."}]},{"_type":"block","markDefs":[{"_key":"22d91818b80b","_type":"link","href":"https://en.wikipedia.org/wiki/Tuckman%27s_stages_of_group_development"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det første teamet, Team Nyorg, fokuserte i starten på å lage et "},{"_type":"span","marks":["em"],"text":"starter-kit"},{"_type":"span","marks":[],"text":" for nye team. Dette for å hjelpe dem med å finne sitt formål, sette gode mål, lage en teamkontrakt og veilede teamet gjennom "},{"_type":"span","marks":["22d91818b80b"],"text":"Tuckman’s stages of group development"},{"_type":"span","marks":[],"text":". Inspirert av boken "},{"_type":"span","marks":["em"],"text":"The Five Dysfunctions of a Team"},{"_type":"span","marks":[],"text":", fasiliterte de også retrospektiver for teamene for å påse at teamene ikke mistet fokus. Therese tror at vi kunne ha unngått noen av utfordringene vi møtte, dersom man i starten hadde fokusert mer på tillit, konflikthåndtering, forpliktelse til resultater, ansvar og resultater."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Så, hva har vi fått til? Vi ser en klar tendens til at flere tar ansvar og føler et større eierskap til oppgaver. I tillegg har vi merket at endringsfarten har økt på grunn av at beslutninger tas nærmere de som er påvirket av dem. Ønsker å lese mer om hva vi har lært etter to år med Team Topologies? Ta en titt på følgende bloggartikkler:"}]},{"_type":"block","markDefs":[{"_key":"d23aef20c1cb","_type":"link","href":"/to-ar-senere-dette-har-vi-laert-siden-vi-anvendte-team-topologies"}],"style":"normal","children":[{"_type":"span","marks":["d23aef20c1cb"],"text":"To år senere: Dette har vi lært siden vi anvendte Team Topologies"}]},{"_type":"block","markDefs":[{"_key":"b877921520da","_type":"link","href":"/team-og-troll-erfaringer-fra-en-helt-vanlig-geit"}],"style":"normal","children":[{"_type":"span","marks":["b877921520da"],"text":"Team og troll – erfaringer fra en helt vanlig geit"}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Meld deg på nyhetsbrevet vårt"}]},{"_type":"block","markDefs":[{"_key":"41dff9ba5f6d","_type":"link","href":"https://capraconsulting.us7.list-manage.com/subscribe?u=40ddc61e41192391f335bce25&id=f8b49ae27c"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Meld deg på "},{"_type":"span","marks":["41dff9ba5f6d"],"text":"nyhetsbrevet vårt"},{"_type":"span","marks":[],"text":" om du ønsker å få informasjon om kurs i fremtiden og lignende typer arrangementer."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/smekkfulle-team-topologies-kurs-med-manuel-pais/pais.webp","alt":"Manuel presenterer"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n  "},{"_type":"span","marks":[],"text":"Manuel Pais presenterer Team Topologies konsepter"},{"_type":"span","marks":[],"text":"\n"}]}],"tags":["TPU"]}
{"_type":"post","_createdAt":"2022-09-08T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/sommeren-hos-capra-et-innblikk-i-arbeidslivet.webp"},"title":"Sommeren hos Capra - et innblikk i arbeidslivet","author":"Rikke Løngaard","subtitle":"Vi har slått av en prat med noen av årets sommerstudenter, som deler sine innblikk og tanker fra deres hverdag i Capra.","description":"Sommeren hos Capra - et innblikk i arbeidslivet","publishedAt":"2022-09-08T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hver sommer tar Capra imot dyktige teknologistudenter til en 7 ukers sommerjobb. Målet er å forberede studentene på en potensiell jobb som IT-konsulent. I juni i år igjen tok Capra inn 17 teknologistudenter, som har  jobbet på tre ulike reelle kundeprosjekter. Vi har slått av en prat med noen av årets sommerstudenter, som deler sine innblikk og tanker fra deres hverdag i Capra."}]},{"_type":"block","markDefs":[{"_key":"0faed1607d3b","_type":"link","href":"https://drdropin.no/"},{"_key":"56f1834ae0de","_type":"link","href":"https://maritimutdanning.no/"},{"_key":"0d9f532919b2","_type":"link","href":"https://www.xperitech.com/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Fordelt på 3 tverrfaglige team har studentene fått et godt innblikk i hva arbeidslivet har å by på - faglig og sosialt. Hos "},{"_type":"span","marks":["0faed1607d3b"],"text":"Dr. Dropin"},{"_type":"span","marks":[],"text":" har et team laget en digital veileder som, hvis ønskelig, gir pasientene anbefaling om behov for fysikalsk behandling, samt hvilke type behandling og behandler. Teamet hos "},{"_type":"span","marks":["56f1834ae0de"],"text":"Maritim Utdanning"},{"_type":"span","marks":[],"text":" laget en webapplikasjon som kan gjennomføre en godkjenningsflyt for kadettopplæring ved å dele besvarelser og godkjenningskoder mellom aktører i utdanningsløpet. Det tredje teamet utviklet en reiseplanlegger for "},{"_type":"span","marks":["0d9f532919b2"],"text":"XperiTech"},{"_type":"span","marks":[],"text":" som skaper en glimrende bobilferie."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Capras konsulentskole"}]},{"_type":"block","markDefs":[{"_key":"cc441b80197a","_type":"link","href":"https://drdropin.no/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Før sommerjobben startet for fullt, deltok sommerstudentene på Capras egne konsulentskole. Denne blir arrangert av et eget team bestående av Capra ansatte. Konsulentskolen byr på masse faglig og sosialt innhold, og gir studentene mulighet til å bli godt kjent med sine medstudenter før den faktiske sommerjobben er i gang. Målet er å forberede studentene for å kunne gjennomføre ekte kundeprosjekt i løpet av sommerjobben. NTNU-studenten Anna Jansdatter Bjørgo som har jobbet sammen med seks andre utviklere og teamleder hos suksessbedriften "},{"_type":"span","marks":["cc441b80197a"],"text":"Dr.Dropin"},{"_type":"span","marks":[],"text":", forteller at man blir inkludert i selskapet helt fra start når man har signert sommerjobb."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"– Å være med på konsulentskolen gjør at man føler seg veldig inkludert hos Capra fra første stund. Capra har vært veldig imøtekommende, og man føler seg raskt som en del av selskapet. Vi har hatt to Oslo-turer, vært på hyttetur, bli-kjent middager og et eget opplegg dagen før CapraCon (Capras internkonferanse) noe som gjorde at vi ble veldig godt kjent med hverandre, før man hadde startet. Da jeg startet for fullt i juni, var det ikke noe skummelt å komme i gang, sier Anna Jansdatter Bjørgo."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"– Vi fikk også satt opp mail, Slack og alt av oppsett nesten ett år før vi startet i sommerjobben. I tillegg blir man invitert på alle interne fagsirkler. Summen av alt dette har gjort at man virkelig føler seg som en del av selskapet, legger Anna til."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Reelle kundeprosjekter med kule teknologier"}]},{"_type":"block","markDefs":[{"_key":"ef5dbb32f418","_type":"link","href":"https://drdropin.no/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Årets sommerstudenter jobber på tre varierte prosjekter ute hos kunder. Underveis blir de fulgt opp av et eget supportteam bestående av dyktige Capra ansatte. Teamleder på prosjektet til "},{"_type":"span","marks":["ef5dbb32f418"],"text":"Dr.Dropin"},{"_type":"span","marks":[],"text":", Amalie Henni student på Datateknologi ved NTNU, har lært mye nytt i et spennende prosjekt."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"– Prosjektet hos kunden i sin helheten har vært det gøyeste. Måten man har jobbet på og hvordan ting er lagt opp med hele sommerjobben er veldig godt gjennomført. Vi har lært masse nytt som kommer godt med når man skal ut i fast jobb etter endt studier. Hvis noen vurderer sommerjobb i Capra, anbefaler jeg på det sterkeste å søke. Vi har gjort så mye gøy, både faglig og ikke minst sosialt. Ettersom at systemet rundt er så bra hos de ansatte i selskapet, har det gjort at vi sommerstudenter har fått blitt med på alt, sier Amalie Henni og fortsetter:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"– Vi har fått mye mer frihet og ansvar i kundeprosjektet enn jeg forventet, men det har vært veldig gøy og lærerikt. Hvis man har en idé og vil prøve ut nye ting, er det godt lagt opp for det. Det har også vært en trygghet at vi har hatt et eget supportteam som har gitt oss den hjelpen vi har trengt underveis."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Når studentene signerer sommerjobb hos Capra, har samtlige av studentene en kartleggingssamtale hvor de får komme med sine ønsker for teknologier de vil jobbe med i sommerjobben. Capra prøver å matche dette så langt det lar seg gjøre, og studentene får utfordret seg til å lære noe nytt i løpet av tiden de er her. Årets rådgiver Sverre Wiedswang student ved Industriell Økonomi og teknologiledelse ved NTNU, anser dette som fordelaktig for arbeidslivet."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"– Som rådgiver fikk jeg mulighet til å rådgi alle teamene i de tre kundeprosjektene. Det har vært veldig kult å se hvor forskjellige kundene er, og hvor ulikt man jobber fra kunde til kunde. Med min bakgrunn fra Indøk (Industriell Økonomi og teknologiledelse), som er litt i sjiktet mellom forretning og utvikling, har jeg lært hvor viktig det er å forstå hvilke forretningsmål produktet du lager må ha. Jeg har også lært masse om arbeidsprosesser, hvordan man forholder seg til ulike kunder, beslutningsprosesser, forventningsstyring, risikoer og utarbeiding av analyser. I sommerjobben får man utfordringer som man ikke får i løpet av studie."}]},{"_type":"block","markDefs":[{"_key":"1137104397ce","_type":"link","href":"https://maritimutdanning.no/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Capra legger til rette for kundeprosjekter med relevante og kule teknologier. Kim Isak Olsen student ved Informatikk: digital økonomi og ledelse ved UIO, teamleder på kundeprosjektet "},{"_type":"span","marks":["1137104397ce"],"text":"Maritim Utdanning"},{"_type":"span","marks":[],"text":" forteller at han har lært mye nytt i sommerjobben."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"– På mitt kundeprosjekt har jeg lært mye nytt rundt Amazon Web Services (AWS), Infrastructure as Code og React. Jeg kommer tidligere fra Vue-verdenen, så det har vært gøy å lære seg React ordentlig. Vi har også brukt Kotlin og PostgreSQL under prosjektet. Man har fått mye domenekunnskap i læringsperioden, og kundeprosjektet har vært utrolig spennende. I tillegg har det i løpet av sommeren blitt holdt ulike kurs og foredrag av Capra-ansatte om SpringBoot, GDPR og hvordan man gir tilbakemelding."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Ønsker du å bli en del av neste års sommerteam hos Capra? Fristen er allerede nå oktober! Les mer info om de ulike rollene her:"}]},{"_type":"block","markDefs":[{"_key":"632a6f669316","_type":"link","href":"https://capraconsulting.teamtailor.com/jobs/1915809-sommerjobb-som-utvikler-i-2023"}],"style":"normal","children":[{"_type":"span","marks":["632a6f669316"],"text":"Sommerjobb 2023 - Utvikler"}]},{"_type":"block","markDefs":[{"_key":"67173faccf67","_type":"link","href":"https://capraconsulting.teamtailor.com/jobs/1916172-sommerjobb-som-radgiver-i-2023"}],"style":"normal","children":[{"_type":"span","marks":["67173faccf67"],"text":"Sommerjobb 2023 - Rådgiver"}]},{"_type":"block","markDefs":[{"_key":"9b6075b63e5a","_type":"link","href":"https://capraconsulting.teamtailor.com/jobs/1915876-sommerjobb-som-teamleder-i-2023"}],"style":"normal","children":[{"_type":"span","marks":["9b6075b63e5a"],"text":"Sommerjobb 2023 - Teamleder"}]}],"tags":["Rekruttering"]}
{"_type":"post","_createdAt":"2023-08-29T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/sommerjobb-i-capra-2023/hero.webp"},"title":"Sommerjobb i Capra 2023","author":"","subtitle":"Tre av årets sommerstudenter, Isabelle Galleberg, Joachim Maksim og Mats Jun Larsen, gir deg et innblikk i deres sommer hos oss.","description":"Tre av årets sommerstudenter, Isabelle Galleberg, Joachim Maksim og Mats Jun Larsen, gir deg et innblikk i deres sommer hos oss.","publishedAt":"2023-08-29T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Capraskolen"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Før sommerjobben startet i juni, deltok vi på Capraskolen. Capraskolen består av tre faglige og sosiale samlinger som forbereder sommerstudentene på sommerjobben."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Kort tid etter at vi signerte kontraktene for sommerjobben, ble vi samlet i Oslo for den første av de tre delene som utgjør Capraskolen. Vi fikk se kontoret, bli bedre kjent med selskapet og de andre sommerstudentene, samt supportteamet som skulle være ansvarlige for oss under sommerjobben. For del to av skolen ble vi tatt med på Capras hytte på Kvitfjell. Der fikk vi kursing i relevante teknologier som Kotlin og AWS, sto på ski og ble enda bedre kjent. Siste og tredje del av Capraskolen var i forbindelse med CapraCon, Capras årlige internkonferanse. Vi fikk et eget sosialt opplegg dagen før konferansen, og deltok på konferansen sammen med hele selskapet. Konferansen bydde på en hel dag med spennende foredrag med tre spor å velge mellom. Sporene var fordelt på fagområder; frontendutvikling, backendutvikling og sky, og team-, prosjekt og utviklingsledelse. Dagen ble avsluttet med middag og fest for alle sammen."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi følte at vi var en del av selskapet fra første dag. Vi ble lagt til i Capra sin Slack og invitert på interne arrangementer slik som fagsirkler, kurs og sosiale samlinger. Én av sommerstudentene dro til og med på Capra sitt julebord. Vi fikk også god oppfølgning av supportteamet fram mot sommeren. Gjennom HR-samtaler ble vi plassert på team basert på kompetanse og egne ønsker for faglig utvikling. Capraskolen gjorde at vi ble godt kjent med teamet vi skulle jobbe med i sommer, de andre sommerstudentene og flere som jobber i Capra lenge før oppstart. Dette førte til høy psykologisk trygghet i teamene og at vi var produktive allerede fra første arbeidsdag."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/sommerjobb-i-capra-2023/fellesbilde.webp","alt":"Bilde av alle i sosial sone"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Sommerjobben"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Sommerstudentene ble fordelt på tre team. Alle teamene fikk jobbe på Capra sine kontorer gjennom hele sommeren, noe som bidro til et godt sosialt miljø på tvers av teamene, fylt med ispauser, bordtennis og Smash Bros. I løpet av sommeren ble vi tatt med på flere sosiale arrangementer, blant annet Escape Room, utflukt til Langøyene og sommerfest på HQ. I tillegg fikk vi sommerstudentene et eget sosialbudsjett som vi kunne forvalte selv. Dette ble blant annet brukt på gokart, padel-turnering, Fangene på fortet, og et rebusløp i Oslo sentrum."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/sommerjobb-i-capra-2023/gokart.webp","alt":"Sommerstudentene etter gokart"},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/sommerjobb-i-capra-2023/volleyball.webp","alt":"Sommerstudentene spiller sandvolleyball"},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/sommerjobb-i-capra-2023/padel.webp","alt":"Sommerstudentene etter padel"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Sommerprosjektene"}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Dr. Dropin"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Teamet med Dr. Dropin som kunde var med på å designe og utvikle en ny digital løsning som skal bidra til å effektivisere eksisterende helsetjenester. Dr. Dropin er et selskap som ønsker å gjøre helsehjelp enklere, rimeligere og bedre for alle som trenger det. Løsningen har potensielt mange bruksområder, og det er mulig at den vil bli brukt i flere av Dr. Dropins avdelinger i fremtiden. Løsningen ble utviklet med Blitz.js, et rammeverk som bygger videre på Next.js med blant annet forenklet dataflyt mellom frontend og backend, innebygd autentisering, og et kraftig CLI som automatisk genererer nyttig template-kode som setter fart i utviklingen."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi jobbet scrum-basert, og hadde demo for kunden omtrent hver uke. Demoen var en fin anledning til å diskutere løsningen vår med kunden, finne forbedringspunkter og planlegge veien videre. Dette ga også Dr. Dropin muligheten til å styre utviklingen av applikasjonen, og gjorde oss mer trygge på at vi kom til å levere noe som var i samsvar med kundens opprinnelige visjon."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"XperiTech"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Teamet som hadde XperiTech som kunde hadde i oppdrag å designe, utvikle og realisere et lojalitetsprogram for Campio. Campio tilbyr den største oversikten over campingplasser i Norden, samt muligheter for å booke campingplasser direkte gjennom Campio.no. For å vinne slaget om sluttbrukere er Campio nødt til å tilby et produkt som skiller seg positivt ut i markedet. Et appellerende lojalitetsprogram var dermed viktig for å beholde og verve nye brukere til løsningen deres."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Oppgaven til teamet var å designe og utvikle dette lojalitetsprogrammet, og etter ønske fra kunde kom vi frem til en løsning der kunder opptjener såkalte CampioPoints når de legger inn bestillinger på Campio.no. Kunden har videre mulighet til å bruke CampioPoints på diverse goder tilbudt i en poengbutikk. I tillegg ønsket XperiTech å øke mengden brukergenerert innhold på plattformen, og til slutt landet vi på en løsning hvor brukere kan legge inn anmeldelser etter opphold på campingplassene."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Samarbeidet mellom teamet og XperiTech har vært helt topp, og vi har lært mye om konsulentrollen i løpet av sommeren. Teamet har jobbet i XperiTech sine eksisterende kodebaser hvor blant annet Next.js, Angular og Node.js brukes. Vi har i tillegg blitt bedre kjent med NoSQL og dokumentdatabaser, samt domenemodellering gjennom workshops med XperiTech."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"IDTag"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Dette teamet utviklet en type administrasjonsplattform for IDTag, kjent som et Tag Management System (TMS). Denne plattformen skal brukes til å administrere “tagger”, som er små brikker som inneholder informasjon om fysiske objekter de er festet til. Prosjektet omfattet også å integrere vår TMS med IDTag sin iOS-app, som brukes til å spore og lese informasjon fra taggene."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Plattformen ble utviklet med teknologiene Kotlin, PostgreSQL, AWS med CDK og React med TypeScript. Vi fikk god oppfølging og hjelp fra supportteamet underveis i prosjektet med alt fra arkitekturvalg og feilsøking."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/sommerjobb-i-capra-2023/kontoret1.webp","alt":"Sommerstudenter på kontoret"},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/sommerjobb-i-capra-2023/kontoret2.webp","alt":"Sommerstudenter jobber"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hvordan oppsummere ikke bare en sommer, men også et helt år med Capraskolen? Det er vanskelig, men Monika fra et av årets sommerteam dro fram noe vi tror har vært viktig for suksessen: “Jeg har aldri vært så godt kjent med teamet i en sommerjobb før som jeg var første dag hos Capra”"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi er alle veldig fornøyde med sommerjobben vår i Capra!Ønsker du å bli en del av neste års sommerteam? Søknadsfristen er allerede 1. oktober, og søknader vurderes fortløpende, så ikke vent med å søke!"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Les mer om de ulike rollene her:"}]},{"_type":"block","markDefs":[{"_key":"298d96040b9e","_type":"link","href":"https://capraconsulting.teamtailor.com/jobs/3032866-sommerjobb-2024-utvikler"}],"style":"normal","children":[{"_type":"span","marks":["298d96040b9e"],"text":"Sommerjobb 2024: Utvikler - Capra"}]},{"_type":"block","markDefs":[{"_key":"68826fe39b5e","_type":"link","href":"https://capraconsulting.teamtailor.com/jobs/3032905-teknisk-teamleder"}],"style":"normal","children":[{"_type":"span","marks":["68826fe39b5e"],"text":"Sommerjobb 2024: Teknisk Teamleder - Capra"}]}]}
{"_type":"post","_createdAt":"2020-08-14T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/survival-of-the-fittest/hero.webp"},"title":"Survival of the Fittest – En intuitiv introduksjon til evolusjonære algoritmer","author":"Stian Steinbakken","subtitle":"Det kan ofte virke som maskinlæring og \"AI\" krever en master i lineær algebra, en PhD i statistikk og 10 års erfaring med Python. I denne artikkelen skal jeg vise deg en liten snarvei, og heller bruke det vi allerede vet fungerer fra biologien – Evolusjonære Algoritmer (EA). EA bruker konsepter som reproduksjon, mutasjon og \"fitness\" til å gjøre alt fra å lære roboter å gå, til å løse reelle optimaliseringsproblemer hos NASA. Dette gjør de i tillegg på en intuitiv måte som alle kan forstå, uten noen forkunnskap.","description":"Det kan ofte virke som maskinlæring og &quot;AI&quot; krever en master i lineær algebra. Her viser jeg deg en liten snarvei.  Les mer her >>","publishedAt":"2020-08-14T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I denne artikkelen skal jeg gå gjennom de grunnleggende stegene i en evolusjonær algoritme, og gi et praktisk eksempel i Kotlin på hvordan vi kan bruke disse til å approksimere Traveling Salesperson Problem (TSP)."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Disclaimer"},{"_type":"span","marks":[],"text":": "},{"_type":"span","marks":["em"],"text":"Jeg har aldri skrevet Kotlin før, så det blir nok ikke den ryddigste koden du har sett."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I tillegg er det et par variabler rundt omkring i koden som er definert utenfor scopet som er vist, men som ikke defineres eksplisitt i artikkelen for å gjøre ting litt ryddigere."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"For eksempel "},{"_type":"span","marks":["code"],"text":"random"},{"_type":"span","marks":[],"text":" fra Kotlin, konstanter som "},{"_type":"span","marks":["code"],"text":"POPULATION_SIZE"},{"_type":"span","marks":[],"text":", støttefunksjoner for å skrive ut løsninger og lignende."}]},{"_type":"block","markDefs":[{"_key":"1e724c3855c3","_type":"link","href":"https://github.com/stianste/evolutionary-TSP"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Den endelige koden kan du finne "},{"_type":"span","marks":["1e724c3855c3"],"text":"her"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"TSP - Selve Problemet"}]},{"_type":"block","markDefs":[{"_key":"59603c1cec0c","_type":"link","href":"https://en.wikipedia.org/wiki/Travelling_salesman_problem"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Som nevnt innledningsvis skal vi bruke EA til å approksimere Traveling Salesperson Problem som eksempel for å forstå teknikkene. Da kan det være greit å ta en rask gjennomgang av hva problemet faktisk er. Wikipedia beskriver TSP på "},{"_type":"span","marks":["59603c1cec0c"],"text":"følgende vis"},{"_type":"span","marks":[],"text":":"}]},{"_type":"block","style":"blockquote","markDefs":[],"children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"Given a list of cities and the distances between each pair of cities, what is the shortest possible route that visits each city and returns to the origin city?"},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Så et eksempel kan formuleres som: \"Gitt at vi starter i Oslo, hva er den korteste ruten vi kan ta for å besøke alle byene i Norge og havne tilbake i Oslo?\""}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"De som har hatt fag som Algoritmer og Datastrukturer eller tilsvarende, husker kanskje at dette er et NP-Hardt problem. Uten å gå i for mye detaljer vil det si at problemet er veldig vanskelig. Det betyr også at om jeg gir deg en løsning og sier \"hei, her har du den korteste ruten for å besøke alle byer i Norge\", så kan ikke du engang "},{"_type":"span","marks":["em"],"text":"verifisere"},{"_type":"span","marks":[],"text":" at min foreslåtte løsning stemmer (i polynomisk tid alle fall)."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Om dette ikke gir 100% mening trenger du ikke uroe deg. Det viktigste vi må vite er at problemet, så vidt vi vet i dag i alle fall, ikke lar seg løse direkte på fornuftig tid. Vi må derfor ta til takke med å "},{"_type":"span","marks":["em"],"text":"approksimere"},{"_type":"span","marks":[],"text":" en løsning."}]},{"_type":"block","markDefs":[{"_key":"0aafde315697","_type":"link","href":"https://people.sc.fsu.edu/~jburkardt/datasets/tsp/tsp.html"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"I denne artikkelen kommer vi derfor til å ta for oss noen mindre eksempler av TSP som vi allerede vet løsningen på, slik at vi kan verifisere at approksimeringen vår er ok. Mer spesifikt fant jeg "},{"_type":"span","marks":["0aafde315697"],"text":"denne siden"},{"_type":"span","marks":[],"text":" med noen mindre datasett. Her finner vi blant annet FIVE problemet som som har korteste løsning på 19. Den har en distansematrise som ser slik ut:"}]},{"_type":"code","code":"0.0 3.0 4.0 2.0 7.0 \n3.0 0.0 4.0 6.0 3.0 \n4.0 4.0 0.0 5.0 8.0 \n2.0 6.0 5.0 0.0 6.0 \n7.0 3.0 8.0 6.0 0.0\n","language":"text"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det vil si at distansen mellom by 1 og by 2 er 3,0. Om dette er 3,0 km eller 3,0 mil spiller egentlig ingen rolle. Tilsvarende er distansen mellom by 1 og by 3, 4,0. Distansen mellom by 2 og by 4 er 6.0 – også videre. Legg merke til at matrisen er symmetrisk og at diagonalen er 0.0 for alle verdier. Dette er forventet ettersom lengden fra by 1 til by 3 vil være den samme som fra by 3 til by 1, og lengden fra en by til seg selv vil være 0."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Om vi kikker på løsningen for problemet så er den 1 -> 3 -> 2 -> 5 -> 4. Altså at vi starter i by 1, drar til by 3, så til by 2, etterfulgt av by 5, og til slutt by 4. Om vi leser av distansematrisen får vi da "},{"_type":"span","marks":["code"],"text":"4.0 + 4.0 + 3.0 + 6.0 = 17"},{"_type":"span","marks":[],"text":". I tillegg må vi, slik problemet er beskrevet, tilbake til by 1. Distansen fra 4 til by 1 er 2.0, så da lander vi på "},{"_type":"span","marks":["code"],"text":"19"},{"_type":"span","marks":[],"text":" som er den optimale løsningen for dette problemet."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi skal bruke FIVE eksempelet for å verifisere at algoritmen kommer fram til en sti av lengde 19. I tillegg skal vi bruke P01 og FRI26 problemet fra samme side for å få testet ut algoritmen på litt større problemer. P01 består av 15 byer og har en optimal rute på lengde 291, mens FRI26 består av 26 byer, og har en optimal løsning på "},{"_type":"span","marks":["code"],"text":"973"},{"_type":"span","marks":[],"text":" i følge datasettet."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"For å gi litt perspektiv på hvor vanskelig oppgavene er, kan det være verdt å merke seg hvor stort \"search space\" hvert problem har – altså hvor mange mulige løsninger det finnes. Om kombinatorikken min fortsatt stemmer noen lunde vil det med 5 byer være 5 måter å velge den første byen på. Deretter gjenstår det 4 byer vi kan velge å besøke. Etter at vi har valgt neste by vil det være 3 valg gjenstående, osv. Vi ender da med "},{"_type":"span","marks":["code"],"text":"5*4*3*2*1 = 5! = 120"},{"_type":"span","marks":[],"text":" potensielle løsninger. Det er ikke for ille, og gjør egentlig problemet enkelt fordi vi bare kan prøve alle 120 løsningene, og velge den med kortest lengde. Om vi tar 26 byer dog, blir det en litt annen historie. Med 26 får vi "},{"_type":"span","marks":["code"],"text":"26! = 4.0329146e+26"},{"_type":"span","marks":[],"text":" mulige løsninger – også kjent som helt vanvittig mange."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi starter raskt med å definere matrisen for FIVE problemet i programmet vårt i Kotlin:"}]},{"_type":"code","code":"val exampleDistanceMatrix = arrayOf( \n  doubleArrayOf(0.0, 3.0, 4.0, 2.0, 7.0), \n  doubleArrayOf(3.0, 0.0, 4.0, 6.0, 3.0), \n  doubleArrayOf(4.0, 4.0, 0.0, 5.0, 8.0), \n  doubleArrayOf(2.0, 6.0, 5.0, 0.0, 6.0), \n  doubleArrayOf(7.0, 3.0, 8.0, 6.0, 0.0) \n)\n","language":"kt"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Byggesteinene i en evolusjonær algoritme"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Så, nå som vi har fått en forståelse for problemet vi skal løse, kan vi se nærmere på verktøyet vi skal bruke. En evolusjonær algoritme består av et par grunnleggende konsepter, samt noen enkle steg i selve algoritmen."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Representasjon"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det første vi trenger er en form for "},{"_type":"span","marks":["strong"],"text":"representasjon"},{"_type":"span","marks":[],"text":" av en potensiell løsning, noe også kan se på som "},{"_type":"span","marks":["strong"],"text":"genomet"},{"_type":"span","marks":[],"text":" til løsningen. I vårt tilfelle vet vi både hvor lang en potensiell løsning vil være (antall byer i problemet), samt de mulige verdiene byene kan ha. Derfor vil en fornuftig representasjon i vårt tilfelle være en vektor. Andre problemer kan kreve andre representasjoner som matriser eller trær. Om vi velger å representere løsninger via vektorer kan en mulig løsning for FIVE problemet være "},{"_type":"span","marks":["code"],"text":"[1,2,3,4,5,1]"},{"_type":"span","marks":[],"text":", altså å bare besøke alle byene i rekkefølge. Den optimale løsningen vil være vektoren "},{"_type":"span","marks":["code"],"text":"[1,3,2,5,4,1]"},{"_type":"span","marks":[],"text":" (som vist i forrige seksjon). Siden vi dog vet at vi må begynne og slutte i første by, kan vi sløyfe "},{"_type":"span","marks":["code"],"text":"1"},{"_type":"span","marks":[],"text":" ettersom den byen er implisitt. Altså at representasjonen for den optimale løsningen i programmet vårt blir "},{"_type":"span","marks":["code"],"text":"[3,2,5,4]"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Fitness"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I en EA er vi også avhengig av å kunne vurdere hvor god en løsning er. Til dette bruker vi noe som vi kaller \"fitness\". Fitnessen til en løsning vil påvirke sannsynligheten for at denne løsningen \"overlever\" og får lov til å reprodusere seg og lage nye løsninger – akkurat som i evolusjonen! Vi må derfor definere en fitnessfunksjon som er en funksjon som tar inn en mulig løsning, or returnerer en score på hvor god løsningen er. Denne funksjonen vil ha stor innvirkning på hvor godt algoritmen vil være i stand til å tilpasse løsninger."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I vår tilfelle er fitnessfunksjonen relativt enkel, men ikke triviell. Vi ønsker en funksjon som straffer løsninger hvor den resulterende ruten er lang, og belønne korte løsninger. La oss si at verst tenkelige løsning har en lengde på 100. Da vil vi helst at en funksjon hvor en løsning med lengde 100 har en fitness som nærmer seg 0, mens en kort løsning har en langt høyere høy fitness. Dessverre vet vi hverken verste eller beste mulige løsning på problemene vi skal løse. Vi må derfor "},{"_type":"span","marks":["em"],"text":"estimere"},{"_type":"span","marks":[],"text":" dette taket på funksjonen. Jeg har valgt å bruke summen av lengste distanse mellom hver by som tak på hvor dårlig algoritmen potensielt sett kan gjøre det. Vi kan definere en funksjon som tar maks distanse fra hver by slik:"}]},{"_type":"code","code":"fun getWorstPotentialScore(distanceMatrix: Array<DoubleArray>): Double {\n    return distanceMatrix.mapNotNull {it.max()}.toTypedArray().sumByDouble { it }\n}\n","language":"kt"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her tar vi altså maks av her rad i distansematrisen. Det er viktig å merke se at dette er en heurestikk, og at det finnes mange forskjellige måter å estimere dette på. Det finnes også teknikker for å bruke negativ fitness, noe jeg i ettertid lurer på hadde vært mye mer passende for dette problemet."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Basert på infoen over, kan vi definere fitness funksjonen vår slik:"}]},{"_type":"code","code":"fun scoreFitness(solution: IntArray, distanceMatrix: Array<DoubleArray>, maxFitness: Double): Double {\n    var routeLength = distanceMatrix[0][solution[0]]\n    for ( i in 1 until solution.size) {\n        routeLength += distanceMatrix[solution[i-1]][solution[i]]\n    }\n\n    routeLength += distanceMatrix[solution.last()][0]\n\n    return maxFitness - routeLength\n}\n","language":"kt"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her tar vi inn "},{"_type":"span","marks":["code"],"text":"solution"},{"_type":"span","marks":[],"text":", som er den foreslåtte løsningen som vi ønsker å gi en fitness-score. Vi starter med å sette "},{"_type":"span","marks":["code"],"text":"routeLength"},{"_type":"span","marks":[],"text":" til å være distansen fra by 1 til den første byen i "},{"_type":"span","marks":["code"],"text":"solution"},{"_type":"span","marks":[],"text":". Deretter itererer vi bare over og legger til distansene til den totale lengden, før vi tilslutt legger til distansen fra den siste byen i løsningen tilbake til by 1. Deretter returnerer vi "},{"_type":"span","marks":["code"],"text":"maxFitness - routeLength"},{"_type":"span","marks":[],"text":", som diskutert over."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Så for eksempel vil fitness scoren til den trivielle løsningen hvor vi besøker byene i rekkefølge være "},{"_type":"span","marks":["code"],"text":"scoreFitness([2,3,4,5], exampleDistanceMatrix, maxFitness = 35.0) = 35.0 - (3.0 + 4.0 + 5.0 + 6.0 + 7.0) = 10.0"},{"_type":"span","marks":[],"text":", mens den optimale løsningen vil ha en fitness score på "},{"_type":"span","marks":["code"],"text":"scoreFitness([3,2,5,4], exampleDistanceMatrix, maxFitness = 35.0) = 35.0 - 19.0 = 16.0"},{"_type":"span","marks":[],"text":". Her ser vi at forskjellen mellom den trivielle løsningen og den optimale ikke veldig stor. Det er definitivt rom for forbedring i taket og fitnessfunksjonen vår, men som et eksempel duger den godt."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Seleksjon"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Nå som vi har definert en fitnessfunksjon, kan vi evaluere alle medlemmer i en generasjon. Basert på denne evalueringen, kan vi velge ut hvilke medlemmer som skal få muligheten til å reprodusere seg."}]},{"_type":"block","markDefs":[],"style":"h4","children":[{"_type":"span","marks":[],"text":"Lottery Selection"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Den enkleste løsningen for seleksjon vil være å gjøre "},{"_type":"span","marks":["code"],"text":"sannynligheten for å bli valgt proposjonal med fitnessen til hvert individ"},{"_type":"span","marks":[],"text":". Dette kan oppnåes ved å opprette en tabell hvor vi allokerer plasser for hvert medlem basert på deres fitness – et slags lotteri. For eksempel, om vi har en populasjon på tre stykker, og den ene har fitness "},{"_type":"span","marks":["code"],"text":"50"},{"_type":"span","marks":[],"text":", den neste "},{"_type":"span","marks":["code"],"text":"30"},{"_type":"span","marks":[],"text":" og den siste "},{"_type":"span","marks":["code"],"text":"20"},{"_type":"span","marks":[],"text":", kan vi lage en tabell på størrelse "},{"_type":"span","marks":["code"],"text":"50 + 30 + 20 = 100"},{"_type":"span","marks":[],"text":", og gi 50 plasser til det første medlemmet, 30 til det neste, og 20 til det siste. Dersom vi velger tilfeldig fra denne tabellen vil det da være 50/100 = 50% sjanse for å velge medlemmet med høyest fitness, 30/100 = 30% sjanse for å velge den med nest høyest fitness, og 20% sjanse for sistemann."}]},{"_type":"block","markDefs":[],"style":"h4","children":[{"_type":"span","marks":[],"text":"Tournament Selection"}]},{"_type":"block","markDefs":[{"_key":"3a5febff4f75","_type":"link","href":"https://en.wikipedia.org/wiki/Tournament_selection"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Jeg prøvde ut lotteriteknikken først, men resultatene ble ikke veldig gode. Jeg valgte derfor å bytte teknikk til "},{"_type":"span","marks":["3a5febff4f75"],"text":"Deterministic Tournament Selection"},{"_type":"span","marks":[],"text":". Denne teknikken er egentlig enda enklere, og krever mindre ressurser enn en naiv implementasjon av lotteriet nevnt over. Den går rett og slett ut på å velge "},{"_type":"span","marks":["code"],"text":"k"},{"_type":"span","marks":[],"text":" medlemmer fra populasjonen, og la disse ha et \"tournament\" om hvem som skal få lov å reprodusere seg. Her finnes det mange måter for hvordan man kan gjennomføre en slik turnering, men siden vi har valgt å gjøre den "},{"_type":"span","marks":["em"],"text":"deterministisk"},{"_type":"span","marks":[],"text":" sier vi rett og slett at, av de "},{"_type":"span","marks":["code"],"text":"k"},{"_type":"span","marks":[],"text":" medlemmene som vår så heldige å bli valgt ut til å konkurrere, så lar vi den beste vinne."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Koden for dette kan se slik ut:"}]},{"_type":"code","code":"fun deterministicTournamentSelection(\n        population: Array<IntArray>,\n        distanceMatrix: Array<DoubleArray>,\n        worstPossibleScore: Double,\n        k: Int = 10\n    ): IntArray {\n\n    val tournamentCandidates = population.toList().shuffled(random).take(k)\n    return tournamentCandidates.maxBy { scoreFitness(it, distanceMatrix, worstPossibleScore) }!!\n}\n","language":"kt"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Som du sikkert ser så tar denne funksjonen seg også av å score fitnessen til populasjonen vi gir den. Det følger ikke helt \"single responsibility prinsippet\", men funker for en enkel demo."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Tournament Selection skaper en fin balanse mellom utforsking (ettersom det er høy sannsynlighet for å få med løsninger som ikke nødvendigvis har så høy fitness), samtidig som den beste alltid vinner, slik at vi vil gi favør til gode løsninger. I motsetning vil lotteriet nevnt over ofte gi favør til høyere og høyere fitness, som gjør at vi snevrer inn og utforsker mindre nye løsninger, som kan føre til at vi setter oss fast i lokale optimum, men ikke nødvendigvis finner den beste løsningen."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"For reproduksjon trenger man som oftest to parter, så jeg har også lagget en hjelpefunksjon som returnerer en tuppel med to foreldre som har blitt valgt ut via turnament:"}]},{"_type":"code","code":"fun naturalSelectionByTournament(\n        population: Array<IntArray>,\n        distanceMatrix: Array<DoubleArray>,\n        worstPossibleScore: Double,\n        k: Int = 10\n    ): Pair<IntArray, IntArray> {\n\n    return Pair(\n        deterministicTournamentSelection(population, distanceMatrix, worstPossibleScore, k),\n        deterministicTournamentSelection(population, distanceMatrix, worstPossibleScore, k)\n    )\n}\n","language":"kt"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Med denne måten kan vi risikere at enkelte individer parrer seg med seg selv, men det er detaljer som heldigvis ikke har så mye å si i den virtuelle verden."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Reproduksjon"}]},{"_type":"block","markDefs":[{"_key":"3b169f2e4baa","_type":"link","href":"https://en.wikipedia.org/wiki/Crossover_(genetic_algorithm)"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Etter at vi nå har en metode for å velge ut foreldre, må vi også ha en måte å la dem reprodusere seg på og lage nytt avkom. Til dette bruker vi noe som heter \"crossover\". "},{"_type":"span","marks":["3b169f2e4baa"],"text":"Crossover"},{"_type":"span","marks":[],"text":" er rett og slett en funksjon som tar inn to (eller forsåvidt flere) medlemmer av populasjonen, og returnerer et nytt (eller flere) individ(er) som er en kombinasjon av sine foreldre. Hvordan teknikk man kan bruke her avhenger av problemet vi skal løse, og representasjonen som er brukt. Om vårt problem ga mening å representere med flytallsvektorer, kunne vi for eksempel bare sagt at avkommet bare var snittet av foreldrene. I vårt tilfelle er det dessverre ikke så enkelt – det gir ikke mening å si at snittet av by nummer 2 og 3 er by 2.5. Vi må derfor finne på noe litt smartere."}]},{"_type":"block","markDefs":[],"style":"h4","children":[{"_type":"span","marks":[],"text":"Order Crossover Operator"}]},{"_type":"block","markDefs":[{"_key":"4879b490669e","_type":"link","href":"https://www.hindawi.com/journals/cin/2017/7430125/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Etter litt Googling fant jeg fram til Order Crossover Operator fra "},{"_type":"span","marks":["4879b490669e"],"text":"denne artikklen"},{"_type":"span","marks":[],"text":". Lat som jeg er, legger jeg bare ved det relevante utdraget:"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/survival-of-the-fittest/crossover-info.webp","alt":"Order Crossover Operator utdrag"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Kort fortalt tar vi et vindu på en tilfeldig plass i begge foreldrene og beholder dette i begge barna. Deretter fyller vi på med verdiene fra den andre forelderen som ikke allerede finnes i barnet, fram til alle tall er plasserte. Denne teknikken lar oss beholde deler av rekkefølgen som var i foreldrene, og sørger samtidig for at ingen byer blir besøkt to ganger (altså at ingen tall gjentar seg)."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Artikkelen foreslår en ny metode for å oppnå samme resultat, men jeg valgte å gjøre det enkelt å prøve ut Order Crossover Operator først."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Jeg har i tillegg forsøkt å illustrere prosessen her, hvor "},{"_type":"span","marks":["code"],"text":"P1"},{"_type":"span","marks":[],"text":" er den første foreldren, og "},{"_type":"span","marks":["code"],"text":"P2"},{"_type":"span","marks":[],"text":" den andre:"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/survival-of-the-fittest/crossover-illustration.webp","alt":"Crossover illustrasjon"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her er en rett fram, naiv implementasjon av Order Crossover Operator i Kotlin:"}]},{"_type":"code","code":"fun orderCrossover(parent1: IntArray, parent2: IntArray, windowSize: Int = 3): IntArray {\n    val parentLengths = parent1.size\n    val splitIndex = random.nextInt(parentLengths - windowSize - 1)\n\n    val offspring = IntArray(parentLengths)\n\n    for (i in splitIndex until splitIndex + windowSize) {\n        offspring[i] = parent1[i]\n    }\n\n    var offspringBaseIndex = 0\n    for (i in parent2.indices) {\n        val parentIndex  = (i + splitIndex + windowSize) % parentLengths\n        val offspringIndex  = (offspringBaseIndex + splitIndex + windowSize) % parentLengths\n        val candidate = parent2[parentIndex]\n        if (!offspring.contains(candidate)) {\n            offspring[offspringIndex] = candidate\n            offspringBaseIndex += 1\n        }\n    }\n\n    return offspring\n}\n","language":"kt"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her kunne og burde man også laget det andre avkommet i samme slengen, men jeg valgte heller å gjøre det enkelt og bare generere ett barn, så heller kjøre funksjonen igjen med nye foreldre. Nok en detalj med rom for forbedring."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Mutasjon"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det neste verktøyet vi trenger i verktøykassa vår er mutasjon. Mutasjon er nødvendig for å sørge for at vi ikke låser oss fast i en bestemt del av søkerommet. Mutasjon er rett og slett en liten tilfeldig endring i genomet som skjer med en viss sannsynlighet. Om representasjonen vår var binære vektorer, kunne en mulig mutasjon vært å flippe en bit med en viss sannsynlighet. Med vår representasjon går ikke det dessverre. Jeg har i stedet valgt å, med en viss sannsynlighet, bytte om på to byer. Da sørger vi for at vi får prøvd ut nye løsninger, samtidig som vi sørger for at ingen byer blir besøkt to ganger."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"En rett fram, naiv implementasjon kan se slik ut:"}]},{"_type":"code","code":"fun mutate(genome: IntArray, mutationChance: Double = 0.01): IntArray {\n    if (random.nextDouble() > mutationChance) {\n        return genome\n    }\n\n    val firstSwapIndex = random.nextInt(genome.size)\n    var secondSwapIndex = random.nextInt(genome.size)\n\n    while (secondSwapIndex == firstSwapIndex)\n        secondSwapIndex = random.nextInt(genome.size)\n\n    val newGenome = genome.toMutableList()\n    newGenome[firstSwapIndex] = genome[secondSwapIndex]\n    newGenome[secondSwapIndex] = genome[firstSwapIndex]\n\n    return newGenome.toIntArray()\n}\n","language":"kt"},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Replacement"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det siste verktøyet vi trenger er \"replacement\", som går på hvordan man går fram for å erstatte medlemmer fra forrige generasjon i neste. Jeg forsøkte først å gjøre det enkelt og bare erstatte hele populasjonen med de nye medlemmene. Dette funket ok, men resultatene ble drastisk bedre etter at jeg la til en funksjon som beholdt top 10% av forrige generasjon og fjernet nederste 10% av den nye generasjonen. Dette gir favør til gode løsninger, og gjorde at algoritmen konvergerte mot en god løsning mye raskere. En funksjon som gjør dette kan se slik ut:"}]},{"_type":"code","code":"fun combinePopulations(\n        currentPopulation: Array<IntArray>,\n        nextPopulation: Array<IntArray>,\n        ratio: Double,\n        distanceMatrix: Array<DoubleArray>,\n        worstPossibleScore: Double\n    ): Array<IntArray> {\n\n    fun getTopRatioCandidatesOf(population: Array<IntArray>, ratio: Double): Array<IntArray> {\n        return population.sortedBy { -1.0 * scoreFitness(it, distanceMatrix, worstPossibleScore) }\n            .take((population.size * ratio).toInt()).toTypedArray()\n    }\n\n    return getTopRatioCandidatesOf(currentPopulation, 1.0 - ratio) +\n            getTopRatioCandidatesOf(nextPopulation, ratio)\n}\n","language":"kt"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her er det litt småting som kunne vært bedre, som f.eks. at utfører arbeid som allerede er gjort og scorer fitness igjen, men det er ikke så nøye."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Grunnleggende steg"}]},{"_type":"block","markDefs":[{"_key":"2983eee950b3","_type":"link","href":"https://en.wikipedia.org/wiki/Evolutionary_algorithm"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Nå som vi har de grunnleggende byggestenene på plass, skal vi se på hvordan vi kan sette dette sammen til en algoritme. Stjålet skamløst fra Wikipedia så kan "},{"_type":"span","marks":["2983eee950b3"],"text":"basisstegene"},{"_type":"span","marks":[],"text":" oppsummeres som:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Generere en tilfeldig første generasjon"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Fram til ønsket terminering, gjenta følgende:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Evaluer nåværende populasjons fitness"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Velg ut de medlemmene med høyest fitness"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Lag nye medlemmer via crossover og mutasjon basert på de utvalgte medlemmene"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Erstatt tidligere medlemmer i populasjonen med nye medlemmer."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Dette er basisstegene i algoritmen, men de nøyaktige detaljene avhenger av representasjon og problemet som skal løses. For vår del vil vi for eksempel aldri vite om vi har funnet optimal løsning, og kan derfor ikke bruke dette som kriterie for når vi burde stoppe. Vi setter heller et tak på antall generasjoner, og velger den beste løsningen vi finner i løpet av de."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi trenger også en en liten hjelpefunksjon for å generere tilfeldige løsninger:"}]},{"_type":"code","code":"fun generateRandomSolution(totalNumberOfCities: Int): IntArray {\n    return (1 until totalNumberOfCities).toList().shuffled(random).toIntArray()\n}\n","language":"kt"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Dette er bare en enkel funksjon som genererer en liste fra 1 til antall byer (så i FIVE eksempelet "},{"_type":"span","marks":["code"],"text":"[2,3,4,5]"},{"_type":"span","marks":[],"text":"), stokker den i en tilfeldig rekkefølge og returnerer listen."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Deretter kan vi gjenta denne funksjonen for å generere en tilfeldig, initiell populasjon."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Sy det hele sammen"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Nå skal vi ha alle funksjonene vi trenger til å sy det hele sammen til en fungerende algoritme:"}]},{"_type":"code","code":"val startTime = System.currentTimeMillis()\n\n    val FILEPATH = p01_filepath\n    val optimalSolution = if (FILEPATH == fri26_filepath) 937 else 291\n\n    val POPULATION_SIZE = 150\n    val TOURNAMENT_SIZE = POPULATION_SIZE / 5\n    val MUTATION_CHANCE = 0.025\n    val MAX_ITERATIONS = 100\n    val WINDOW_SIZE = 2\n    val NEW_OLD_POPULATION_RATIO = 0.1\n\n    val distanceMatrix = getDistanceMatrixFromFile(FILEPATH)\n    val WORST_POSSIBLE_SCORE = getWorstPotentialScore(distanceMatrix)\n\n    println(\"Worst possible score: $WORST_POSSIBLE_SCORE\")\n\n    var currentPopulation = Array(POPULATION_SIZE) { generateRandomSolution(distanceMatrix.size)}\n    println(\"Preview of initial population:\")\n    currentPopulation.take(10).forEach ( ::printPopulationMember )\n\n    var bestFitness = 0.0\n    var bestSolution = intArrayOf()\n    var bestSolutionGeneration = 0\n    var bestSolutionTime = 0L\n\n    (0..MAX_ITERATIONS).forEach{ generationNumber ->\n        val nextPopulation = mutableListOf<IntArray>()\n        val generationFitnesses = DoubleArray(POPULATION_SIZE)\n\n        (0 until POPULATION_SIZE).forEach {\n            val parents = naturalSelectionByTournament(\n                currentPopulation,\n                distanceMatrix,\n                WORST_POSSIBLE_SCORE,\n                k = TOURNAMENT_SIZE\n            )\n            val newMember = orderCrossover(parents.first, parents.second, WINDOW_SIZE)\n            val mutatedMember = mutate(newMember, MUTATION_CHANCE)\n\n            val fitness = scoreFitness(mutatedMember, distanceMatrix, WORST_POSSIBLE_SCORE)\n            generationFitnesses[it] = fitness\n\n            if (fitness > bestFitness) {\n                // Kode for å holde styr på beste resultat så langt\n            }\n\n            nextPopulation.add(mutatedMember)\n        }\n\n        val averageGenerationFitness = generationFitnesses.sum() / generationFitnesses.size\n        println(\"Average fitness of generation $generationNumber was $averageGenerationFitness\")\n\n        currentPopulation = combinePopulations(\n            currentPopulation,\n            nextPopulation.toTypedArray(),\n            NEW_OLD_POPULATION_RATIO,\n            distanceMatrix,\n            WORST_POSSIBLE_SCORE\n        )\n    }\n\n    println(\"Finished after $MAX_ITERATIONS iterations. Best fitness: $bestFitness, \" +\n            \"which results in route length ${WORST_POSSIBLE_SCORE - bestFitness}, \" +\n            \"which is ${WORST_POSSIBLE_SCORE - bestFitness - optimalSolution} \" +\n            \"away from optimal solution. \" +\n            \"This solution was found in generation $bestSolutionGeneration \" +\n            \"after $bestSolutionTime ms\"\n    )\n    printPopulationMember(bestSolution)\n}\n","language":"kt"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Om man kikker nærmere på koden ser man at mye av den egentlig bare er hyperparametere, printing av info og å holde styr på fitness underveis. Jeg har også valgt å ta ut noe av koden som oppdaterer variabler når en ny beste løsning er funnet."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"For p01 problemet produserer koden noe output som:"}]},{"_type":"code","code":"Worst possible score: 1059.0\nPreview of initial population:\n[11, 8, 5, 10, 9, 7, 6, 2, 12, 3, 15, 14, 4, 13, ]\n[4, 6, 5, 13, 15, 12, 10, 9, 14, 11, 8, 7, 3, 2, ]\n[11, 9, 14, 15, 6, 2, 4, 5, 10, 3, 8, 7, 12, 13, ]\n[7, 12, 13, 8, 5, 14, 6, 11, 15, 9, 2, 4, 3, 10, ]\n[15, 7, 10, 6, 4, 14, 8, 2, 9, 12, 5, 11, 13, 3, ]\n[11, 12, 3, 6, 8, 10, 9, 13, 5, 2, 7, 15, 4, 14, ]\n[9, 5, 13, 7, 15, 12, 2, 4, 14, 3, 6, 11, 10, 8, ]\n[7, 8, 2, 15, 12, 5, 11, 13, 10, 3, 4, 6, 9, 14, ]\n[9, 6, 13, 11, 14, 8, 2, 5, 12, 3, 4, 7, 15, 10, ]\n[9, 15, 11, 14, 12, 5, 13, 3, 2, 6, 4, 10, 7, 8, ]\nImprovement in generation number 0:\n[11, 4, 14, 8, 12, 6, 10, 3, 15, 7, 9, 2, 5, 13, ]\n564.0\nResulting in route length: 495.0\nAverage fitness of generation 0 was 562.9\n.\n.\n.\nAverage fitness of generation 100 was 765.9933333333333\nFinished after 100 iterations. Best fitness: 768.0, which results in route length 291.0, which is 0.0 away from optimal solution.\nThis solution was found in generation 59 after 172 ms.\n[11, 4, 6, 8, 10, 14, 12, 3, 7, 5, 9, 15, 2, 13]\n","language":"text"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"For FRI26 er ikke resultatene fult 100%, men fortsatt gode, og gir – etter litt tweaking av hyperparametere – følgende output:"}]},{"_type":"code","code":"Finished after 1000 iterations. Best fitness: 4656.0, which results in route length 975.0, which is 38.0 away from optimal solution. This solution was found in generation 458 after 1569 ms\n[25, 24, 23, 26, 22, 21, 17, 18, 20, 19, 16, 10, 9, 8, 7, 5, 6, 4, 2, 3, 14, 15, 13, 11, 12, ]\n","language":"text"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Om vi kiker på fasiten til FRI26 ser vi at den er:"}]},{"_type":"code","code":"[25, 24, 23, 26, 22, 21, 17, 18, 20, 19, 16, 11, 12, 13, 15, 14, 10, 9, 8, 7, 5, 6, 4, 3, 2, ]\n","language":"text"},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Avslutning og framtidig arbeid"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Du har nå fått en innføring i de generelle byggeblokkene i en evolusjonær algoritme og, stegene den består av. Her er det fortsatt masse rom for forbedring og leking! Det finnes for eksempel egne teknikker som \"Islands\" hvor man har flere forskjellige populasjoner. Det er egentlig bare fantasien og evolusjon som setter grenser for hva man kan få til. Her er det fritt fram for å fortsette optimalisering, leke seg med andre hyperparametere, andre fitnessfunksjoner og masse annet snacks om man ønsker."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Så neste gang du har et problem du ønsker å approksimere, vurderer om en evolusjonær algoritme kan være løsningen."}]}],"tags":["Maskinlæring"]}
{"_type":"post","_createdAt":"2021-06-08T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/tailwindcss-det-neste-logiske-steget/hero.webp"},"title":"TailwindCSS: det neste logiske steget?","author":"Øyvind Aukner","subtitle":"TailwindCSS, ofte omtalt bare som tailwind, er et utility-first CSS-bibliotek for å hurtig bygge brukergrensesnitt med høy grad av egenkontroll.","description":"I 2017 ble TailwindCSS lansert, og med det en ny tilnærming til å strukturere og forholde seg til styling av nettsider. I stedet for klassiske frontend-rammeverk, er tailwind såkalt utility-first","publishedAt":"2021-06-08T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Vanligvis..."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Når man skal lage en nettside, pleier man tradisjonelt sett å benytte seg av CSS/SASS eller et frontend-rammeverk som Bootstrap eller Materialize. Fordelen med å kode selv er kontroll, mens ulempene er lav hastighet, mange ekstra filer og mye lenking til klassenavn i HTML. Rammeverk gir på den andre siden hurtighet til erfarne utviklere samt utvidet mulighetsrom for utviklere med kortere fartstid. Ulempen er at kunnskapen om det nye rammeverket også blir en ny og isolert ferdighet som er vanskelig å overføre tilbake til CSS. Flere av rammeverkene har ofte også sin egen «look»: Om du for eksempel har bygget et par sider med Bootstrap, vil du fort kjenne igjen dette når du lander på en ny side – man sier da at denne siden er «Bootstrap’et». Dette har utviklet seg til en look mange ønsker å unngå om det er et mål å skille seg litt ut visuelt."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"..men nå!"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I 2017 ble TailwindCSS lansert, og med det en ny tilnærming til å strukturere og forholde seg til styling av nettsider. I stedet for klassiske frontend-rammeverk, er tailwind såkalt "},{"_type":"span","marks":["em"],"text":"utility-first"},{"_type":"span","marks":[],"text":". Dette refererer til at det for det meste består av en haug av slike hjelpeklasser, eller utilities, som har blitt definert for alt du kan tenke deg. Være seg bredde, farge, skygge, margin eller animasjoner. De er utarbeidet for å være dekkende og samtidig innsnevrende. Det er også bygget inn støtte for å optimalisere koden ved å fjerne alle hjelpeklasser du ikke trenger i bygg-steget, og du holder dermed prosjektets størrelse i produksjon under kontroll ved å kun "},{"_type":"span","marks":["em"],"text":"shippe"},{"_type":"span","marks":[],"text":" det du trenger."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Du får et subset av styling-funksjonalitet som skal fungere for alle vanlige behov. For eksempel fargevalg fra 100 som er lys, til 900 som er mørk i steg på 100. I tillegg kan alt overstyres og utvides i en konfigurasjonsfil, slik at du enkelt kan integrere den visuelle profilen til produktet ditt. Merk at hjelpeklassene er så minimalistiske som mulig og gir kun en og en funksjon. Det er altså en annen måte å tenke på enn for eksempel rammeverk som gir deg en fiks ferdig stylet knapp."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Under følger et eksempel jeg har lånt fra deres egen dokumentasjon. Det første bildet viser en tradisjonell tankegang, mens det andre viser hvordan man kan oppnå det samme med tailwind. Legg spesielt merke til at du med tailwind unngår behovet for å navngi og koble alle de forskjellige nivåene i grensesnittet. Både i koden og mentalt naturligvis. Dette er det jeg mener med lenking frem og tilbake."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I første bildet ser vi et eksempel på tradisjonell tankegang, men det andre illustrerer hvordan du kan oppnå det samme ved å ta i bruk tailwind."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/tailwindcss-det-neste-logiske-steget/eksempel1.webp","alt":"Eksempel uten Tailwind"},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/tailwindcss-det-neste-logiske-steget/eksempel2.webp","alt":"Eksempel med Tailwind"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Utfordringer"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"De eneste ulempene med tailwind som jeg ser, er at det er enda en (liten) ting til å lære, og at det krever en liten smule oppsett. I 2017 ble det popularisert et nytt (for meg) uttrykk: «Javascript fatigue». Og om du hopper fra trend til trend er det nok et innslag av dette i CSS-verdenen også."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Tailwind er i utgangspunktet svært enkelt å sette opp. Når det er sagt så har jeg etter 4-5 suksessrike forsøk ikke klart det på første forsøk kun ved å følge guiden. Det har alltid vært behov for noe småjustering for å få det til å fungere. Dette ser heldigvis ut til å bli bedre, og sist gang var betydelig lettere enn første. Så, kanskje neste prosjekt går på første forsøk!"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Utover det er det enkelte innvendinger og reaksjoner som er vanlige: Tailwind kan minne om inline styles, og kan ved første møte se svært rotete ut. Du tenker kanskje også at det etterhvert kan bli utfordrende å vedlikeholde. La oss se nærmere på disse påstandene."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Meeeen, er ikke dette bare inline styles?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"En vanlig innvending når man først hører om tailwind er at «er ikke dette bare inline styles»? Og i bunn og grunn er det en hel del sannhet til dette."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Men tailwinds hjelpeklasser tilbyr noen fordeler over vanlig inline kode. Klassene er langt mer konsise og treffer igjen et sweet spot der det kan bli noe mer massivt enn vanlige klassenavn, men fortsatt langt bedre enn hva inline styles med vanlig CSS ville vært. De største fordelene man får over vanlig CSS, er en raskere vei til responsivitet og enkel tilstandshåndtering. Du kan svært enkelt definere forskjellig design for de forskjellige brytepunktene. Du får også på liknende vis evnen til å definere egen funksjonalitet på hover og fokus, altså tilstandshåndtering."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Motivasjonen til å bruke Tailwind i stedet for de mer omfattende rammeverkene er kontroll og nærhet til CSS. Alle utviklere, og kanskje spesielt frontend-utviklere, står ofte overfor valget «hva skal jeg lære meg nå». Jeg har landet på en filosofi som i mange tilfeller har gitt klarhet: "},{"_type":"span","marks":["em"],"text":"når i tvil, fokuser på det mest eller nærmest det mest grunnleggende!"},{"_type":"span","marks":[],"text":" Dette mener jeg er et av hovedargumentene for tailwind kontra rammeverk som Bootstrap."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Tailwind – mener jeg – eksisterer i goldilocks-sonen mellom å få mektig drahjelp med CSS og å komme til skade for å lære enda et nytt rammeverk. Og et gitt rammeverk vet vi jo at kan ende opp med å være mer eller mindre utdatert om få år. Tailwind lar deg ha et mer eller mindre 1:1 forhold mellom koden din og CSS-en den representerer. Du vil derfor fortsette å lære om grunnleggende CSS ettersom du tar biblioteket mer og mer i bruk."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Vedlikehold"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Ok, du har hørt at tailwind er den nye hotte, freshe tingen å snuse litt på. Du har kanskje til og med tatt steget og prøvd det ut litt og du synes siden din blir fiffig og koden sexy. Men vedlikehold kan da umulig være noe særlig? Innen enhver knapp og sentrerte div er tilbakelagt, må jo koden være full av repetisjon og lange tungleste inline stylinger? Dette rammeverket må aldeles kun holde seg til hobbyprosjekter og hackatons der du har mindre tid enn vett – eller hva?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Nå beveger jeg meg over i noe ukjent land. Selv har jeg kun brukt tailwind i mindre prosjekter, men hører fra andre at det skal være fullt mulig – og til og med en fryd – å oppskalere. Et av essene i ermet er muligheten til å dra ut og gruppere repeterende kode. Dette kan gjøres for eksempel med en knapp eller andre elementer som er standard flere steder på siden. Her er det dog viktig å motstå fristelsen til å putte for mye i hver variabel. En av grunnpilarene i tailwind er at hver klasse skal gjøre så lite som mulig. Nettopp dette med oppskalering og kanskje til og med team er noe undertegnede selv håper å teste ut i tiden som kommer. Jeg er spent, og har troa!"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Syntax – kanskje det neste logiske steget"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Når det kommer til syntax er det mange subjektive preferanser. En av innvendingene du kan få når du vil introdusere tailwind er at det ser stygt eller rotete ut. Dette er litt smak og behag. Vil du ha litt mer rot og sammenheklet kode i filene dine, eller vil du ha et mer rotete filsystem med med mer lenking? Etter å ha brukt tailwind en stund synes jeg nå prosjekter med .css- eller .sass-filer ser rotete ut, og vil helst slippe å ha en eneste CSS-fil. Det er nok mest en vanesak."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Selv vil jeg våge å gå så langt som å foreslå at tailwind representerer et logisk neste steg i fremgangen av utvikleropplevelsen. Prøv å følg meg her i et eksempel jeg liker: React har nå vært på tronen i mange år, og med React kom JSX. JSX var annerledes enn hva mange var vant til. I stedet for å ha mer eller mindre adskilt HTML og Javascript, introduserte man en måte å tenke på der man blandet markup og funksjonalitet i en og samme mølje. Mange synes dette var rotete, stygt og uhørt. Siden den gang har veldig mange blitt glad i den nye arbeidsflyten og vil overhodet ikke gå tilbake. Så med dette i tankene, hva representerer tailwind i det store bildet?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Når jeg tar et steg tilbake, ser jeg denne tankegangen som neste logiske steg på denne veien. Enten det ender opp med å være en utgave av CSS-In-JS, eller TailwindCSS. Vi gikk fra å skille ut HTML, CSS og Javascript i egne filer, til å kombinere HTML og Javascript, mens vi fremdeles skilte ut CSS-en. Med tailwind føler jeg endelig at det er naturlig å skrive markup, funksjonalitet og styling i en og samme flyt. Eureka!"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Test det selv!"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Om du er nysgjerrig og vil teste det ut, anbefaler jeg å ta med deg en stylesheet-lenke over til "},{"_type":"span","marks":["em"],"text":"Codesandbox"},{"_type":"span","marks":[],"text":" og prøve litt. Dette er helt klart raskeste vei til å få litt grums under neglene og se det i aksjon!"}]},{"_type":"block","markDefs":[{"_key":"5196fe153cac","_type":"link","href":"https://tailwindcss.com/docs/installation"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Lenken finner du nederst i installasjonsguiden til tailwind under “Using Tailwind via CDN”: "},{"_type":"span","marks":["5196fe153cac"],"text":"https://tailwindcss.com/docs/installation"},{"_type":"span","marks":[],"text":". I Codesandbox går du inn på et prosjekt og finner «External resources». Klikk utvid og legg inn lenken fra tailwind (kun adressen, uten HTML-tags etc.) og trykk på «Add resource». Du kan nå ta i bruk tailwind!"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/tailwindcss-det-neste-logiske-steget/codesandbox.webp","alt":"CodeSandbox visning"}],"tags":["Frontend"]}
{"_type":"post","_createdAt":"2022-02-02T00:00:00.000+01:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/tar-over-som-daglig-leder-i-capra-consulting.webp"},"title":"Tar over som daglig leder i Capra Consulting","author":"Julie Eldøy","subtitle":"Nøyaktig 7 år etter hans første dag i Capra, tar Ørjan Bøe Thygesen over som daglig leder for Aslak Ege, som har vært daglig leder i Consulting by Capra siden 2017.","description":"Ørjan Bøe Thygesen trer inn i rollen etter 7 år i Capra Consulting","publishedAt":"2022-02-02T00:00:00.000+01:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Aslak fortsetter som konsernsjef for Capra Group og forteller at han gleder seg til å se hva Ørjan vil gjøre som daglig leder."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"– En daglig leder, som alle andre roller, kan lett gro fast og bli mett på endring. Da blir rollen en hindring i stedet for en katalysator for den kontinuerlige forbedringen og innovasjonen som folkene og kundene våre fortjener. Ørjan kommer til å ta Capra Consulting til nye høyder, og jeg gleder meg til å få oppleve alt det positive han bidrar til som jeg ikke engang tenkte på var mulig, forteller Aslak Ege"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Ørjan er utdannet sivilingeniør fra NTNU i Kommunikasjonsteknologi. I dag jobber han med Capra’s strategi og forretningsutvikling, og har det siste året ledet en omorganisering av Capra, basert på konsepter fra boken Team Topologies. De siste syv årene har han vært konsulent og bistått kunder med smidig transformasjon, teamledelse, agile coaching og rådgivning knyttet til strategi, ledelse, optimalisering, organisering og gjennomføring av arbeid i teknologimiljøer."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"– Jeg skal etter beste evne forvalte den tilliten jeg nå har fått, til å videreutvikle Capra Consulting til å bli et enda bedre sted å være for folka våre og enda bedre til å hjelpe selskaper med å levere digitale produkter. Jeg er ganske sikker på at vi i Capra har noe å tilby selskaper som trenger et faglig sterkt, åpent, og ærlig kompetansemiljø, som leder, utvikler og rådgir, forteller Ørjan Bøe Thygesen om sin nye rolle."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Capra hjelper selskaper å levere digitale produkter raskere. Vi utvikler IT-løsninger, rådgir beslutningstakere og leder team og prosjekter for Norges største selskaper. Selskapet har et av landets sterkeste kompetansemiljøer på systemutvikling, virksomhetsarkitektur, teknologiledelse og sky.."}]}],"tags":["Capra folk"]}
{"_type":"post","_createdAt":"2021-12-17T00:00:00.000+01:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/team-assessment-service.webp"},"title":"Team Assessment Service: Capra sin metode for coaching av utviklingsteam","author":"Gustav Dyngeseth","subtitle":"Vi har utviklet en tjeneste for team coaching: Team Assessment Service (TAS). Dette er et verktøy våre smidig-coacher anvender for å akselerere kapabilitetene til et team, slik at teamet raskere oppnår en optimal tilstand hvor det kan forbedre seg selv kontinuerlig ut sin levetid.","description":"Gustav Dyngeseth fra Capra Consulting omtaler tre bøker innen TPU. Les dem her >>","publishedAt":"2021-12-17T00:00:00.000+01:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I Capra elsker vi team, og har engasjerte konsulenter innenfor teamledelse og smidig coaching som til daglig jobber med å videreutvikle høypresterende team, både internt og ute hos kunder. En viktig del av arbeidet som gjøres er å bygge nye team som med glede og engasjement leverer riktig og god software, i like stor grad som vi videreutvikler eksisterende team. I de tilfellene vi involveres for å bistå eksisterende team, er første handlingspunkt ofte en kartlegging av teamets nåværende nivå. For å gjennomføre dette har vi utviklet en konkret tjeneste vi har døpt "},{"_type":"span","marks":["em"],"text":"Team Assessment Service (TAS)"},{"_type":"span","marks":[],"text":". Tjenesten kan bla. anvendes på utviklerteam som leverer programvare eller ulike lederteam, men den kan også tilbys andre team ved å tilpasse den kvantitative undersøkelsen til teamets respektive spillefelt."}]},{"_type":"block","markDefs":[{"_key":"a42821adda75","_type":"link","href":"https://www.liflig.no/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"TAS er utviklet i tett samarbeid med vårt inhouse software-miljø, "},{"_type":"span","marks":["a42821adda75"],"text":"Liflig"},{"_type":"span","marks":[],"text":". Der har vi fått tilgang på etablerte utviklerteam som sa seg villige til å teste og videreutvikle tjenesten i iterasjoner. Gjennom denne reisen har vi observert ved flere tilfeller at et teams prestasjonsnivå kan økes betraktelig ved hjelp av data om teamets leveranseevner i kombinasjon med en våken team coach. Coachen sitt formål er å få teamet til å forbedre seg på områder de selv utforsker og oppdager at har forbedringspotensiale innenfor. Tjenesten utgjør en menneskelig og pragmatisk tilnærming på topp (coaching-samtaler på teamnivå), og et faglig og datadrevet utgangspunkt i bunn (den kvantitative undersøkelsen)."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Kvantitativ undersøkelse"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Første steg i TAS består av å gjennomføre den kvantitative spørreundersøkelsen som samler inn relevant data om teamet. Dette er en undersøkelse hvert enkelt teammedlem svarer på i kontekst av sin rolle i det gjeldende teamet. Teamene får selvsagt en introduksjon til undersøkelsen i forkant, og spørsmålene tilpasses teamets arbeidskontekst for å sikre god datakvalitet. I noen tilfeller gjennomfører vi også kvalitative samtaler i forkant for å sikre at den kvantitative undersøkelsen treffer riktig."}]},{"_type":"block","markDefs":[{"_key":"4d3d1e828c5f","_type":"link","href":"/bokanmeldelse-tre-boker-innen-team-prosjekt-og-utviklingsledelse"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Metrikkene vi måler gjennom undersøkelsen og deretter analyserer i samarbeid med teamet, er hovedsakelig inspirert av fagbøkene "},{"_type":"span","marks":["em"],"text":"Accelerate"},{"_type":"span","marks":[],"text":", "},{"_type":"span","marks":["em"],"text":"The Five Dysfunctions of a Team og Tuckman's Five Stages of Group Development"},{"_type":"span","marks":[],"text":". Kort oppsummert måler undersøkelsen teamets nåværende Software Delivery Performance (SDF), kultur, identitet, Employee Net Promoter Score (eNPS) og de fem team dysfunksjonene: (1) unngåelse av ansvarliggjøring, (2) manglende forpliktelsesvilje, (3) frykt for konflikt, (4) uoppmerksomhet på resultater og (5) fravær av tillit. For en mer utdypende gjennomgang av viktigheten til disse metrikkene, kan du lese en oppsummering av bla. Accelerate og The Five Dysfunctions of a Team på "},{"_type":"span","marks":["4d3d1e828c5f"],"text":"Capra-bloggen"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Coaching-samtaler"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Etter at teamet har svart på undersøkelsen, bearbeider en smidig coach besvarelsene og gjør seg opp noen tanker om trender i det kvantitative datasettet - det synliggjøres ofte helt konkrete forbedringsområder under en slik prosess. Coachen tar med seg observasjonene og presenterer de i en coaching-samtale med hele teamet i fellesskap. Denne presentasjonen gjøres i første omgang objektivt for å ikke lede teamet i retning basert på forutinntatte antagelser. Teamet bestemmer så selv hvilke av forbedringsområdene coachen presenterer som de ønsker å utfordre seg selv på. Vi identifiserer vanligvis to til tre faktorer som teamet ønsker å forbedre, for eksempel tillit og ledetid."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Så fort teamet er samstemt om hvilke(n) utfordring(er) som skal løses for å forbedre de utvalgte faktorene, vil coachen veilede teamet til å finne to til fem tiltak de selv ønsker å gjennomføre. Dette kan for eksempel være teambuildingsaktiviteter i eller utenfor arbeidstid for å bygge medmenneskelige relasjoner som øker tilliten innad i teamet. Ønskelig kommer tiltakene fra teamet selv - de er eksperter på det de holder på med og vet oftest best selv hva som må til for å løse utfordringen(e) de står overfor. Coachen sin oppgave blir dermed heller å skape forutsetningene for at teamet evner å løse riktig problem på sin egen måte til riktig tid."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Ansvarliggjøring"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Til slutt ansvarliggjøres teamet tiltakene og avtaler et tidspunkt når neste runde med coachen skal gjennomføres. Vanligvis gir vi teamet en til tre måneder på å implementere tiltakene, før vi kjører en ny runde med den kvantitative spørreundersøkelsen for å måle fremgang. I mellomtiden er coachen tilgjengelig for teamet for veiledning på både team- og individnivå. Det er ingen grense for hvor mange iterasjoner teamet kan ha med TAS, men tanken er at etter noen iterasjoner vil det evne å forbedre seg selv - altså et helautonomt team med fokus på kontinuerlig forbedring i det uendelige (eller frem til teamets dager er talte)."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Etter å ha benyttet seg av TAS i minst én iterasjon kan teamet forvente (1) kunnskap om modenhet i teamet, (2) kjenne sine styrker og svakheter som team, (3) få et felles vokabular for å snakke om team dynamikk, (4) hjelp på veien videre oppover i modenhetsmodellen, og (5) verktøy som støtter teamarbeidet i hverdagen. Kombinasjonen av denne innsikten gjør teamet kapabelt til å drive kontinuerlig forbedring - klare til å bestige neste fjelltopp (og den etter der). De beste fotballagene i verden trenger coaching, vi slår et slag for at selv de aller beste utviklingsteame behøver og fortjener det samme!"}]}],"tags":["Prosjektledelse","TPU"]}
{"_type":"post","_createdAt":"2022-03-24T00:00:00.000+01:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/team-og-troll-erfaringer-fra-en-helt-vanlig-geit/hero.webp"},"title":"Team og troll – erfaringer fra en helt vanlig geit","author":"Kristina Hovland Berg","subtitle":"Hvordan tilpasse seg voksenlivet, finne ut hvordan en teambasert organiseringsstruktur fungerer og få hjulene til å rulle i et nytt team? Jeg har ingen fasit – men jeg har et erfaringsskriv som beskriver mine opplevelser fra dette som en helt vanlig Capra-geit.","description":"Hvordan tilpasse seg voksenlivet, finne ut hvordan en teambasert organiseringsstruktur fungerer og få hjulene til å rulle i et nytt team?","publishedAt":"2022-03-24T00:00:00.000+01:00","body":[{"_type":"block","markDefs":[{"_key":"4e49c379dc73","_type":"link","href":"/to-ar-senere-dette-har-vi-laert-siden-vi-anvendte-team-topologies"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"I 2020 bestemte Capras “Team Topologies”-entusiaster seg for å kaste ledergruppen ut av 14. etasje og kjøre sjappa inn i en splitt-og-hersk-revolusjon – en "},{"_type":"span","marks":["em"],"text":"splitt-opp-i-team"},{"_type":"span","marks":[],"text":"-revolusjon. Mine kollegaer Sondre og Gustav har gjennom sine Team Topologies-briller "},{"_type":"span","marks":["4e49c379dc73"],"text":"skrevet om hva vi som selskap har lært etter denne omorganiseringen"},{"_type":"span","marks":[],"text":". Men hva har egentlig en enkel nyutdannet utvikler-geit lært?"}]},{"_type":"block","markDefs":[{"_key":"14ca0e65be87","_type":"link","href":"https://no.wikipedia.org/wiki/Dunning-Kruger-effekten"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Jeg hadde min første dag i Capra august 2020, helt uten erfaring med pre-team-apokalypse-Capra, ei heller kunnskap om “vanlig” organisasjonsstruktur. For å gjøre ting verre, så hadde jeg heller ikke lest “Team Topologies” – men vent! Senk høygaflene kjære team-entusiaster, for jeg har alltid likt å jobbe i team og jeg så optimistisk på Capras nye teamstruktur. Dermed kjenner jeg meg kvalifisert til å dele mine erfaringer med omorganiseringen, samtidig som jeg blankt ignorerer "},{"_type":"span","marks":["14ca0e65be87"],"text":"Dunning-Kruger-effekten"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Nye geiter og nytt team"}]},{"_type":"block","markDefs":[{"_key":"cd531913789f","_type":"link","href":"https://www.youtube.com/watch?v=XRPUoz1TYro"}],"style":"normal","children":[{"_type":"span","marks":["cd531913789f"],"text":"“Team, team, TEAM!”"},{"_type":"span","marks":[],"text":", ljomet det i gangene idet jeg entret HQ for første gang i voksenlivet. I løpet av kort tid havnet jeg selv i et team: Team Student-Onboarding (TSO). Det bestod av nystartede geiter og hadde sitt utspring i et ønske om å følge opp studenter som har signert fast jobb hos Capra. Jeg så for meg at dette var et passende første team å bli med i som fersk i Capra med passende oppgaver: Finne på noe sosialt med studentene og sende en melding i ny og ne. Da var det vel bare å smelle opp noen "},{"_type":"span","marks":["em"],"text":"OKR-er"},{"_type":"span","marks":[],"text":" – også kalt "},{"_type":"span","marks":["em"],"text":"Objectives and Key Results"},{"_type":"span","marks":[],"text":" – og sette i gang med å nå målene? Om det bare var så enkelt."}]},{"_type":"block","markDefs":[{"_key":"518d5c62676e","_type":"link","href":"https://www.gather.town/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Nei, team-livet viste seg å bli en evig motbakke i sirup. For det første var vi godt i gang med en pandemi som hindret sosiale sammenkomster i det fysiske rom. Etter uendelig mange møter fra hjemmekontoret, var det ikke akkurat mer skjermtid som fristet. Sosialiseringen med studentene endte opp som virtuell chilling i "},{"_type":"span","marks":["518d5c62676e"],"text":"Gather"},{"_type":"span","marks":[],"text":" og oppvarting med gavekort på Foodora. Hyggelig, men ikke spesielt imponerende. Apropos lite imponerende: Mitt team sin interne sosialisering. Den var nemlig ikke-eksisterende."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Uten sosialisering forsvinner noe av gulroten ved et team. Selv om jeg digget teammedlemmene mine, så hjelper det lite dersom jeg ikke får hengt sammen med dem. Da føles selv den enkleste oppgaven kjip. La oss trippe-trappe inn på punkt nummer to av “Hvordan man ikke skal danne et team”: Arbeidsoppgavene."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Forventninger, og det å ikke leve opp til dem"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Som et nytt team så handlet mye av det første året om å finne ut hvilke arbeidsoppgaver vi skulle ha. Alle i teamet hadde jobbet mindre enn en måned i Capra, og hadde ikke peiling på hva det innebar å drive et selskap. Derfor prøvde vi å sette opp et par potensielle punkter på årshjulet, og ta stilling til uventede ting når de dukker opp. Dette burde vi vært mer åpne om med de andre teamene. For mesteparten av oppoverbakke-sirupen bestod av andre teams forventninger om hva vi burde ha gjort, misnøye av å ikke ha gjort det, og vi i TSO som ikke klarte å si “Nei, dette ønsker vi ikke å bruke tiden vår på”."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi er nok alle enige om at noen kjipe oppgaver "},{"_type":"span","marks":["em"],"text":"må"},{"_type":"span","marks":[],"text":" bare gjøres for å drive sjappa videre, men når "},{"_type":"span","marks":["em"],"text":"alle"},{"_type":"span","marks":[],"text":" oppgaver føles kjipe, så skranter motivasjonen. Den dårlige samvittigheten for å ikke gjøre oppgavene, derimot, den fortsatte å vokse. Her burde vi vært flinkere til å sette harde grenser for hva TSO egentlig skulle drive med. Men, som den minste geitebukken har man ikke tidenes selvtillit, og vi ville gjerne føye oss etter det den største Bukken Bruse sa. Likevel, vi ble spist av trollet."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/team-og-troll-erfaringer-fra-en-helt-vanlig-geit/akse.webp","alt":"Følelse akse"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"I etterpåklokskapens navn"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Heldigvis er det svært få troll som overlever dagslys, så her er det jeg skulle ønske at fortids-meg i en ny jobb, nytt team, ny by og ny pandemi visste om:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":["strong"],"text":"Prioriter teambuilding."},{"_type":"span","marks":[],"text":" Du kan fnyse av konseptet av å helle i seg en kald pils med en kollega og kalle det “essensielt for teamets samarbeid”, men dæven så fort man får unnagjort oppgaver når man gjør det sammen med noen."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":["strong"],"text":"Nei er nei."},{"_type":"span","marks":[],"text":" Selv om noen sier at dette er ditt teams ansvar, så er det teamet selv som definerer dette. Det er bedre å si “nei”, slik at vedkommende kan finne noen andre til å gjøre oppgaven, enn å pine seg gjennom oppgaver man ikke ser meningen bak, og i verste fall ende opp med å ikke gjennomføre oppgaven i tide. “Grensesnitt med andre team” – eller noe – som kloke team-entusiaster ville sagt."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":["strong"],"text":"Tankelesere eksisterer ikke."},{"_type":"span","marks":[],"text":" Denne beskjeden går først og fremst ut til alle team som hadde meninger om vårt ansvarsområde det første året. Et par ganger opplevde vi at medlemmer fra andre team ble personlig skuffet over oss for å ikke ha gjort arbeidsoppgaver vi ikke ante eksisterte. Nok et slag i selvtilliten og motivasjonen. Derfor: Om man har dannet seg et bilde over hva en person gjør, uten å ha forhørt seg med personen først, så blir man skuffa."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":["strong"],"text":"Noen ganger har man uflaks."},{"_type":"span","marks":[],"text":" Da jeg ble født planla jeg ikke å starte i fast jobb under en pandemi og det er lov å innrømme at det gjorde mye av arbeidet skikkelig dritt – dette gjaldt nok alle team."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Alt i alt er Capra en gjeng med geiter som vil til seters for å spise oss fete på sky, team og frontend – da må vi være gode brobyggere. Det er vanskelig med tanke på hvor mange team vi har, for det kan nemlig gjemme seg et troll under enhver bro. Jeg tror trollet blir svakere jo mer etablerte teammedlemmene er og jo mer man klarer å kommunisere sine ansvarområder utad. Dette kunne sikkert noen fortalt meg på forhånd, men i ekte Capra-ånd skal man helst prøve, feile og lære, og ikke gjøre alt perfekt fra begynnelsen av. Dette tar jeg med meg i sekken til neste eventyr – så snipp, snapp, snute, velkommen neste bratte læringskruve på min rute."}]}],"tags":["Meninger","Capra folk"]}
{"_type":"post","_createdAt":"2023-08-31T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/tips-for-a-skrive-cv-til-sommerjobb/hero.webp"},"title":"Tips for å skrive CV til sommerjobb","author":"Wictor Zhao og Victor Jørgensen","subtitle":"I denne artikkelen deler vi noen nyttige tips for å lage en CV som hjelper deg å fremheve dine erfaringer og ferdigheter. Disse tipsene er basert på vår erfaring i Capra, og vi anbefaler deg å tilpasse rådene til egen situasjon og personlige stil.","description":"I denne artikkelen deler vi noen nyttige tips for å lage en CV som hjelper deg å fremheve dine erfaringer og ferdigheter.","publishedAt":"2023-08-31T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"1. Plasser det mest relevante øverst på CV-en"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Mange skriver en CV ved å liste opp utdanning og arbeidserfaring i omvendt kronologisk rekkefølge, altså fra det nyeste til det eldste. Imidlertid bør relevans prioriteres over kronologi. For eksempel: en malejobb du gjorde for onkelen din forrige sommer er kanskje ikke direkte relevant for en utviklerstilling. Prioriter derfor de mest relevante erfaringene – som tidligere prosjekter, frivillige verv, deltidsjobber, sommerjobber og universitetsutdanning – øverst på din CV. Mindre relevante erfaringer kan inkluderes, men bør plasseres lenger ned på listen."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/tips-for-a-skrive-cv-til-sommerjobb/illustrasjon1.webp","alt":"Illustrasjon"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"2. Hva kan inkluderes av prosjekter og erfaringer?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det er viktig å fremheve prosjekter og erfaringer som matcher stillingen du søker. Har du begrenset erfaring fra tidligere arbeidsforhold? Da kan skoleprosjekter som samsvarer med jobben du søker, være nyttige. Vær spesifikk når du beskriver dine roller, ansvarsområder og teknologier du har brukt i prosjektene (se punkt 5). For utviklere kan det være lurt å inkludere lenker til din GitHub-profil eller andre nettsider som gir arbeidsgiveren en bedre forståelse av dine ferdigheter og hva du kan bidra med. Hvis du har innehatt relevante posisjoner eller verv i frivillige organisasjoner, bør du absolutt inkludere dem i CV-en. Dette er ikke bare et bevis på din evne til å jobbe i team og samarbeide mot felles mål, men det fremhever også din proaktivitet og engasjement for kontinuerlig faglig vekst. I tillegg kan det gi verdifull praktisk erfaring og styrker din CV ytterligere."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"3. Koble teknologier til konkrete erfaringer"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det er ikke uvanlig at søkere lister opp teknologier eller buzzwords de har kjennskap til uten å relatere dem til reelle erfaringer eller konkrete prosjekter. Dette kan gi arbeidsgivere et uklart eller feilaktig bilde av dine evner, ettersom de søker inngående kjennskap til din praktiske bruk av nevnte teknologier. For en klarere presentasjon, strukturer erfaringene dine i korte, konsise punkter, og beskriv din rolle i de nevnte prosjektene. Å inkludere relevante hobbyprosjekter kan også gi stor verdi hvis du trenger å fremheve mer teknisk erfaring."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"Eksempel:"}]},{"_type":"block","style":"blockquote","markDefs":[],"children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"Capra Consulting, Oslo, Summer Intern"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\nJuni 2020 - August 2020"},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"vs."}]},{"_type":"block","style":"blockquote","markDefs":[],"children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"Capra Consulting, Oslo, Fullstack-utvikler"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\nJuni 2020 - August 2020"},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Utplassert hos kunde X"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Har sammen med et team på fem utviklere jobbet med flere typer\nsensordata, innhentet data fra eksisterende system, persistert og gjort disse tilgjengelig i AWS"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Prosjektet har gitt verdi ved å visualisere sensordata på en fornuftig måte som kan brukes både internt og eksternt."}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Teknologier: Terraform, Kotlin m/ Micronaut, React m/ TypeScript, AWS"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"4. Unngå å rangere ferdigheter på en skala"}]},{"_type":"block","markDefs":[{"_key":"a54b03c52e05","_type":"link","href":"https://no.wikipedia.org/wiki/Dunning-Kruger-effekten"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Mange studenter bruker illustrasjoner for å vise kompetansenivå med ulike teknologier (fig 1). Å bedømme egne ferdigheter objektivt kan være svært vanskelig, og en risikerer lett å falle for den velkjente "},{"_type":"span","marks":["a54b03c52e05"],"text":"Dunning-Kruger-effekten"},{"_type":"span","marks":[],"text":". Selv seniorutviklere med mye erfaring er ofte forsiktige med å gi seg selv toppkarakter på en ferdighetsskala. Dessuten tar slike illustrasjoner opp mye plass. Vi mener det derfor er bedre å fokusere på konkrete prosjekter du har jobbet med og hvilken teknologi du har brukt. Dette gir en dypere innsikt i din ekspertise og setter den i en mer relevant sammenheng."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/tips-for-a-skrive-cv-til-sommerjobb/fig1.webp","alt":"Eksempel på ferdighet rangering"},{"_type":"block","markDefs":[{"_key":"3f4705be5d3e","_type":"link","href":"https://dev.to/tim012432/do-not-put-skill-bars-on-your-resume-lh6"}],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"(Fig 1) Kilde: "},{"_type":"span","marks":["em","3f4705be5d3e"],"text":"https://dev.to/tim012432/do-not-put-skill-bars-on-your-resume-lh6"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"5. Relevans og kvalitet over antall sider"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det er en utbredt misforståelse blant søkere at en CV skal begrenses til én A4-side. Mange forsøker dermed å tvinge all sin informasjon inn på denne lille plassen. Selv om en kortfattet CV kan være passende i mange situasjoner, bør en aldri ofre verdifull informasjon kun for å overholde en slik \"standard\". Hovedmålet er at CV-en skal gi en klar og oversiktlig presentasjon av din erfaring og kompetanse, uavhengig av sidetall. Men husk: en langdryg CV fylt med irrelevant informasjon kan skape et negativt inntrykk hos leseren. Fokuser derfor alltid på det som er relevant og viktig."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"6. Vis din kreativitet"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"En tradisjonell CV produsert i programmer som Microsoft Word er ikke den eneste måten å presentere deg selv på. Å lage en kreativ CV kan være en flott anledning til å vise din unike personlighet og kompetanse, samt skille deg markant ut fra andre søkere. Du kan for eksempel lage en nettside som fungerer som din CV. Dette viser ikke bare dine tekniske ferdigheter, men tillater også en unik og engasjerende måte å strukturere informasjonen på. Mulighetene er mange, og vær ikke redd for å tenke utenfor boksen og skape noe som skiller deg ut i mengden!"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"7. Bruk navnet ditt som overskrift og velg et gjenkjennelig filnavn"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Selv om \"Curriculum Vitae\" er en hyppig brukt tittel på en CV, kan den ofte virke generisk og oppta mye plass uten merverdi. Arbeidsgivere skummer ofte gjennom mange CV-er, så for å gjøre din CV mer gjenkjennelig, bruk ditt eget navn som overskrift. Filnavnet bør også være lett identifiserbart, for eksempel \"Ola Nordmann CV.pdf\". Dette hjelper arbeidsgiveren i organiseringen, og sikrer at din CV enkelt kan identifiseres og gjenfinnes. Husk at det kan være hundrevis av søkere til utviklerposisjoner i sommersesongen, og derfor er det viktig å gjøre alt for at din CV ikke går tapt i mengden. Som et siste tips, last alltid opp CV-en din som en PDF. Dette garanterer at formatering og layout forblir konsistent, uansett hvilken enhet eller programvare som benyttes for å se dokumentet."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"8. Be en venn om tilbakemelding"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det lønner seg alltid å be noen andre om å gjennomgå CV-en din før innsending. Friske øyne kan raskt oppdage skrivefeil, grammatikkfeil eller områder som du ikke har lagt merke til selv. Det kan også være lurt å spørre om det er noe som kan formidles klarere eller mer effektivt. Kanskje de også kan påpeke relevante erfaringer eller kvalifikasjoner som du har oversett?"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/tips-for-a-skrive-cv-til-sommerjobb/venn.webp","alt":"Venn som ser over"}]}
{"_type":"post","_createdAt":"2022-01-28T00:00:00.000+01:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/to-ar-senere-dette-har-vi-laert-siden-vi-anvendte-team-topologies/hero.webp"},"title":"To år senere: Dette har vi lært siden vi anvendte Team Topologies","author":"Sondre Brekke og Gustav Dyngeseth","subtitle":"Høsten 2019 la vi ned ledergruppen og alt av hierarki i konsulentselskapet vårt, og innførte en ny nettverksbasert organisasjonsstruktur inspirert av boken Team Topologies. To år senere har vi lært mye av denne organisasjonsendringen gjennom egne erfaringer, en prat med Manuel Pais og anvendelse hos kunder. Hva gikk bra? Hvor bommet vi? Hva planlegger vi å gjøre fremover?","description":"Takeaways etter to år med Team Topologies. Les dem her.","publishedAt":"2022-01-28T00:00:00.000+01:00","body":[{"_type":"block","markDefs":[{"_key":"5e689994e1d3","_type":"link","href":"/slik-reorganiserer-vi-capra"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"I bloggartikkelen "},{"_type":"span","marks":["5e689994e1d3"],"text":"Slik reorganiserer vi Capra"},{"_type":"span","marks":[],"text":" (november 2020), går Stein-Otto gjennom bakgrunnen for omorganiseringen, veien til en nettverksorganisasjon og den faktiske organiseringen vår på daværende tidspunkt. Vi anbefaler sterkt å lese denne før du går videre, men vi har likevel prøvd å oppsummerer de viktigste punktene i de to kommende avsnittene."}]},{"_type":"block","markDefs":[{"_key":"7a6328de24c0","_type":"link","href":"https://en.wikipedia.org/wiki/Eating_your_own_dog_food"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Høsten 2019 startet vi i Capra arbeidet å fornye strategien vår. Den viktigste utfordringen vi identifiserte, var hvordan vi skulle klare å håndtere det økende antallet ansatte - uten å miste autonomien og den flate strukturen vi er kjent for i bransjen. Ettersom en del av de involverte jobbet med opprettelsen av tverrfaglige og autonome team i kundeoppdrag, var det helt naturlig at vi "},{"_type":"span","marks":["7a6328de24c0"],"text":"spiste vår egen hundemat"},{"_type":"span","marks":[],"text":" og gjorde tilsvarende."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Passende nok hadde akkurat boken “Team Topologies: Organizing Business and Technology Teams for Fast Flow” av Manuel Pais og Matthew Skelton blitt lansert. Den gav oss vokabularet vi trengte for å designe en ny organisasjonsstruktur basert på de ønskede prinsippene vi hadde identifisert. Til tross for at boken sikter seg inn mot tradisjonelle tech-selskaper, står det nevnt i en bisetning at forfatterne også tror den kan passe i andre kontekster. Vi tok dette for god fisk, og tenkte at det verste som kan skje er at vi lærer en hel masse på reisen vår."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/to-ar-senere-dette-har-vi-laert-siden-vi-anvendte-team-topologies/orgkart.webp","alt":"Organisasjonskart"},{"_type":"block","style":"blockquote","markDefs":[],"children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"Figur 1: Organisasjonskart Capra Consulting, November 2020."},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I november 2020 hadde vi etablert 13 team som jobbet innenfor markedsføring, rekruttering, fagmiljøene våre, salg og leveranse (se Figur 1). Stein-Otto beskrev noen av de viktigste teamene på denne måten i bloggartikkelen:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"\"Blant disse finner vi Team Økonomi, som har ansvar for økonomi, budsjett og prognoser; Team Operasjonelt, som kontrollerer den daglige driften av selskapet og sikrer at konsulentene våre trives; Team Strategi og Porteføljestyring, som jobber med andre team for å peke ut og forankre selskapets retning. De ser på hvordan vi på et overordnet plan skal reagere på endringer og tilpasse oss markedet. Da ved først og fremst å justere de ressursene teamene har fått tildelt. (Stein-Otto Svorstøl, 2020)\""}]},{"_type":"block","markDefs":[{"_key":"7e5bfd708172","_type":"link","href":"https://www.youtube.com/watch?v=lksI_2QL5Ww&t=1s"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Siden den gang har vi iterert mye på implementasjonen, "},{"_type":"span","marks":["7e5bfd708172"],"text":"vi har hatt besøk av Manuel Pais"},{"_type":"span","marks":[],"text":" for å snakke litt om hans tanker om vårt noe utradisjonelle eksperiment og vi har gjennomført en spørreundersøkelse for å hente de ansattes feedback. Dette har kulminert i Figur 2, som viser organisasjonskartet vårt per januar 2022."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/to-ar-senere-dette-har-vi-laert-siden-vi-anvendte-team-topologies/orgkart2.webp","alt":"Nytt organisasjonskart"},{"_type":"block","style":"blockquote","markDefs":[],"children":[{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"Figur 2: Organisasjonskart Capra Consulting, Januar 2022."},{"_type":"span","marks":[],"text":"\n\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Umiddelbart ser man ganske tydelige forskjeller. Én bemerkning Pais gjorde i løpet av seansen, var at teamene i spesielt de interne verdistrømmene (Skaffe kollegaer og Bygge kompetanse og selskap) regelmessig bør stille seg selv spørsmålet “What are we trying to achieve?” (Pais, 2021). Etter å ha reflektert litt over dette, fant vi ut at det mest naturlige var å splitte verdistrømmen i to - ettersom det å bygge selskap og kultur, er noe annet enn å styrke kompetanse og fagmiljø."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Videre har vi sett utfordringer med grensesnitt og ansvarsområder for teamene - noe vi kommer tilbake til senere - som har ført til at vi har tydeliggjort ansvarsområdene til teamene ved å splitte de opp eller starte nye. Til slutt har vi sett behov for flere team som leverer på verdistrømmen Selge og levere tjenester fremfor å ha for eksempel et enkeltstående Team Salg med ansvar for “alt” av salg."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi kommer nå til å ta for oss tre punkter hvor vi føler vi har bommet, og forklare litt hvorfor vi tenker nettopp dette. De tre punktene er grensesnitt mellom team, avslutte team og målstyring."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Grensesnitt mellom team"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Som en nettverksorganisasjon med flere team fordelt på verdistrømmene våre, har det vært krevende å få på plass tydelige grensesnitt mellom teamene. Etter hvert som det dukker opp behov og muligheter langs veien, øker også antallet kontaktpunkter hvert team må forholde seg til når de tar beslutninger. Da dukker det ofte opp spørsmål som; Hvem skal jeg henvende meg til? Finnes det et team som har løst problemstillingen vi står ovenfor tidligere? Er dette egentlig vår oppgave? I slike situasjoner er man avhengig av at samtlige team har beskrevet teamets formål, kapabiliteter, tjenester de leverer, foretrukket arbeidsform, kommunikasjonspreferanser samt roadmap og prioriteringer."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi opplever at vi ikke har vært flinke nok til nettopp å avklare og forvalte tydelige grensesnitt mellom teamene. Dette har ført til flere tilfeller hvor ansvarsområder har falt mellom to stoler (les: to team), spesielt for teamene innenfor samme verdistrøm som for eksempel Team Student-Rekruttering og Team Student-Onboarding. Team Orgutvikling har i senere tid utviklet en kapabilitet hvor de tilbyr å organisere en grensesnitt-workshop for team som er i tilsvarende situasjon som disse teamene."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I noen tilfeller så vi også at noen team “slapp billig unna” nødvendigheten av tydelige grensesnitt seg i mellom, gjennom at noen ansatte var med i flere team. Det er viktig å være bevisst på denne avhengigheten for å ikke forbli for avhengig av enkeltpersoner, men heller sikre kapabiliteter som gjør at teamene kan interagere smertefritt selv også den dagen de overlappende teammedlemmene forsvinner."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Ikke minst har det vært en stor utfordring å holde grensenittene ved like når teamene stadig utvikler seg i ulike retninger med nye medlemmer og ansvarsområder. Felles Slack-kanaler på tvers av teamene, månedlig check-in møte og noen overlappende teammedlemmer er noen av tiltakene vi har innført for å minimere denne utfordringen. I tillegg holdes teamenes Slack-kanaler åpne slik at alle har lenke til teamets dashboard med all relevant informasjon og kan stille spørsmål."}]},{"_type":"block","markDefs":[{"_key":"65a56af8d514","_type":"link","href":"https://youtu.be/lksI_2QL5Ww?t=4921"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi har fortsatt en god vei å gå for å definere tydelig hvordan teamene forventer å interagere, noe som var et av hovedspørsmålene Manuel Pais dro frem som forbedringspunkt under "},{"_type":"span","marks":["65a56af8d514"],"text":"seansen"},{"_type":"span","marks":[],"text":" vi hadde med han i februar 2021."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Avslutte team"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Med et stadig økende antall team i en organisk organisasjon er vi avhengig av at noen team opphører så fort de selv oppdager at de ikke lenger har retten til å leve. I vårt tilfelle gikk det lang tid før det første teamet opphørte - nesten et helt år. Ettersom ingen kan tvinge et team til å opphøre, mistenker vi at grunnen til at dette tok tid, var at vi ikke hadde på plass noen rutiner for at teamene selv kan finne ut av at de ikke lenger har noen fornuftige ansvarsområder igjen (eller at disse hører bedre til i andre team). Antall team kan ikke vokse i det uendelige - da blir det til slutt for mye communication overhead på tvers av team, og dermed utfordrende å koordinere ansvarsområder og grensesnitt. Vi ville dessuten gått tom for folk til slutt. Eksempler på team som vi har lagt ned så langt er Team Covid, Team Operasjonelt, og Team Event."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I forkant av at et team opphører er det en rekke spørsmål som må stilles. Hvem er det som kan påstå at teamet burde opphøre? Er det bare teamet selv eller er det åpent for at andre i organisasjonen kan påstå at det burde nedlegges? Psykologisk trygghet i organisasjonen burde tillate at hvem som helst kan komme og påstå det med hele Capra sin suksess som interesse - selvsagt med rette argumenter og en felles definisjoner på hva som er et levedyktig team som premiss."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hva som skal skje når et team har mistet retten til å eksistere, og hvordan et team selv kan oppdage dette, er noe vi har overlatt til det enkelte teamet selv å avgjøre. Det er naturlig at team tar høyde for ansvarsområder som eventuelt gjenstår og som skal overleveres til andre team på en god måte, og hvordan “fjerne” rot i f.eks Confluence og Slack i forbindelse med sletting og arkivering av strukturkapital."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I tillegg til nedleggelse av team er det viktig å nevne evolusjon av team - dette utarter seg i gjennom sammenslåing eller splitting av team, team som tar på seg nye ansvarsområder og deretter får nytt navn som mer presist reflekterer teamets nye hensikt."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Målstyring"}]},{"_type":"block","markDefs":[{"_key":"6e36aca01fe6","_type":"link","href":"https://asana.com/resources/okr-meaning"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi har selvsagt også kommet over masse utfordringer relatert til målstyring på tvers av teamene. Her har vi løst mye av problematikken ved at Team Felles Retning, som et plattformteam, eier en strategi på selskapsnivå med muligheter og utfordringer som vi skal fokusere på. Tidligere definerte Team Felles Retning OKRs ("},{"_type":"span","marks":["6e36aca01fe6"],"text":"Objectives and Key Results"},{"_type":"span","marks":[],"text":") for hele selskapet på kvartalbasis. Etter mye prøving og feiling har vi gått bort fra konkrete OKRs på selskapsnivå, og heller definert muligheter og utfordringer i en strategi som teamene får frihet til å gripe på sin måte. Mange av teamene bruker ennå OKR-er for å sette fokus, og følge de konkrete resultatene."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"“You used to look at it (strategy) as a top-down thing where someone is going to set the strategy for the whole company, but now you're thinking about it more like a supporting platform team - helping teams understand what their focus should be\" (Pais, 2021)"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hvert team tar høyde for strategien til selskapet når de definerer egne OKR-er. Det er ikke et krav at hver team benytter seg av OKRs, men de aller fleste teamene erfarer at dette er en fornuftig måte å jobbe målrettet og fokusert på. Vi kunne snakket masse om hvordan dette gjennomføres i praksis, men det skal vi heller ta for oss i et senere blogginnlegg."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Dette har gått bra"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Utgangspunktet vårt for å anvende Team Topologies er bygget på en bisetning i boka om at modellen også kan passe andre selskaper. Etter to år med modellen kan vi absolutt stille oss bak dette utsagnet, og si at det har fungert. Modellen har dessuten virkelig fått syretestet seg ettersom den volatile Covid-19 situasjonen har ført til at beslutninger har måttet bli tatt raskt og presist."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Helt konkret har vi sett en mye større andel av de ansatte som blir aktive i utvikling av selskapet gjennom å bli med i team og ta eierskap til oppgaver - dette var også et av målene vi ønsket å levere på ved å gjennomføre reorganiseringen (Stein-Otto Svorstøl, 2020). Høy deltakelse er spesielt viktig for å opprettholde kulturen vår, som bygger på åpenhet, bratt læringskurve og kompetansedeling på tvers og innad i fagmiljøene. Vi opplever at vi får gjort mer, at det har blitt enklere å starte nye initiativer og at de som er bidragsytere i teamene føler større tilhørighet til selskapet enn før reorganiseringen."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Veien videre"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi ser frem til publisering av den nye boken til Manuel Pais og Matthew Skeleton “Remote Team Interactions Workbook“, og håper den vil inspirere oss i en stadig mer hybrid teamhverdag.Vi tror mange av utfordringene vi står overfor kunne vært løst med større fysisk tilstedeværelse både internt og på tvers av teamene. Dette gir flere møtepunkter mellom ansatte naturlig, spesielt de uformelle avklaringene på kontoret. Vi har en vei å gå her, og vi gleder oss stort til den nye boken som forhåpentligvis kan gi oss råd på veien inn i en permanent hybrid hverdag!"}]}],"tags":["TPU","Prosjektledelse"]}
{"_type":"post","_createdAt":"2021-09-23T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/vite-frontend-tooling/hero.webp"},"title":"Vite - ny lynrask frontend tooling","author":"Gaute Meek Olsen","description":"Vite er en ny lynrask frontend tooling. Les mer om den","publishedAt":"2021-09-23T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[{"_key":"ffbdbcdd0c0f","_type":"link","href":"https://vitejs.dev/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Jeg begynner å bli lei av treg frontend tooling, så i dag har jeg lyst til å fortelle om "},{"_type":"span","marks":["ffbdbcdd0c0f"],"text":"Vite"},{"_type":"span","marks":[],"text":", som tar hånd om dev server, Hot Module Replacement (HMR) og bygging av koden - og dét lynkjapt!"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Prosessen bak å utvikle en nettside har blitt tregere med årene. Det har over tid oppstått en rekke nødvendige features, som å kompilere kode til eldre syntax for å støtte flere nettlesere eller filer som er skrevet i f.eks. "},{"_type":"span","marks":["code"],"text":".ts"},{"_type":"span","marks":[],"text":", "},{"_type":"span","marks":["code"],"text":".jsx"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["code"],"text":".scss"},{"_type":"span","marks":[],"text":". Flere tredjeparts biblioteker fra NPM skal, sammen med kodebasen, bundles til en JavaScript-fil ved hjelp av f.eks Webpack. Alt tar tid, og lengre tid vil det ta jo større prosjektet blir. Og det er frustrerende å vente på at endringene dine blir reflektert i nettleseren. Dette løser Vite og gir oss en super utvikleropplevelse, da livet er for kort til å vente på trege verktøy."}]},{"_type":"block","markDefs":[{"_key":"ce97213859a2","_type":"link","href":"https://codebase.show/projects/realworld"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"For å gi noen tall, så har jeg tatt "},{"_type":"span","marks":["ce97213859a2"],"text":"RealWorld example app"},{"_type":"span","marks":[],"text":" og implementert React-løsningen først med CRA (som benytter webpack) og deretter Vite. Merk at dette kun er tider på min maskin, men det gir en tydelig indikasjon."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/vite-frontend-tooling/tabell.webp","alt":"Sammenligningstabell"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Komme i gang"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Gå til terminalen, skriv:"}]},{"_type":"code","code":"npm init @vitejs/app\n","language":"sh"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Deretter velg mellom flere typer templates: VanillaJS, Vue, React, Preact, LitElement eller Svelte - med eller uten TypeScript. Dette oppretter prosjektet for deg."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Merk at du har "},{"_type":"span","marks":["code"],"text":"index.html"},{"_type":"span","marks":[],"text":" i rotmappen som inngangspunkt til applikasjonen din. Dette kan være annerledes enn det du er vant med da annen tooling ofte har denne i en public folder, og da er det "},{"_type":"span","marks":["code"],"text":"App.js"},{"_type":"span","marks":[],"text":" som er inngangspunkt som ved bygg blir magisk flyttet inn i html filen din. Jeg synes Vite sin måte gir mer mening da nettleseren alltid starter med html filen."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I "},{"_type":"span","marks":["code"],"text":"package.json"},{"_type":"span","marks":[],"text":" filen din har du kommandoen "},{"_type":"span","marks":["code"],"text":"npm run dev"},{"_type":"span","marks":[],"text":", som starter dev-serveren på kun noen millisekunder. Hvis du nå går inn i en fil i prosjektet og gjør en endring, vil den med en gang vises i nettleseren direkte. Dette er en stor forbedring som gjør utvikleropplevelsen fantastisk!"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Hvordan det fungerer"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I dag bundler de fleste byggverktøyene hele kodebasen til en fil som kan serves. Dette må gjøres ved hver endring, noe vil caches, men det har effekt kun til et visst punkt."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/vite-frontend-tooling/bundle-dev-server.webp","alt":"Demo av en bundlebasert dev server"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vite derimot benytter native ES modules og lar nettleserne gjøre jobben med å hente filene når de brukes. Dev-serveren kan da starte direkte, og den gjør ikke noe jobb før nettleseren åpner siden. Hver fil som benyttes vil da resultere i et nettverkskall, filer som ikke er importert slipper å prosesseres. Du tenker kanskje at et vannfall av nettverkskall skaper treghet, men i realiteten er forsinkelsen ubetydelig når det leses rett fra din lokale disk og flere kall kan gjøres i parallell."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/vite-frontend-tooling/esm-dev-server.webp","alt":"Demo av en ESM dev server"},{"_type":"block","markDefs":[{"_key":"812d7fd71a42","_type":"link","href":"https://esbuild.github.io/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vite benytter også "},{"_type":"span","marks":["812d7fd71a42"],"text":"esbuild"},{"_type":"span","marks":[],"text":" en ekstremt rask bundler skrevet i Go. Den vil ta seg av bundling av dependencies, samt kompilere hver fil on-the-fly hvis det trengs. Har du f.eks. en TypeScript-fil som importeres, så vil esbuild kompilere den til JavaScript først når et nettverkskall henter filen."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/vite-frontend-tooling/esbuild.webp","alt":"Sammenligning av esbuild og konkurrenter"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"Sammenligning av esbuild og andre bundlere på tidsbruket av å bundle biblioteket three.js 10 ganger."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Når applikasjonen skal bundles for produksjon benytter Vite en mer tradisjonell tilnærming og bundler koden med Rollup. Dette er hovedsakelig fordi et vannfall av nettverkskall over nett ikke er lønnsomt."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Konklusjon"}]},{"_type":"block","markDefs":[{"_key":"f05cf6b4b30a","_type":"link","href":"https://www.snowpack.dev/"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Selv om dette er en relativt ny og forbedret utvikleropplevelse innen frontend-utvikling, så er det ikke sikkert at Vite blir ledende over tid. For eksempel er "},{"_type":"span","marks":["f05cf6b4b30a"],"text":"Snowpack"},{"_type":"span","marks":[],"text":" også en ny tool som gjør så og si det samme. Eksisterende tools vil nok også ta grep for å forbedre ytelsen sin."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Hvis applikasjonen din ikke har noen spesielle behov hvor f.eks. webpack kreves, så vil jeg anbefale deg å prøve ut Vite. Du vil få en raskere opplevelse, samt at de fleste features og funksjonaliteter er støttet."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Kanskje er du ikke plaget av dagens små tidstyver, men når du er vant til en raskere hverdag, kan jeg love deg at du ikke ønsker å gå tilbake."}]}],"tags":["Frontend","Vite"]}
{"_type":"post","_createdAt":"2020-04-29T00:00:00.000+02:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/vue-3-kommer-snart/hero.webp"},"title":"Vue 3 kommer snart!","author":"Gaute Meek Olsen","description":"Jeg har nå lekt en del med Vue 3, og det er bare å glede seg! La meg dele noe av det jeg har lært. I følge deres roadmap så planlegger de en utgivelse i slutten av Q2 2020. I dag er beta-versjonen publisert. Merk at det fortsatt kan komme små endringer. Men hvis du vil ha et forsprang, så kan denne artikkelen skrevet 30. april 2020 hjelpe deg.","publishedAt":"2020-04-29T00:00:00.000+02:00","body":[{"_type":"block","markDefs":[{"_key":"ccdb236ae92d","_type":"link","href":"https://github.com/vuejs/vue/projects/6"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Jeg har nå lekt en del med Vue 3, og det er bare å glede seg! La meg dele noe av det jeg har lært. I følge deres "},{"_type":"span","marks":["ccdb236ae92d"],"text":"roadmap"},{"_type":"span","marks":[],"text":" så planlegger de en utgivelse i slutten av Q2 2020. I dag er beta-versjonen publisert. Merk at det fortsatt kan komme små endringer. Men hvis du vil ha et forsprang, så kan denne artikkelen skrevet 30. april 2020 hjelpe deg."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Komme i gang i dag"}]},{"_type":"block","markDefs":[{"_key":"b6b3bddbfca8","_type":"link","href":"https://github.com/gautemo/vue-3-playground"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Du kan allerede nå lage et Vue 3 prosjekt. Men husk at offisiell dokumentasjon ikke finnes enda og små kode endringer kan forekomme. Jeg har opprettet et "},{"_type":"span","marks":["b6b3bddbfca8"],"text":"GitHub repository"},{"_type":"span","marks":[],"text":" med et prosjekt du kan leke deg med og se noen kode-eksempler. Readme-filen inneholder også mer informasjon om hvordan du setter opp ditt eget prosjekt, samt ressurser, artikler, videoer og podkaster om Vue 3."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Forbedringer"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Den største forandringen med Vue 3 er at den er skrevet om fra bunnen av, men for oss utviklere så vil det kodemessig være så og si helt likt. Men dette gir oss et mye bedre produkt. Vue var allerede raskt, men har nå store ytelse og minne forbedringer, og tree shaking(eliminerer ubrukt kode) gir mindre produksjonsfiler."}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/vue-3-kommer-snart/sonic.gif","alt":"Sonic"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"De har også skrevet Vue 3 i TypeScript, noe som gjør at prosjektet er mer vedlikeholdbart for Vue teamet. Men dette gir også oss noen fordeler, selv om du setter opp prosjektet ditt med JavaScript eller TypeScript så vil du få bedre IntelliSense og typeahead."}]},{"_type":"block","markDefs":[{"_key":"2446d0dddb16","_type":"link","href":"https://github.com/vuejs/rfcs"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"De benytter nå "},{"_type":"span","marks":["2446d0dddb16"],"text":"RFCs"},{"_type":"span","marks":[],"text":" (Request For Comments) for hver endring for å involvere community'et i valg som blir tatt."}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Endringer"}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Composition API"}]},{"_type":"block","markDefs":[{"_key":"750bebce188f","_type":"link","href":"https://vue-composition-api-rfc.netlify.com/#logic-reuse-code-organization"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det finnes nå en ny valgfri måte å skrive JavaScript delen av komponentene. De kaller måten vi gjør det på i dag for Options API, hvor man har et objekt med data, metoder, computed properties osv. Dette er fortsatt gyldig i Vue 3. Composition API er bare en ny valgfri mulighet. Jeg skal prøve å holde det kort, for en grundigere forklaring over alle fordelene kan du gå "},{"_type":"span","marks":["750bebce188f"],"text":"hit"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"La oss se på skjelettet til komponent objektet."}]},{"_type":"code","code":"// Import the API's you are using for the component\nimport { ref, reactive, computed } from 'vue';\n\nexport default {\n  // the setup method where logic happens\n  setup(){\n    return { /* return what logic is exposed to the template */ }\n  }\n}\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Nå til den spennende delen. La oss skrive noe setup kode. "},{"_type":"span","marks":["code"],"text":"ref"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["code"],"text":"reactive"},{"_type":"span","marks":[],"text":" brukes for reaktive variabler."}]},{"_type":"code","code":"setup(){\n  //Let's have two different reactive values\n  const counter = ref(0);\n  const state = reactive({\n    count: 0\n  });\n\n  //Update the values\n  counter.value++;\n  state.count++;\n\n  return { counter, state }\n}\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Som du kan se kan ref og reactive gjøre så og si det samme. "},{"_type":"span","marks":["code"],"text":"ref"},{"_type":"span","marks":[],"text":" er hovedsakelig for primitive verdier og arrays. Mens "},{"_type":"span","marks":["code"],"text":"reactive"},{"_type":"span","marks":[],"text":" holder på et objekt. Hvilken du bruker vil være opp til deg, med tid kommer det nok noen best practices man kan følge."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi er allerede vant til å bruke computed properties, metoder og watch. Prinsippene er de samme, bare skrevet litt forskjellig."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi har også "},{"_type":"span","marks":["code"],"text":"watchEffect"},{"_type":"span","marks":[],"text":" som er veldig lik watch, men her trenger du ikke å fortelle hvilke verdier den skal lytte til. Den vil finne disse selv basert på de som blir brukt."}]},{"_type":"code","code":"setup(){\n  const counter = ref(0);\n  \n  const double = computed(() => counter.value * 2);\n\n  const addToCounter = toAdd => counter.value += toAdd;\n\n  watch(counter, () => console.log('counter updated'));\n\n  return { double, addToCounter }\n}\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Jeg bruker arrow funksjoner her, men det kunne vært vanlige funksjoner. Koden trenger ikke engang å være inne i setup metoden, den kan være utenfor Vue objektet eller til og med i en egen fil. Det som betyr noe er at setup returnerer det som skal brukes i templaten."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Dette fikk meg til å tenke, er det ikke da veldig enkelt å lage en global reactive state? Svaret er ja."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"globalShoppingCart.js"}]},{"_type":"code","code":"import { reactive, computed } from 'vue';\n\nconst shoppingCart = reactive({\n  items: [],\n  totalPrice: computed(() => shoppingCart.items.reduce((acc, item) => acc + item.price, 0))\n});\n\nconst addItem = item => shoppingCart.items.push(item);\n\nexport { addItem, shoppingCart }\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"item.vue"}]},{"_type":"code","code":"<template>\n    <h1>Ball</h1>\n    <button @click=\"addItem({name: 'ball', price: 99})\">Add to Cart</button>\n</template>\n\n<script>\nimport { addItem } from '@/globalShoppingCart'\n\nexport default {\n    setup(){\n        return { addItem }\n    }\n}\n</script>\n","language":"vue"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"cart.vue"}]},{"_type":"code","code":"<template>\n    <h1>Cart</h1>\n    <span>Items: {{ shoppingCart.items.length }}</span>\n    <span>Price: {{ shoppingCart.totalPrice }}</span>\n</template>\n\n<script>\nimport { shoppingCart } from '@/globalShoppingCart'\n\nexport default {\n    setup(){\n        return { shoppingCart }\n    }\n}\n</script>\n","language":"vue"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Dette er virkelig kult! Vi slipper å bruke så mye props og emits for å sende data rundt lengre."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det fungerer også supert for å gjenbruke kode. La oss lage like og super like funksjonalitet i en egen JavaScript fil, men la alle komponenter som benytter denne få sin egen state."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"likes.js"}]},{"_type":"code","code":"import { ref } from \"vue\"\n\nconst getLikes = () => {\n    const likes = ref(0)\n    const superLike = () => likes.value += 1000;\n    return { likes, superLike }\n}\n\nexport { getLikes }\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["em"],"text":"hearts.vue"}]},{"_type":"code","code":"<template>\n    <div>\n        {{likes}}🧡\n        <button @click=\"likes++\">Love</button>\n        <button @click=\"superLike\">💕💕💕</button>\n    </div>\n</template>\n\n<script>\nimport { getLikes } from '@/likesOwn';\nexport default {\n    setup(){\n        return { ...getLikes() }\n    }\n}\n</script>\n","language":"vue"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Siste delen av Composition API'et er lifecycle hooks. Det er stort sett det samme, bare at de skrives inne i setup metoden og du kan ha flere av den samme."}]},{"_type":"code","code":"setup(){\n  onMounted(() => console.log('DOM is ready'));\n  onMounted(() => console.log('mounted called again'));\n}\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"En ting å merke seg er at det ikke eksisterer en onCreated. Denne type kode skal heller puttes i setup metoden. Siden denne vil kjøres en gang i starten for hver komponent. Så det å hente data og slikt hører hjemme her."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Composition API'et er valgfritt og kan også brukes sammen med options API'et. Composition API'et vil hjelpe med å holde tilhørende logikk i nærheten av hverandre, flytte kode til sine egne filer og gjenbruke kode. Men konseptene i Vue er det samme, du vil putte dataene dine i "},{"_type":"span","marks":["code"],"text":"ref"},{"_type":"span","marks":[],"text":" eller "},{"_type":"span","marks":["code"],"text":"reactive"},{"_type":"span","marks":[],"text":" og benytte "},{"_type":"span","marks":["code"],"text":"watch"},{"_type":"span","marks":[],"text":", "},{"_type":"span","marks":["code"],"text":"computed"},{"_type":"span","marks":[],"text":" og lifecycle hooks slik vi er vant til."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Fragment"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Du har kanskje lagt merke til at hver template kan kun ha ett child element. Dette er dumt fordi det forurenser DOM'et og gir deg mer kode og innrykk."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vel, ikke nå lengre."}]},{"_type":"code","code":"<template>\n  <h1>This is</h1>\n  <h2>completely</h2>\n  <h3>fine! :)</h3>\n</template>\n","language":"vue"},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Suspense"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Suspense er en ny funksjon som er introdusert i Vue 3. Når en komponent ikke er klar fordi den kjører asynkron kode, så gir Suspense deg en enkel måte å vise for eksempel en spinner."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"La oss si at vi har en async setup metode som henter noe data."}]},{"_type":"code","code":"async setup(){\n  const response = await fetch('someurl');\n  const data = await response.json();\n  return { data }\n}\n","language":"js"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Dette kan ta noe tid og komponenten vil ikke være klar med en gang. Da kan du foreldre komponenten bruke Suspense slik."}]},{"_type":"code","code":"<template>\n  <Suspense>\n    <template #default>\n      <MyChildComponenta/> //the component with async setup\n    </template>\n    <template #fallback>\n      <div>Loading...</div>\n    </template>\n  </Suspense>\n</template>\n","language":"vue"},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Teleport"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Merk at Teleport ble kalt for Portal inntil ganske nylig, hvis du leser andre artikler."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Teleport gir oss muligheten til å teleportere HTML kode til et annet sted utenfor komponenten."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Et sted i applikasjonen, så kan du ha et element med en id."}]},{"_type":"code","code":"<div id=\"arrival-spot\"></div>\n","language":"html"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Så kan du i hvilken som helt komponent peke til det elementet."}]},{"_type":"code","code":"<template>\n  <div>\n    <span>I'm still in my component</span>\n    <Teleport to=\"#arrival-spot\">\n      <span>Woho, I can teleport \\o/ </span>\n    </Teleport>\n  </div>\n</template>\n","language":"vue"},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Flere v-model"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Nå kan du ha flere v-models på dine komponenter når du vil binde forskjellige verdier."}]},{"_type":"code","code":"<HumanStats v-model:age=\"human.age\" v-model:height=\"human.height\"/>\n","language":"vue"},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Transition"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Bare en liten navneendring for transitions. v-enter-active, v-enter, v-enter-to var litt forvirrende. I Vue 3 er v-enter omdøpt til "},{"_type":"span","marks":["code"],"text":"v-enter-from"},{"_type":"span","marks":[],"text":" og v-leave til "},{"_type":"span","marks":["code"],"text":"v-leave-from"},{"_type":"span","marks":[],"text":". Dette gir mer mening, du har en klasse for når den er aktiv, en for hva den forandres fra og en for hva den forandres til."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Filter fjernet"}]},{"_type":"code","code":"<!-- before -->\n{{ date | format }}\n\n<!-- after -->\n{{ format(date) }}\n","language":"vue"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I Vue 2 hadde vi filer metoder som kunne brukes for å vise data. Dette er nå fjernet for å sørge for at klammeparentesene kun skal inneholde gyldig JavaScript. Computed properties eller metoder skal brukes i stedet."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"App configuration"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I Vue 2 hadde vi et globalt "},{"_type":"span","marks":["code"],"text":"Vue"},{"_type":"span","marks":[],"text":" objekt som vi konfigurerte. I Vue 3 er hver konfigurasjon satt direkte på hver Vue applikasjon definert med "},{"_type":"span","marks":["code"],"text":"createApp"},{"_type":"span","marks":[],"text":"."}]},{"_type":"code","code":"import { createApp } from 'vue'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(/* ... */)\napp.mixin(/* ... */)\napp.component(/* ... */)\napp.directive(/* ... */)\n\napp.mount('#app')\n","language":"js"},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Konklusjon"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Jeg gleder meg veldig til Vue 3. Jeg tror at dette vil sørge for at Vue er et av de beste web-rammeverkene som finnes."}]}],"tags":["Frontend"]}
{"_type":"post","_createdAt":"2020-03-06T00:00:00.000+01:00","image":{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/webapplikasjon-pluss-ci-cd-er-lik-hjerte/hero.webp"},"title":"Webapplikasjon + CI/CD = ❤","author":"Erlend Ekern og Stian Steinbakken","subtitle":"Er du lei av å gå gjennom en haug av manuelle steg for å få en kodeendring ut i produksjonsmiljøet ditt? Har du endt opp med en ikke-fungerende webapplikasjon fordi du glemte å kjøre testene dine?? Har disse problemene begynt å gå utover nattesøvnen din???","description":"I denne artikkelen gir vi en liten intro til kjerneprinsipper innen DevOps, CI/CD og AWS. Er du nysgjerrig? Les mer her >>","publishedAt":"2020-03-06T00:00:00.000+01:00","body":[{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"*Fortvil ikke!"},{"_type":"span","marks":[],"text":" I dag skal vi vise deg hvordan du kan automatisere alt som skjer fra «commit» på GitHub, frem til kodeendringen er blitt kvalitetskontrollert, gjort produksjonsklar og sendt ut til produksjonsmiljø og sluttbrukere 🧙!*"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi var nylig en liten tur i Trondheim og holdt et kurs for studenter ved linjeforeningene Abakus og Online på NTNU. Tema for kurset var buzzwords som «"},{"_type":"span","marks":["strong"],"text":"DevOps"},{"_type":"span","marks":[],"text":"», «Continuous Integration & Continuous Deployment» ("},{"_type":"span","marks":["strong"],"text":"CI/CD"},{"_type":"span","marks":[],"text":") og hvordan dette kan gjøres i praksis ved å bruke Amazon Web Services ("},{"_type":"span","marks":["strong"],"text":"AWS"},{"_type":"span","marks":[],"text":")."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi synes jo dette er ganske nyttige og interessante temaer, så hvorfor ikke dele det med så mange som mulig? I denne artikkelen skal vi derfor gi en liten intro til kjerneprinsipper innen DevOps, CI/CD og AWS, og deretter gå gjennom et praktisk eksempel for hvordan du enkelt kan sette opp en såkalt «CI/CD-pipeline» for en frontend-applikasjon ved hjelp av «Infrastructure as Code» (IaC) og skyløsninger i AWS."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I Capra er vi glad i AWS, og som vår foretrukne skyplattform var det jaggu naturlig å benytte oss av denne i både det overnevnte kurset og artikkelen du skummer over akkurat nå. Det er dog mulig å få satt opp lignende løsninger i de andre store skyplattformene (Azure, Google Cloud Platform, …) hvis man skulle ønske det."}]},{"_type":"block","markDefs":[{"_key":"e0f177f3b59f","_type":"link","href":"https://github.com/capraconsulting/aws-cloudformation-pipeline"}],"style":"normal","children":[{"_type":"span","marks":["strong"],"text":"All kode vi skal gå gjennom i dag ligger tilgjengelig på GitHub:\n"},{"_type":"span","marks":["strong","e0f177f3b59f"],"text":"https://github.com/capraconsulting/aws-cloudformation-pipeline"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Sååå, "},{"_type":"span","marks":["em"],"text":"without further ado"},{"_type":"span","marks":[],"text":", her er hva som står på dagens agenda 👇"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[{"_key":"70dacadede3e","_type":"link","href":"#ei-litta-intro-til-devops-cicd-og-iac"}],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":["70dacadede3e"],"text":"Ei litta intro til DevOps, CI/CD og IaC"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[{"_key":"e87bcb5da353","_type":"link","href":"#praktisk-eksempel"}],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":["e87bcb5da353"],"text":"Praktisk eksempel"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[{"_key":"472304a2b9ab","_type":"link","href":"#steg-0--hva-som-skal-lages-og-hva-du-trenger-fra-f%C3%B8r-av"}],"style":"normal","level":2,"listItem":"bullet","children":[{"_type":"span","marks":["472304a2b9ab"],"text":"Steg 0 – Hva som skal lages, og hva du trenger fra før av"}]},{"_type":"block","markDefs":[{"_key":"2c535d7915c3","_type":"link","href":"#steg-1--opprette-iac-fil"}],"style":"normal","level":2,"listItem":"bullet","children":[{"_type":"span","marks":["2c535d7915c3"],"text":"Steg 1 – Opprette IaC-fil"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[{"_key":"7d888347a39c","_type":"link","href":"#definere-metainformasjon"}],"style":"normal","level":3,"listItem":"bullet","children":[{"_type":"span","marks":["7d888347a39c"],"text":"Definere metainformasjon"}]},{"_type":"block","markDefs":[{"_key":"848105e92930","_type":"link","href":"#s3-b%C3%B8tter"}],"style":"normal","level":3,"listItem":"bullet","children":[{"_type":"span","marks":["848105e92930"],"text":"S3-bøtter"}]},{"_type":"block","markDefs":[{"_key":"4fe40754ae49","_type":"link","href":"#github-integrasjon"}],"style":"normal","level":3,"listItem":"bullet","children":[{"_type":"span","marks":["4fe40754ae49"],"text":"GitHub-integrasjon"}]},{"_type":"block","markDefs":[{"_key":"c476ed7b8466","_type":"link","href":"#codebuild-prosjekt"}],"style":"normal","level":3,"listItem":"bullet","children":[{"_type":"span","marks":["c476ed7b8466"],"text":"CodeBuild-prosjekt"}]},{"_type":"block","markDefs":[{"_key":"ad7319e1db70","_type":"link","href":"#codepipeline"}],"style":"normal","level":3,"listItem":"bullet","children":[{"_type":"span","marks":["ad7319e1db70"],"text":"CodePipeline"}]},{"_type":"block","markDefs":[{"_key":"ba4fd1fa4e48","_type":"link","href":"#roller-og-rettigheter"}],"style":"normal","level":3,"listItem":"bullet","children":[{"_type":"span","marks":["ba4fd1fa4e48"],"text":"Roller og rettigheter"}]},{"_type":"block","markDefs":[{"_key":"641d496b45d0","_type":"link","href":"#steg-2--definere-byggesteget"}],"style":"normal","level":2,"listItem":"bullet","children":[{"_type":"span","marks":["641d496b45d0"],"text":"Steg 2 – Definere byggesteget"}]},{"_type":"block","markDefs":[{"_key":"5333a473909d","_type":"link","href":"#steg-3--sette-det-hele-sammen"}],"style":"normal","level":2,"listItem":"bullet","children":[{"_type":"span","marks":["5333a473909d"],"text":"Steg 3 – Sette det hele sammen"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[{"_key":"cbe4ff2c2405","_type":"link","href":"#s%C3%A5-hva-har-vi-l%C3%A6rt"}],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":["cbe4ff2c2405"],"text":"Så, hva har vi lært?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Ei litta intro til DevOps, CI/CD og IaC"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"DevOps er et noe flytende begrep, og mange opererer med ulike definisjoner av hva det innebærer. I stor grad handler DevOps om å få to tradisjonelt isolerte grupper, utviklere («Development») og driftere («Operations»), til å samarbeide og kommunisere bedre, og jobbe sammen mot et felles mål: få ut hyppige kodeendringer til sluttbrukere på en effektiv, stabil og sikker måte. I praksis innebærer dette ofte å bygge en IT-kultur rundt samarbeid, automatisering, hyppige og små kodeendringer og delt eierskap."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det er mange prinsipper som inngår i DevOps, men i praksis er det spesielt tre utviklingspraksiser og konsepter som muliggjør mye av DevOps-filosofien:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":["strong"],"text":"Continuous Integration (CI)"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\nContinuous Integration går ut på å hyppig integrere koden sin inn i «mainline» (ofte «master»-branchen din på GitHub), og automatisk bygge og teste koden så fort endringer er gjort. Å integrere koden oftere skal gjøre at du raskt oppdager og kan rette opp i feil. Hyppig integrering gjør også at ingen beveger seg for langt fra mainline slik at det ikke tar for lang tid å integrere inn igjen. På denne måten unngår du konflikter, og reduserer omfanget av avhengigheter mellom utviklere."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":["strong"],"text":"Continuous Deployment (CD)"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\nContinuous Deployment går ut på at kode som har bestått alle tester og andre kvalitetskontroller automatisk går ut til et produksjonsmiljø helt uten menneskelig interaksjon. Kombinert med Continuous Integration blir dette ofte kalt CI/CD."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":["strong"],"text":"Infrastructure as Code (IaC)"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\nInfrastructure as Code baserer seg på å definere den underliggende infrastrukturen til et system eller en applikasjon i «template»-filer (typisk YAML- eller JSON-filer). Dette gjør det mulig å ha versjonkontroll på infrastrukturen til applikasjonen, samt åpner dørene for å automatisk opprette, oppdatere og slette infrastruktur."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Praktisk eksempel"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Nå som vi har fått etablert litt kontekst, la oss ta deg med på en reise til den store sky for en aldri så liten CI/CD-fiesta. Ved hjelp av kun 4 ("},{"_type":"span","marks":["em"],"text":"fire, four, cuatro!!!"},{"_type":"span","marks":[],"text":") enkle steg skal vi gå gjennom et konkret eksempel på hvordan du kan få en enkel statisk nettside ut på nett ved hjelp av AWS, IaC og CI/CD."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Steg 0 – Hva som skal lages, og hva du trenger fra før av"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I dette praktiske eksempelet skal vi bygge applikasjonen vist i figuren under:\n"}]},{"_type":"image","_sanityAsset":"image@file:////Users/antonlilleby/code/capra-web/studio/assets/images/webapplikasjon-pluss-ci-cd-er-lik-hjerte/overview.webp","alt":"Oversikt"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det vi ønsker å sitte igjen med til slutt er en «pipeline» bygget opp av de følgende stegene:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"Vi sjekker koden vår inn i en master-branch på GitHub."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"AWS CodePipeline henter ut koden og gjør den "},{"_type":"span","marks":["strong"],"text":"automatisk"},{"_type":"span","marks":[],"text":" produksjonsklar ved bruk av AWS CodeBuild."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"number","children":[{"_type":"span","marks":[],"text":"Dersom koden går gjennom alle steg for kvalitetsikring, legges koden ut i produksjonsmiljøet i AWS S3, hvor den så vil være tilgjengelig for sluttbrukerne. Alt dette "},{"_type":"span","marks":["strong"],"text":"automatisk"},{"_type":"span","marks":[],"text":"."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"(… nevnte vi at alt dette skal være "},{"_type":"span","marks":["strong"],"text":"automatisk"},{"_type":"span","marks":[],"text":"? 🤔)"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Det kreves ikke mye for å komme i gang, du trenger kun:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[{"_key":"e7e8c518c19e","_type":"link","href":"https://github.com/join"}],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"en GitHub-konto"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n(registrer deg her: "},{"_type":"span","marks":["e7e8c518c19e"],"text":"https://github.com/join"},{"_type":"span","marks":[],"text":")"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[{"_key":"fc8d6f611caa","_type":"link","href":"https://portal.aws.amazon.com/billing/signup#/start"}],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"en AWS-konto"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\n(registrer deg her: "},{"_type":"span","marks":["fc8d6f611caa"],"text":"https://portal.aws.amazon.com/billing/signup#/start"},{"_type":"span","marks":[],"text":")"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"… og (litt) tid ⌚"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[{"_key":"59d52d816dac","_type":"link","href":"https://aws.amazon.com/free/?all-free-tier.sort-by=item.additionalFields.SortRank&all-free-tier.sort-order=asc"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"AWS har en egen «free tier» som gjør at du slipper å bruke penger på flere av deres tjenester (én gratis CodePipeline, 100 minutter med CodeBuild-prosjekter og 5 GB gratis lagring i S3 for å nevne et par relevante). Mer informasjon finner du "},{"_type":"span","marks":["59d52d816dac"],"text":"her"},{"_type":"span","marks":[],"text":", men for å sette det litt i perspektiv: under CI/CD-kurset vi hadde i januar satte vi opp 80 (!) pipelines i tillegg til en hel del ekstra ressurser, og i løpet av et par timer kostet alt dette ikke noe mer enn 70 NOK. Det er altså ikke snakk om store utgifter hvis du skulle ende opp med å gå litt utover gratistilbudet."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi skal i hovedsak benytte oss av fire AWS-tjenester, så her følger en lynrask introduksjon av hver av dem:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":["strong"],"text":"AWS CloudFormation"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\nCloudFormation er AWS-tjenesten du ofte bruker for Infrastructure as Code. I CloudFormation skriver du eksplisitt hvilke ressurser du ønsker å opprette, hvordan disse skal interagere, hvilke tilganger de skal ha, og alt annet som følger med opprettelse av infrastruktur i skyen."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":["strong"],"text":"AWS Simple Storage Service (S3)"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\nS3 er en populær filagringstjeneste ofte brukt for mediafiler, loggfiler og statiske nettsider (HTML, CSS og JS). Du bruker S3 ved å opprette en mappe (også kalt en «bøtte») som du så kan lagre filer i."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":["strong"],"text":"AWS CodePipeline"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\nAWS CodePipeline er en tjeneste som tilbyr enkelt oppsett av pipelines for å raskt og automatisk kunne oppdatere applikasjonen og infrastrukturen din."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":["strong"],"text":"AWS CodeBuild"},{"_type":"span","marks":[],"text":"\n"},{"_type":"span","marks":[],"text":"\nAWS CodeBuild er en tjeneste for Continuous Integration som kompilerer kode og kjører tester for deg, og produserer programvarepakker (også kalt artifakter) som er klare for produksjonsetting."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[{"_key":"2b21eb0efbec","_type":"link","href":"https://github.com/capraconsulting/aws-cloudformation-pipeline"},{"_key":"b6483850ea44","_type":"link","href":"https://github.com/capraconsulting/aws-cloudformation-pipeline/blob/master/template.yml"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"I de neste stegene velger du selv om du ønsker å opprette et GitHub-repository selv, gjenbruke noe frontend-kode du har fra før av eller «forke» og ta utgangspunkt i "},{"_type":"span","marks":["2b21eb0efbec"],"text":"det ferdige repoet som vi linket til over"},{"_type":"span","marks":[],"text":". Du bør uansett ta en titt på den endelige template-fila, "},{"_type":"span","marks":["b6483850ea44"],"text":"template.yml"},{"_type":"span","marks":[],"text":", da vi i artikkelen utelater noen repetitive og mindre viktige seksjoner."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Steg 1 – Opprette IaC-fil"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Når du bruker CloudFormation oppretter du en såkalt «stack». Du kan se på stacken som en spesifikk instans av template-filen. Hvis for eksempel ønsker å slette alt av ressurser som har blitt opprettet ved bruk av en gitt template-fil, kan du enkelt og greit slette den respektive CloudFormation-stacken istedenfor å manuelt lete deg gjennom AWS sine nettsider etter S3-bøtter, CodeBuild-prosjekter, roller, «policies» og så videre som du ønsker å slette."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Koden i CloudFormation skrives enten i YAML- eller JSON-filer, og i dette eksempelet har vi valgt å benytte oss av YAML."}]},{"_type":"block","markDefs":[],"style":"h4","children":[{"_type":"span","marks":[],"text":"Definere metainformasjon"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Første steg er å åpne en ny fil "},{"_type":"span","marks":["code"],"text":"template.yml"},{"_type":"span","marks":[],"text":", og definere litt metainformasjon om selve filen:"}]},{"_type":"code","code":"# template.yml\n\nAWSTemplateFormatVersion: 2010-09-09\nDescription: >-\n  Creates an CodePipeline which builds a static webpage from a GitHub repository, and uploads the static files to an S3 bucket\n","language":"yml"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Da AWS i ny og ne oppdaterer formatet de forventer på infrastrukturfilene, må du i hver slik fil eksplisitt nevne hvilken versjon du bruker. Per idag er versjon "},{"_type":"span","marks":["code"],"text":"2010-09-09"},{"_type":"span","marks":[],"text":" både nyeste og eneste versjon du kan spesifisere."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Videre må vi definere et par parametere som er nødvendige for at AWS skal kunne kommunisere med GitHub:"}]},{"_type":"code","code":"# template.yml\n\n# { ... utelatt kode ... }\n\n# Her setter du opp hvilke parametere du ønsker å sende inn\n# til template-filen før en CloudFormation-stack opprettes\nParameters:\n  GitHubOAuthToken:\n    Type: String\n    NoEcho: true # Maskerer tokenet ditt med ***\n    MinLength: 40\n    MaxLength: 40\n    AllowedPattern: '[a-z0-9]*'\n    Description: The OAuth token used to connect to GitHub\n  GitHubOwner:\n    Type: String\n    AllowedPattern: '[A-Za-z0-9_-]+'\n    Description: The owner of the GitHub repository\n  GitHubRepo:\n    Type: String\n    Description: The name of the GitHub repository\n  GitHubBranch:\n    Type: String\n    Default: master\n    AllowedPattern: '[A-Za-z0-9_/-]+'\n    Description: The name of the GitHub repository branch that should trigger the pipeline\n","language":"yml"},{"_type":"block","markDefs":[{"_key":"b1b07744478a","_type":"link","href":"https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"For at pipelinen vi senere skal sette opp skal få med seg endringer i ditt GitHub-repository, trenger den først og fremst en nøkkel – et GitHub OAuth token. Denne nøkkelen gir AWS tilgang til å lese data fra repository-et ditt. Ved å følge "},{"_type":"span","marks":["b1b07744478a"],"text":"denne guiden"},{"_type":"span","marks":[],"text":" på GitHub sine nettsider kan du generere ditt eget GitHub OAuth token med bare et par klikk. Du trenger kun å huke av for tilgang til "},{"_type":"span","marks":["code"],"text":"repo"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["code"],"text":"admin:repo_hook"},{"_type":"span","marks":[],"text":". Behandle denne nøkkelen som sensitiv data da den gir tilgang til repository-ene på GitHub-kontoen din."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I tillegg må infrastrukturfilen inneholde informasjon om repository-et du ønsker å knytte pipelinen opp mot. De nødvendige feltene her er brukernavn til eier av og navn på repository-et, og navn på branch-en som pipelinen skal lytte på. Vi har mulighet til å hardkode alt dette inn i filen vår, men for å gjøre malen gjenbrukbar – og enklere å vedlikeholde – setter vi opp parametere som du sender inn til templatefilen når du ønsker å bruke den."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Nå som “formalitetene” er unnagjort kan vi endelig bevege oss over til den "},{"_type":"span","marks":["strong"],"text":"SPENNENDE"},{"_type":"span","marks":[],"text":" delen av CloudFormation – nemlig "},{"_type":"span","marks":["code"],"text":"Resources"},{"_type":"span","marks":[],"text":"-delen. Det er her du definerer alle AWS-ressursene som du ønsker at CloudFormation skal opprette for deg."}]},{"_type":"block","markDefs":[],"style":"h4","children":[{"_type":"span","marks":[],"text":"S3-bøtter"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Vi begynner med å opprette S3-bøttene vi kommer til å trenge. Vi oppretter disse på følgende måte:"}]},{"_type":"code","code":"# template.yml\n\n# { ... utelatt kode ... }\n\nResources:\n  FrontendBucket:\n    Type: 'AWS::S3::Bucket'\n    Properties:\n      AccessControl: PublicRead\n      WebsiteConfiguration:\n        IndexDocument: index.html\n        ErrorDocument: index.html\n    DeletionPolicy: Delete\n\n  PipelineBucket:\n    Type: 'AWS::S3::Bucket'\n    Properties:\n      VersioningConfiguration:\n        Status: Enabled\n    DeletionPolicy: Delete\n","language":"yml"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her setter vi opp to bøtter: én som er offentlig tilgjengelig, og konfigurert til å fungere som en webserver (det vil si at du kan besøke "},{"_type":"span","marks":["code"],"text":"http://<bucket_name>.s3-website.<region>.amazonaws.com/"},{"_type":"span","marks":[],"text":" og automatisk bli sendt til "},{"_type":"span","marks":["code"],"text":"index.html"},{"_type":"span","marks":[],"text":"), og én som blir brukt av CodePipeline til å lagre kildekode den har hentet fra GitHub. Det er den førstnevnte som skal servere frontend-applikasjonen din. I tillegg setter vi bøttene opp slik at de vil bli slettet når du sletter CloudFormation-stacken ("},{"_type":"span","marks":["em"],"text":"NB: bøttene slettes bare hvis de er tomme. Du bør derfor manuelt tømme bøttene før du sletter stacken"},{"_type":"span","marks":[],"text":")."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Merk at navnene "},{"_type":"span","marks":["code"],"text":"FrontendBucket"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["code"],"text":"PipelineBucket"},{"_type":"span","marks":[],"text":" kan være navngitt helt vilkårlig, og de påvirker ikke navnet på de faktiske AWS-ressursene som blir opprettet – de eksisterer kun for å kunne referere til ressursene internt i templatefilen (og for ordens og selvdokumenterings skyld er det da gunstig å bruke intuitive og deskriptive navn). Siden vi nå ikke har gitt eksplisitte navn til ressursene vil CloudFormation automatisk gjøre dette for oss når ressursene blir opprettet."}]},{"_type":"block","markDefs":[],"style":"h4","children":[{"_type":"span","marks":[],"text":"GitHub-integrasjon"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Videre er det på tide å sette opp GitHub-integrasjonen vår:"}]},{"_type":"code","code":"# template.yml\n\n# { ... utelatt kode ... }\n\n  PipelineWebhook:\n    Type: 'AWS::CodePipeline::Webhook'\n    Properties:\n      Authentication: GITHUB_HMAC\n      AuthenticationConfiguration:\n        SecretToken: !Ref GitHubOAuthToken\n      Filters:\n        - JsonPath: $.ref\n          MatchEquals: 'refs/heads/{Branch}'\n      TargetPipeline: !Ref CodePipeline\n      TargetAction: GitHubSource\n      TargetPipelineVersion: !GetAtt CodePipeline.Version\n      RegisterWithThirdParty: true\n","language":"yml"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her setter vi opp en «webhook» som lar CodePipeline knytte seg opp mot vårt GitHub-repository. Legg merke til kode som "},{"_type":"span","marks":["code"],"text":"!Ref CodePipeline"},{"_type":"span","marks":[],"text":", "},{"_type":"span","marks":["code"],"text":"!Ref GitHubOAuthToken"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["code"],"text":"!GetAtt CodePipeline.Version"},{"_type":"span","marks":[],"text":". Slike kommandoer lar oss referere til ressurser som er definert tidligere (eller senere) i templatefilen vår."}]},{"_type":"block","markDefs":[],"style":"h4","children":[{"_type":"span","marks":[],"text":"CodeBuild-prosjekt"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Nå skal vi sette opp CodeBuild-prosjektet vårt. CodeBuild vil være ansvarlig for «byggesteget» i pipelinen – altså kommandoer som "},{"_type":"span","marks":["code"],"text":"npm run test"},{"_type":"span","marks":[],"text":", "},{"_type":"span","marks":["code"],"text":"npm run build"},{"_type":"span","marks":[],"text":", og lignende. Dersom koden passerer alle tester og kvalitetskontroller, er CodeBuild også ansvarlig for å laste opp den produksjonsklare frontend-applikasjonen vår til S3-bøtta vi opprettet tidligere."}]},{"_type":"code","code":"# template.yml\n\n# { ... utelatt kode ... }\n\n  CodeBuildProject:\n    Type: 'AWS::CodeBuild::Project'\n    Properties:\n      ServiceRole: !Ref CodeBuildRole\n      Artifacts:\n        Type: CODEPIPELINE\n      Environment:\n        Type: LINUX_CONTAINER\n        ComputeType: BUILD_GENERAL1_SMALL\n        Image: 'aws/codebuild/amazonlinux2-x86_64-standard:2.0-19.11.26'\n        EnvironmentVariables:\n          - Name: FRONTEND_BUCKET_NAME\n            Type: PLAINTEXT\n            Value: !Ref FrontendBucket\n      Source:\n        Type: CODEPIPELINE\n      TimeoutInMinutes: 10\n","language":"yml"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her sier vi at vi ønsker at CodeBuild skal kjøre byggesteget vårt i et Linux-miljø. Hver gang byggesteget kjøres vil et helt nytt og tomt miljø opprettes, og på denne måten sørger du for at koden alltid bygges i de samme omgivelsene – aldri noe mer “"},{"_type":"span","marks":["em"],"text":"But… it works on my machine"},{"_type":"span","marks":[],"text":"”. "},{"_type":"span","marks":["strong"],"text":"YAY!"},{"_type":"span","marks":[],"text":" 🙌"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Når du oppretter ressurser på AWS som har tilgang til hele AWS-kontoen din, ønsker du vanligvis å kun gi ressursen tilgang til de operasjonene som er helt nødvendige. På denne måten unngår du at ressursen for eksempel roter seg borti en produksjonsdatabase den ikke har noe med å gjøre. Her gir vi CodeBuild-prosjektet vårt en rolle, CodeBuildRole, som begrenser ressursens tilganger."}]},{"_type":"block","markDefs":[],"style":"h4","children":[{"_type":"span","marks":[],"text":"CodePipeline"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"For å knytte sammen hele sulamitten skal vi nå opprette en pipeline ved bruk av CodePipeline. Den lar oss enkelt sette opp de ulike stegene vi ønsker å utføre når en kodeendring skjer, sende data mellom disse stegene og visualisere det hele på en oversiktlig måte."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"I vårt tilfelle vil pipelinen bestå av de to stegene «Source» og «Build» som henholdsvis laster ned siste versjon av kildekoden fra GitHub og sender den videre til CodeBuild-prosjektet vårt. Hadde du hatt en mer avansert applikasjon kunne du her lagt til flere steg i pipelinen, for eksempel "},{"_type":"span","marks":["code"],"text":"Source → Build → Deploy to Test → Deploy to Stage → Deploy to Prod"},{"_type":"span","marks":[],"text":", eller lignende."}]},{"_type":"code","code":"# template.yml\n\n# { ... utelatt kode ... }\n\n  CodePipeline:\n    Type: 'AWS::CodePipeline::Pipeline'\n    Properties:\n      ArtifactStore:\n        Type: S3\n        Location: !Ref PipelineBucket\n      RestartExecutionOnUpdate: true\n      RoleArn: !GetAtt \n        - CodePipelineRole\n        - Arn\n      Stages:\n        - Name: Source\n          Actions:\n            - Name: GitHubSource\n              InputArtifacts: []\n              ActionTypeId:\n                Category: Source\n                Owner: ThirdParty\n                Provider: GitHub\n                Version: 1\n              OutputArtifacts:\n                - Name: SourceArtifact\n              Configuration:\n                Owner: !Ref GitHubOwner\n                Repo: !Ref GitHubRepo\n                Branch: !Ref GitHubBranch\n                PollForSourceChanges: false\n                OAuthToken: !Ref GitHubOAuthToken\n              RunOrder: 1\n        - Name: Build\n          Actions:\n            - Name: CodeBuild\n              InputArtifacts:\n                - Name: SourceArtifact\n              ActionTypeId:\n                Category: Build\n                Owner: AWS\n                Provider: CodeBuild\n                Version: 1\n              OutputArtifacts:\n                - Name: FrontendBundle\n              Configuration:\n                ProjectName: !Ref CodeBuildProject\n              RunOrder: 1\n","language":"yml"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her forteller vi CodePipeline at kildekode og diverse andre "},{"_type":"span","marks":["em"],"text":"artifakter"},{"_type":"span","marks":[],"text":" skal lagres i S3-bøtta vi definerte tidligere. I tillegg definerer vi hvilke steg vi ønsker å ha i pipelinen, og hvilke data hvert steg skal ha som input og/eller output."}]},{"_type":"block","markDefs":[],"style":"h4","children":[{"_type":"span","marks":[],"text":"Roller og rettigheter"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Et problem vi har nå, er at hverken CodePipeline eller CodeBuild har tilgang til å gjøre noe som helst med ressursene vi har opprettet. For å løse dette må vi gi begge ressursene en rolle, og knytte hver slik rolle opp mot en egen «policy». En policy kan sees på som tilgangene til rollen. Disse ønsker vi å begrense slik at rollene kun har tilgang til det som strengt tatt er nødvendig."}]},{"_type":"code","code":"# template.yml\n\n# { ... utelatt kode ... }\n\n  CodePipelinePolicy:\n    Type: 'AWS::IAM::ManagedPolicy'\n    Properties:\n      Description: Policy that gives CodePipeline access to the artifacts S3 bucket\n      Path: /\n      PolicyDocument:\n        Version: 2012-10-17\n        Statement:\n          - Sid: AllowS3Access\n            Effect: Allow\n            Action: 's3:*'\n            Resource:\n              - !Sub 'arn:aws:s3:::${PipelineBucket}'\n              - !Sub 'arn:aws:s3:::${PipelineBucket}/*'\n          - Sid: AllowAccessToLogs\n            Effect: Allow\n            Action: 'logs:*'\n            Resource: '*'\n          - Sid: AllowAccessToCodeBuild\n            Effect: Allow\n            Action: 'codebuild:*'\n            Resource:\n              - !Sub 'arn:aws:codebuild:*:*:project/${CodeBuildProject}'\n              - !Sub 'arn:aws:codebuild:*:*:project/${CodeBuildProject}/*'\n  CodePipelineRole:\n    Type: 'AWS::IAM::Role'\n    Properties:\n      AssumeRolePolicyDocument:\n        Version: 2012-10-17\n        Statement:\n          Effect: Allow\n          Principal:\n            Service: codepipeline.amazonaws.com\n          Action: 'sts:AssumeRole'\n      ManagedPolicyArns:\n        - !Ref CodePipelinePolicy\n","language":"yml"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Legg merke til at vi bare har vist hvordan vi definer CodePipeline sin rolle og policy. Tilsvarende må gjøres for CodeBuild, men vi utelater dette i artikkelen for korthets skyld. (Fullstendig templatefil ligger i repository-et vi har linket til lengre opp)."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Steg 2 – Definere byggesteget"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"For å fortelle CodeBuild hvilke kommandoer som skal kjøres, oppretter vi en fil kalt "},{"_type":"span","marks":["code"],"text":"buildspec.yml"},{"_type":"span","marks":[],"text":". CodeBuild-prosjektet vårt vil automatisk lese denne filen, og filen inneholder diverse informasjon om miljøet applikasjonen skal bygges i og kommandoene du ønsker å kjøre. Byggespesifikasjonene deles inn i steg som "},{"_type":"span","marks":["code"],"text":"install"},{"_type":"span","marks":[],"text":", "},{"_type":"span","marks":["code"],"text":"pre-build"},{"_type":"span","marks":[],"text":", "},{"_type":"span","marks":["code"],"text":"build"},{"_type":"span","marks":[],"text":" og "},{"_type":"span","marks":["code"],"text":"post-build"},{"_type":"span","marks":[],"text":"."}]},{"_type":"code","code":"# buildspec.yml\n\nversion: 0.2\n\nphases:\n  install:\n    runtime-versions:\n      nodejs: 10\n    commands:\n      - npm install\n  build:\n    commands:\n      - npm run lint\n      - npm run test\n      - npm run build\n      - aws s3 sync ./dist s3://$FRONTEND_BUCKET_NAME --delete --acl \"public-read\"\n","language":"yml"},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Her bruker vi kommandoen "},{"_type":"span","marks":["code"],"text":"npm install"},{"_type":"span","marks":[],"text":" for å installere applikasjonen vår i et miljø med "},{"_type":"span","marks":["code"],"text":"Node.js"},{"_type":"span","marks":[],"text":" versjon 10, i install-fasen. På samme måte bygger vi applikasjonen vår med kommandoen "},{"_type":"span","marks":["code"],"text":"npm run build"},{"_type":"span","marks":[],"text":" i build-fasen. Legg også merke til at vi her benytter miljøvariablen "},{"_type":"span","marks":["code"],"text":"$FRONTEND_BUCKET_NAME"},{"_type":"span","marks":[],"text":" som vi definerte tidligere i "},{"_type":"span","marks":["code"],"text":"template.yml"},{"_type":"span","marks":[],"text":" filen vår. "},{"_type":"span","marks":["em"],"text":"Shout-out til deg for 15 minutter siden for å ha gjort denne variabelen tilgjengelig for oss!"},{"_type":"span","marks":[],"text":" Denne vil være tilgjengelig for CodeBuild mens den bygger, og det er innmari digg å slippe å manuelt hardkode dette (automatisering ❗)."}]},{"_type":"block","markDefs":[],"style":"h3","children":[{"_type":"span","marks":[],"text":"Steg 3 – Sette det hele sammen"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Nå som vi har satt opp ressursene vi trenger, gitt de roller og tilgangene de behøver, og fortalt CodeBuild hvordan prosjektet skal bygges, kan vi endelig sy det hele sammen og få det opp i skyen. For å gjøre dette kan du følge disse stegene:"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[{"_key":"a5ab5818fbd3","_type":"link","href":"https://console.aws.amazon.com/"}],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Naviger deg til "},{"_type":"span","marks":["a5ab5818fbd3"],"text":"AWS-konsollen"},{"_type":"span","marks":[],"text":" og logg inn."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Naviger til CloudFormation (det enkleste er ofte å søke etter tjenesten)."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Trykk på den oransje knappen “"},{"_type":"span","marks":["em"],"text":"Create stack"},{"_type":"span","marks":[],"text":"”."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Velg “"},{"_type":"span","marks":["em"],"text":"Template is ready"},{"_type":"span","marks":[],"text":"” og “"},{"_type":"span","marks":["em"],"text":"Upload Template File"},{"_type":"span","marks":[],"text":"”."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Last opp filen "},{"_type":"span","marks":["code"],"text":"template.yml"},{"_type":"span","marks":[],"text":" vi har jobbet med gjennom artikkelen, og trykk “"},{"_type":"span","marks":["em"],"text":"Next"},{"_type":"span","marks":[],"text":"”."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Fyll inn parameterene vi definerte helt i starten. Bruk ditt eget Github OAuth token, brukernavn, og så videre."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Hopp over neste side og trykk “"},{"_type":"span","marks":["em"],"text":"Next"},{"_type":"span","marks":[],"text":"” (vanligvis vil det være god praksis å legge på diverse «tags», men vi hopper over dette steget for å holde instruksjonene korte og konsise)."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Se over stacken din og huk av den nederste checkboxen for “"},{"_type":"span","marks":["em"],"text":"I acknowledge that AWS CloudFormation might create IAM resources."},{"_type":"span","marks":[],"text":"”."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","level":1,"listItem":"bullet","children":[{"_type":"span","marks":[],"text":"Trykk på “"},{"_type":"span","marks":["em"],"text":"Create stack"},{"_type":"span","marks":[],"text":"”."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"\n"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Sånn! Nå provisjonerer CloudFormation ressursene vi har bedt om, og stacken opprettes. Når denne prosessen er ferdig skal du kunne åpne “"},{"_type":"span","marks":["em"],"text":"Outputs"},{"_type":"span","marks":[],"text":"”-fanen og se den offentlige linken til produksjonsmiljøet for frontend-applikasjonen din, samt navnet på de to S3-bøttene som har blitt opprettet."}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Nå som alt er satt opp, vil CodePipeline hente nyeste kildekode og CodeBuild bygge applikasjonen din hver gang du pusher til master, og hvis alle stegene passerer, går applikasjonen ut i produksjonsmiljøet i S3 – helt "},{"_type":"span","marks":["strong"],"text":"automagisk"},{"_type":"span","marks":[],"text":"! Dette sparer oss utviklere masse tid, og gir endebrukere tilgang på ny funksjonalitet så fort den er klar."}]},{"_type":"block","markDefs":[{"_key":"0ef902c28219","_type":"link","href":"https://console.aws.amazon.com/codesuite/codepipeline/pipelines"}],"style":"normal","children":[{"_type":"span","marks":[],"text":"Ta en tur innom "},{"_type":"span","marks":["0ef902c28219"],"text":"CodePipeline"},{"_type":"span","marks":[],"text":" og sjekk ut din splitter nye pipeline!"}]},{"_type":"block","markDefs":[],"style":"h2","children":[{"_type":"span","marks":[],"text":"Så, hva har vi lært?"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"Du har nå fått en innføring i hvordan du kan bruke CloudFormation, CodeBuild, CodePipeline og S3 i AWS til å implementere en fullt fungerende pipeline som automatisk produksjonsetter koden din når du gjør endringer på master-branchen i ditt repository. "},{"_type":"span","marks":["strong"],"text":"Heftig!"},{"_type":"span","marks":[],"text":" Her er det mye rom for å utvide funksjonaliteten, så neste gang du oppretter et prosjekt kan du gå helt berserk og gjøre hva enn du vil. Lykke til!"}]},{"_type":"block","markDefs":[],"style":"normal","children":[{"_type":"span","marks":[],"text":"(Det er et par momenter vi har unnlatt å dekke for å begrense omfanget av artikkelen, men de kan være interessante å se på hvis du vil arbeide videre med pipelinen eller ønsker å utforske AWS litt mer: AWS CloudFront («caching» av nettside), AWS Certificate Manager (SSL-sertifikater), AWS Route53 (domenenavn) og caching av "},{"_type":"span","marks":["code"],"text":"npm install"},{"_type":"span","marks":[],"text":" i byggesteget, for å nevne et par)."}]}],"tags":["DevOps"]}
